Compiled Ruleset @609 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L21779, [0], [], []]
	--guard:L21779:
		spec           [1, 1]
		jump           [L21772, [0], [], []]
	--body:L21772:
		spec           [1, 42]
		commit         ["_init", 0]
		newmem       [1, 0, 0]
		newmem       [2, 0, 0]
		newmem       [3, 0, 0]
		newmem       [4, 0, 0]
		newmem       [5, 0, 0]
		newmem       [6, 0, 0]
		loadruleset    [1, @601]
		loadruleset    [2, @602]
		loadruleset    [3, @603]
		loadruleset    [4, @604]
		loadruleset    [5, @605]
		loadruleset    [6, @606]
		loadruleset    [0, @608]
		newatom      [7, 1, 'module'_1]
		newatom      [8, 1, 'generator'_1]
		newatom      [9, 1, 'string'.'use'_0]
		newatom      [10, 2, 'module'_1]
		newatom      [11, 2, 'types'_1]
		newatom      [12, 2, 'module'_1]
		newatom      [13, 2, 'types_'_1]
		newatom      [14, 3, 'module'_1]
		newatom      [15, 3, 'syntax'_1]
		newatom      [16, 3, 'module'_1]
		newatom      [17, 3, 'syntax_'_1]
		newatom      [18, 3, 'functional'.'use'_0]
		newatom      [19, 4, 'module'_1]
		newatom      [20, 4, 'list_ext'_1]
		newatom      [21, 5, 'module'_1]
		newatom      [22, 5, 'int'_1]
		newatom      [23, 6, 'module'_1]
		newatom      [24, 6, 'string_ext'_1]
		newatom      [25, 0, 'main'_0]
		alloclink    [26, 7, 0]
		alloclink    [27, 8, 0]
		alloclink    [28, 10, 0]
		alloclink    [29, 11, 0]
		alloclink    [30, 12, 0]
		alloclink    [31, 13, 0]
		alloclink    [32, 14, 0]
		alloclink    [33, 15, 0]
		alloclink    [34, 16, 0]
		alloclink    [35, 17, 0]
		alloclink    [36, 19, 0]
		alloclink    [37, 20, 0]
		alloclink    [38, 21, 0]
		alloclink    [39, 22, 0]
		alloclink    [40, 23, 0]
		alloclink    [41, 24, 0]
		unifylinks     [26, 27, 1]
		unifylinks     [28, 29, 2]
		unifylinks     [30, 31, 2]
		unifylinks     [32, 33, 3]
		unifylinks     [34, 35, 3]
		unifylinks     [36, 37, 4]
		unifylinks     [38, 39, 5]
		unifylinks     [40, 41, 6]
		loadmodule     [1, "string"]
		loadmodule     [3, "functional"]
		proceed        []


Compiled Ruleset @608 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 42]
		findatom     [1, 0, 'main'_0]
		commit         ["_main", 0]
		removeatom     [1, 0, 'main'_0]
		newmem       [2, 0, 0]
		loadruleset    [2, @607]
		newatom      [3, 2, 'io'.'use'_0]
		newatom      [4, 2, 'string'.'use'_0]
		newatom      [5, 2, 'ast'.'use'_0]
		newatom      [6, 2, 'subproc'.'use'_0]
		newatom      [7, 2, 'functional'.'use'_0]
		newatom      [8, 2, 'syntax'.'use'_0]
		newatom      [9, 2, 'types'.'use'_0]
		newatom      [10, 2, 'generator'.'use'_0]
		newatom      [11, 2, 'list_ext'.'use'_0]
		newatom      [12, 2, 'string_ext'.'use'_0]
		newatom      [13, 2, 'int'.'use'_0]
		newatom      [14, 2, 'parallelism'_1]
		newatom      [15, 2, 'false'_1]
		newatom      [16, 2, 'io'.'print'_3]
		newatom      [17, 2, 'io'.'stdout'_1]
		newatom      [18, 2, 'io'.'free_port'_1]
		newatom      [19, 2, 'string'.'concat'_3]
		newatom      [20, 2, 'generator'.'generate_source'_2]
		newatom      [21, 2, 'program'_2]
		newatom      [22, 2, 'generator'.'generate_source'_3]
		newatom      [23, 2, 'type_db'_2]
		newatom      [24, 2, 'type_db'_1]
		newatom      [25, 2, 'add_suffix_to_fields'_2]
		newatom      [26, 2, 'map'_3]
		newatom      [27, 2, 'lambda'_3]
		newatom      [28, 2, 'type_from_ast'_2]
		newatom      [29, 2, 'map'_3]
		newatom      [30, 2, 'lambda'_3]
		newatom      [31, 2, 'translate_function'_2]
		newatom      [32, 2, 'distribute_program'_3]
		newatom      [33, 2, 'map'_3]
		newatom      [34, 2, 'lambda'_3]
		newatom      [35, 2, 'normalize_rule'_2]
		newatom      [36, 2, 'map'_3]
		newatom      [37, 2, 'lambda'_3]
		newatom      [38, 2, 'distribute'_2]
		newatom      [39, 2, 'peeler'_2]
		newatom      [40, 2, 'ast'.'read'_2]
		newatom      [41, 2, 'io'.'stdin'_1]
		newlink        [14, 0, 15, 0, 2]
		newlink        [16, 0, 17, 0, 2]
		newlink        [16, 1, 19, 2, 2]
		newlink        [16, 2, 18, 0, 2]
		newlink        [19, 0, 22, 2, 2]
		newlink        [19, 1, 20, 1, 2]
		newlink        [20, 0, 21, 1, 2]
		newlink        [21, 0, 29, 2, 2]
		newlink        [22, 0, 23, 1, 2]
		newlink        [22, 1, 24, 0, 2]
		newlink        [23, 0, 25, 1, 2]
		newlink        [25, 0, 26, 2, 2]
		newlink        [26, 0, 27, 2, 2]
		newlink        [26, 1, 32, 1, 2]
		newlink        [27, 0, 28, 0, 2]
		newlink        [27, 1, 28, 1, 2]
		newlink        [29, 0, 30, 2, 2]
		newlink        [29, 1, 32, 2, 2]
		newlink        [30, 0, 31, 0, 2]
		newlink        [30, 1, 31, 1, 2]
		newlink        [32, 0, 33, 2, 2]
		newlink        [33, 0, 34, 2, 2]
		newlink        [33, 1, 36, 2, 2]
		newlink        [34, 0, 35, 0, 2]
		newlink        [34, 1, 35, 1, 2]
		newlink        [36, 0, 37, 2, 2]
		newlink        [36, 1, 39, 1, 2]
		newlink        [37, 0, 38, 0, 2]
		newlink        [37, 1, 38, 1, 2]
		newlink        [39, 0, 40, 1, 2]
		newlink        [40, 0, 41, 0, 2]
		loadmodule     [2, "io"]
		loadmodule     [2, "string"]
		loadmodule     [2, "ast"]
		loadmodule     [2, "subproc"]
		loadmodule     [2, "functional"]
		loadmodule     [2, "syntax"]
		loadmodule     [2, "types"]
		loadmodule     [2, "generator"]
		loadmodule     [2, "list_ext"]
		loadmodule     [2, "string_ext"]
		loadmodule     [2, "int"]
		loadmodule     [2, "io"]
		loadmodule     [2, "io"]
		loadmodule     [2, "io"]
		loadmodule     [2, "string"]
		loadmodule     [2, "generator"]
		loadmodule     [2, "generator"]
		loadmodule     [2, "ast"]
		loadmodule     [2, "io"]
		freeatom       [1]
		proceed        []


Compiled Ruleset @607                                                                                                                                                                                                                                                                                                                                                                      
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'add_suffix_to_fields'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'add_suffix_to_fields'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'type'_4]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields'_2]
		removeatom     [3, 0, 'type'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'type'_4]
		newatom      [6, 0, 'add_suffix_to_fields'_5]
		newatom      [7, 0, 0_1]
		newatom      [8, 0, 'add_suffix_to_fields'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 8, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 3, 0]
		newlink        [5, 2, 6, 4, 0]
		newlink        [6, 0, 7, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		relink         [8, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_suffix_to_fields'_5]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields'_5]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		relink         [4, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'add_suffix_to_fields'_5]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [4, 1_1]
		iadd         [6, 5, 4]
		getfunc      [7, 6]
		allocatomindirect[8, 7]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields'_5]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [9, 0, 8]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'constructor'_4]
		newatom      [14, 0, 'add_suffix_to_fields_inner'_5]
		newatom      [15, 0, 'add_suffix_to_fields_inner'_5]
		newatom      [16, 0, 'add_suffix_to_fields'_5]
		newlink        [12, 0, 13, 3, 0]
		newlink        [12, 1, 16, 4, 0]
		relink         [12, 2, 1, 4, 0]
		relink         [13, 0, 3, 0, 0]
		newlink        [13, 1, 14, 4, 0]
		newlink        [13, 2, 15, 4, 0]
		newlink        [14, 0, 10, 0, 0]
		relink         [14, 1, 1, 1, 0]
		relink         [14, 2, 3, 1, 0]
		newlink        [14, 3, 15, 1, 0]
		newlink        [15, 0, 11, 0, 0]
		relink         [15, 2, 3, 2, 0]
		newlink        [15, 3, 16, 1, 0]
		newlink        [16, 0, 9, 0, 0]
		relink         [16, 2, 2, 1, 0]
		relink         [16, 3, 1, 3, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [8]
		freeatom       [5]
		freeatom       [4]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_suffix_to_fields_inner'_5]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields_inner'_5]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		relink         [4, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'add_suffix_to_fields_inner'_5]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields_inner'_5]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'add_suffix_to_fields_inner2'_5]
		newatom      [8, 0, 'add_suffix_to_fields_inner'_5]
		newlink        [6, 0, 7, 4, 0]
		newlink        [6, 1, 8, 4, 0]
		relink         [6, 2, 1, 4, 0]
		newlink        [7, 0, 4, 0, 0]
		relink         [7, 1, 1, 1, 0]
		relink         [7, 2, 2, 0, 0]
		newlink        [7, 3, 8, 1, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 2, 2, 1, 0]
		relink         [8, 3, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		deref        [2, 1, 2, 2]
		func           [2, 'apply'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		removeatom     [2, 0, 'apply'_3]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, 'add_suffix_to_fields_inner'_5]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 2, 1, 0]
		relink         [4, 3, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 57]
		findatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		derefatom    [13, 1, 0]
		isint          [13]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 0]
		deref        [3, 1, 2, 2]
		func           [3, 'variable'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [12, 2, 1]
		deref        [4, 2, 0, 2]
		func           [4, 'variable'_3]
		getlink      [9, 4, 1]
		getlink      [8, 4, 0]
		newlist      [14]
		addtolist      [14, 9]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 10]
		addtolist      [15, 11]
		addtolist      [15, 12]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 11]
		eqground       [14, 17]
		newlist      [18]
		addtolist      [18, 5]
		addtolist      [18, 6]
		addtolist      [18, 7]
		addtolist      [18, 8]
		addtolist      [18, 9]
		addtolist      [18, 10]
		addtolist      [18, 12]
		isground     [19, 17, 18]
		commit         ["_Radd", 0]
		newlist      [20]
		getlink      [21, 4, 1]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 3, 1]
		addtolist      [22, 23]
		removeatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [20, 0]
		removeground   [22, 0]
		removeatom     [13, 0]
		getlink      [24, 4, 1]
		insertconnectorsinnull[25, [24]]
		getlink      [26, 3, 1]
		insertconnectorsinnull[27, [26]]
		newlist      [28]
		getlink      [29, 4, 1]
		addtolist      [28, 29]
		newlist      [30]
		getlink      [31, 3, 1]
		addtolist      [30, 31]
		copyground   [32, 28, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		copyground   [35, 30, 0]
		getfromlist  [36, 35, 0]
		getfromlist  [37, 35, 1]
		newatom      [38, 0, 'variable'_3]
		newatom      [39, 0, '.'_3]
		newatom      [40, 0, 'variable'_3]
		alloclink    [41, 40, 1]
		alloclink    [42, 40, 0]
		alloclink    [43, 39, 2]
		alloclink    [44, 39, 1]
		alloclink    [45, 40, 2]
		alloclink    [46, 39, 0]
		alloclink    [47, 38, 2]
		alloclink    [48, 38, 1]
		alloclink    [49, 38, 0]
		getfromlist  [50, 33, 0]
		getfromlist  [51, 36, 0]
		getlink      [52, 3, 0]
		unifylinks     [49, 52, 0]
		unifylinks     [48, 51, 0]
		getlink      [53, 1, 4]
		unifylinks     [47, 53, 0]
		unifylinks     [46, 45, 0]
		getlink      [54, 2, 1]
		unifylinks     [44, 54, 0]
		getlink      [55, 1, 3]
		unifylinks     [43, 55, 0]
		getlink      [56, 4, 0]
		unifylinks     [42, 56, 0]
		unifylinks     [41, 50, 0]
		deleteconnectors[25, 34]
		deleteconnectors[27, 37]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		freeground     [28]
		freeground     [30]
		freeatom       [13]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 63]
		findatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 0]
		deref        [3, 1, 2, 2]
		func           [3, 'variable'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [12, 2, 1]
		deref        [4, 2, 0, 2]
		func           [4, 'variable'_3]
		getlink      [9, 4, 1]
		getlink      [8, 4, 0]
		newlist      [13]
		addtolist      [13, 9]
		newlist      [14]
		addtolist      [14, 5]
		addtolist      [14, 6]
		addtolist      [14, 7]
		addtolist      [14, 8]
		addtolist      [14, 10]
		addtolist      [14, 11]
		addtolist      [14, 12]
		isground     [15, 13, 14]
		newlist      [16]
		addtolist      [16, 11]
		neqground      [13, 16]
		newlist      [17]
		addtolist      [17, 5]
		addtolist      [17, 6]
		addtolist      [17, 7]
		addtolist      [17, 8]
		addtolist      [17, 9]
		addtolist      [17, 10]
		addtolist      [17, 12]
		isground     [18, 16, 17]
		commit         ["_Radd", 0]
		newlist      [19]
		getlink      [20, 3, 1]
		addtolist      [19, 20]
		newlist      [21]
		getlink      [22, 4, 1]
		addtolist      [21, 22]
		removeatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [21, 0]
		removeground   [19, 0]
		getlink      [23, 4, 1]
		insertconnectorsinnull[24, [23]]
		getlink      [25, 3, 1]
		insertconnectorsinnull[26, [25]]
		newlist      [27]
		getlink      [28, 3, 1]
		addtolist      [27, 28]
		newlist      [29]
		getlink      [30, 4, 1]
		addtolist      [29, 30]
		copyground   [31, 29, 0]
		getfromlist  [32, 31, 0]
		getfromlist  [33, 31, 1]
		copyground   [34, 27, 0]
		getfromlist  [35, 34, 0]
		getfromlist  [36, 34, 1]
		newatom      [37, 0, 'add_suffix_to_fields_inner2'_5]
		newatom      [38, 0, 'variable'_3]
		newatom      [39, 0, '.'_3]
		newatom      [40, 0, 'variable'_3]
		alloclink    [41, 40, 1]
		alloclink    [42, 40, 0]
		alloclink    [43, 39, 2]
		alloclink    [44, 40, 2]
		alloclink    [45, 39, 0]
		alloclink    [46, 38, 1]
		alloclink    [47, 38, 0]
		alloclink    [48, 37, 4]
		alloclink    [49, 39, 1]
		alloclink    [50, 37, 3]
		alloclink    [51, 38, 2]
		alloclink    [52, 37, 2]
		alloclink    [53, 37, 1]
		alloclink    [54, 37, 0]
		getfromlist  [55, 32, 0]
		getfromlist  [56, 35, 0]
		getlink      [57, 1, 0]
		unifylinks     [54, 57, 0]
		getlink      [58, 2, 1]
		unifylinks     [53, 58, 0]
		unifylinks     [52, 51, 0]
		unifylinks     [50, 49, 0]
		getlink      [59, 1, 4]
		unifylinks     [48, 59, 0]
		getlink      [60, 3, 0]
		unifylinks     [47, 60, 0]
		unifylinks     [46, 56, 0]
		unifylinks     [45, 44, 0]
		getlink      [61, 1, 3]
		unifylinks     [43, 61, 0]
		getlink      [62, 4, 0]
		unifylinks     [42, 62, 0]
		unifylinks     [41, 55, 0]
		deleteconnectors[24, 33]
		deleteconnectors[26, 36]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		freeground     [29]
		freeground     [27]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		deref        [3, 1, 2, 2]
		func           [3, 'variable'_3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_suffix_to_fields_inner2'_5]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [4, 0, 'variable'_3]
		newatom      [5, 0, 'string'.'concat'_3]
		newatom      [6, 0, 'string'.'from'_2]
		newatom      [7, 0, '[]'_1]
		relink         [4, 0, 3, 0, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [4, 2, 1, 4, 0]
		relink         [5, 0, 3, 1, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [7, 0, 1, 3, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'peeler'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		deref        [3, 2, 0, 1]
		func           [3, 'normal'_2]
		deref        [4, 3, 0, 2]
		func           [4, 'cell'_3]
		deref        [5, 4, 0, 0]
		func           [5, 'none'_1]
		commit         ["_Rpee", 0]
		removeatom     [1, 0, 'peeler'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeatom     [3, 0, 'normal'_2]
		removeatom     [4, 0, 'cell'_3]
		removeatom     [5, 0, 'none'_1]
		unify          [1, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 51]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'distribute'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [7, 4, 1, 2]
		func           [7, '.'_3]
		deref        [11, 7, 1, 0]
		func           [11, '[]'_1]
		deref        [10, 7, 0, 2]
		func           [10, 'cell'_3]
		deref        [15, 10, 0, 0]
		func           [15, 'none'_1]
		deref        [6, 4, 0, 2]
		func           [6, 'apply'_3]
		deref        [9, 6, 1, 2]
		func           [9, '.'_3]
		deref        [14, 9, 1, 0]
		func           [14, '[]'_1]
		deref        [13, 9, 0, 2]
		func           [13, 'apply'_3]
		deref        [16, 13, 0, 1]
		func           [16, 'symbol'_2]
		deref        [8, 6, 0, 1]
		func           [8, 'symbol'_2]
		deref        [12, 8, 0, 0]
		func           [12, "function"_1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, "="_1]
		commit         ["_Rdis", 0]
		removeatom     [1, 0, 'distribute'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [6, 0, 'apply'_3]
		removeatom     [8, 0, 'symbol'_2]
		removeatom     [13, 0, 'apply'_3]
		removeatom     [16, 0, 'symbol'_2]
		removeatom     [10, 0, 'cell'_3]
		removeatom     [15, 0, 'none'_1]
		removeatom     [5, 0, "="_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [12, 0, "function"_1]
		removeatom     [9, 0, '.'_3]
		removeatom     [14, 0, '[]'_1]
		removeatom     [7, 0, '.'_3]
		removeatom     [11, 0, '[]'_1]
		newatom      [17, 0, 'function'_4]
		relink         [17, 0, 16, 0, 0]
		relink         [17, 1, 13, 1, 0]
		relink         [17, 2, 10, 1, 0]
		relink         [17, 3, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [13]
		freeatom       [16]
		freeatom       [10]
		freeatom       [15]
		freeatom       [5]
		freeatom       [4]
		freeatom       [12]
		freeatom       [9]
		freeatom       [14]
		freeatom       [7]
		freeatom       [11]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 44]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'distribute'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [7, 4, 1, 2]
		func           [7, '.'_3]
		deref        [11, 7, 1, 0]
		func           [11, '[]'_1]
		deref        [10, 7, 0, 2]
		func           [10, 'cell'_3]
		deref        [14, 10, 0, 0]
		func           [14, 'none'_1]
		deref        [6, 4, 0, 2]
		func           [6, 'apply'_3]
		deref        [9, 6, 1, 2]
		func           [9, '.'_3]
		deref        [13, 9, 1, 0]
		func           [13, '[]'_1]
		deref        [8, 6, 0, 1]
		func           [8, 'symbol'_2]
		deref        [12, 8, 0, 0]
		func           [12, "type"_1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, "="_1]
		commit         ["_Rdis", 0]
		removeatom     [1, 0, 'distribute'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [6, 0, 'apply'_3]
		removeatom     [8, 0, 'symbol'_2]
		removeatom     [10, 0, 'cell'_3]
		removeatom     [14, 0, 'none'_1]
		removeatom     [5, 0, "="_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [12, 0, "type"_1]
		removeatom     [9, 0, '.'_3]
		removeatom     [13, 0, '[]'_1]
		removeatom     [7, 0, '.'_3]
		removeatom     [11, 0, '[]'_1]
		newatom      [15, 0, 'type'_3]
		relink         [15, 0, 9, 0, 0]
		relink         [15, 1, 10, 1, 0]
		relink         [15, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [10]
		freeatom       [14]
		freeatom       [5]
		freeatom       [4]
		freeatom       [12]
		freeatom       [9]
		freeatom       [13]
		freeatom       [7]
		freeatom       [11]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'normalize_rule'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'function'_4]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normalize_rule'_2]
		removeatom     [2, 0, 'function'_4]
		newatom      [3, 0, 'function'_4]
		newatom      [4, 0, 'normalize_args'_2]
		newatom      [5, 0, 'map'_3]
		newatom      [6, 0, 'lambda'_3]
		newatom      [7, 0, 'syntax'.'normalize'_2]
		newatom      [8, 0, 'syntax'.'rule_from_ast'_2]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		newlink        [3, 2, 5, 2, 0]
		relink         [3, 3, 1, 1, 0]
		relink         [4, 0, 2, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 2, 2, 0]
		newlink        [6, 0, 8, 0, 0]
		newlink        [6, 1, 7, 1, 0]
		newlink        [7, 0, 8, 1, 0]
		loadmodule     [0, "syntax"]
		loadmodule     [0, "syntax"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'normalize_rule'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'type'_3]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normalize_rule'_2]
		removeatom     [2, 0, 'type'_3]
		newatom      [3, 0, 'type'_3]
		newatom      [4, 0, 'map'_3]
		newatom      [5, 0, 'lambda'_3]
		newatom      [6, 0, 'syntax'.'normalize'_2]
		newatom      [7, 0, 'syntax'.'rule_from_ast'_2]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		relink         [3, 2, 1, 1, 0]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [5, 0, 7, 0, 0]
		newlink        [5, 1, 6, 1, 0]
		newlink        [6, 0, 7, 1, 0]
		loadmodule     [0, "syntax"]
		loadmodule     [0, "syntax"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'normalize_args'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normalize_args'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 27]
	--memmatch:
		spec           [1, 14]
		findatom     [1, 0, 'normalize_args'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [8, 5, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 5, 0, 2]
		func           [7, 'variable'_3]
		derefatom    [10, 7, 1]
		isstring       [10]
		derefatom    [9, 7, 0]
		isint          [9]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		deref        [6, 4, 0, 0]
		func           [6, "-"_1]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normalize_args'_2]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [7, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [6, 0, "-"_1]
		removeatom     [5, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		removeatom     [9, 0]
		removeatom     [10, 0]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'in'_1]
		newatom      [13, 0, 'normalize_args'_2]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 1, 0]
		relink         [11, 2, 1, 1, 0]
		relink         [13, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [7]
		freeatom       [2]
		freeatom       [6]
		freeatom       [5]
		freeatom       [8]
		freeatom       [9]
		freeatom       [10]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 27]
	--memmatch:
		spec           [1, 14]
		findatom     [1, 0, 'normalize_args'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [8, 5, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 5, 0, 2]
		func           [7, 'variable'_3]
		derefatom    [10, 7, 1]
		isstring       [10]
		derefatom    [9, 7, 0]
		isint          [9]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		deref        [6, 4, 0, 0]
		func           [6, "+"_1]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normalize_args'_2]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [7, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [6, 0, "+"_1]
		removeatom     [5, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		removeatom     [9, 0]
		removeatom     [10, 0]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'out'_1]
		newatom      [13, 0, 'normalize_args'_2]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 1, 0]
		relink         [11, 2, 1, 1, 0]
		relink         [13, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [7]
		freeatom       [2]
		freeatom       [6]
		freeatom       [5]
		freeatom       [8]
		freeatom       [9]
		freeatom       [10]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'type_from_ast'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'type'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'type_from_ast'_2]
		removeatom     [2, 0, 'type'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		newatom      [5, 0, 'type'_4]
		newatom      [6, 0, 'map'_3]
		newatom      [7, 0, 'lambda'_3]
		newatom      [8, 0, 'constructor_from_rule'_2]
		relink         [5, 0, 4, 0, 0]
		relink         [5, 1, 3, 1, 0]
		newlink        [5, 2, 6, 2, 0]
		relink         [5, 3, 1, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 2, 1, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 8, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'constructor_from_rule'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'rule'_4]
		deref        [4, 2, 1, 0]
		func           [4, '[]'_1]
		deref        [3, 2, 0, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 0]
		func           [6, '[]'_1]
		deref        [5, 3, 0, 2]
		func           [5, 'apply'_3]
		deref        [7, 5, 0, 1]
		func           [7, 'symbol'_2]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'constructor_from_rule'_2]
		removeatom     [2, 0, 'rule'_4]
		removeatom     [5, 0, 'apply'_3]
		removeatom     [7, 0, 'symbol'_2]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '[]'_1]
		removeatom     [4, 0, '[]'_1]
		newatom      [8, 0, 'constructor'_4]
		relink         [8, 0, 7, 0, 0]
		relink         [8, 1, 5, 1, 0]
		relink         [8, 2, 2, 2, 0]
		relink         [8, 3, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [3]
		freeatom       [6]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'distribute_program'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_dist", 0]
		removeatom     [1, 0, 'distribute_program'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'distribute_program'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'type'_3]
		commit         ["_dist", 0]
		removeatom     [1, 0, 'distribute_program'_3]
		removeatom     [3, 0, 'type'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'type'_3]
		newatom      [6, 0, 'distribute_program'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'distribute_program'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'function'_4]
		commit         ["_dist", 0]
		removeatom     [1, 0, 'distribute_program'_3]
		removeatom     [3, 0, 'function'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'function'_4]
		newatom      [6, 0, 'distribute_program'_3]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'translate_function'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'function'_4]
		derefatom    [3, 2, 0]
		isstring       [3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_function'_2]
		removeatom     [2, 0, 'function'_4]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'function'_4]
		newatom      [7, 0, 'translate_rules'_3]
		newlink        [6, 0, 4, 0, 0]
		relink         [6, 1, 2, 1, 0]
		newlink        [6, 2, 7, 2, 0]
		relink         [6, 3, 1, 1, 0]
		newlink        [7, 0, 5, 0, 0]
		relink         [7, 1, 2, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'translate_rules'_3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_rules'_3]
		newatom      [2, 0, 'translate_rules'_4]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'translate_rules'_4]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [4, 1_1]
		iadd         [6, 5, 4]
		getfunc      [7, 6]
		allocatomindirect[8, 7]
		derefatom    [3, 1, 1]
		isstring       [3]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_rules'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		removeatom     [3, 0]
		copyatom     [9, 0, 8]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 3]
		copyatom     [12, 0, 3]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'translate_rule'_4]
		newatom      [15, 0, 'translate_rules'_4]
		newlink        [13, 0, 14, 3, 0]
		newlink        [13, 1, 15, 3, 0]
		relink         [13, 2, 1, 3, 0]
		newlink        [14, 0, 11, 0, 0]
		newlink        [14, 1, 10, 0, 0]
		relink         [14, 2, 2, 0, 0]
		newlink        [15, 0, 9, 0, 0]
		newlink        [15, 1, 12, 0, 0]
		relink         [15, 2, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [6]
		freeatom       [8]
		freeatom       [5]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'translate_rules'_4]
		derefatom    [4, 1, 1]
		isstring       [4]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_rules'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		removeatom     [4, 0]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 29]
		findatom     [1, 0, 'translate_rule'_4]
		derefatom    [4, 1, 1]
		isint          [4]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 2, 3]
		func           [2, 'rule'_4]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_rule'_4]
		removeatom     [2, 0, 'rule'_4]
		removeatom     [4, 0]
		removeatom     [3, 0]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'attach_proc_types'_6]
		newatom      [7, 0, 'extract_function'_4]
		newatom      [8, 0, 'convert_arg_var'_8]
		newatom      [9, 0, 'get_apply'_3]
		newatom      [10, 0, 'int'.'copy'_3]
		newatom      [11, 0, 'list'.'count'_3]
		newatom      [12, 0, 'filter_free'_3]
		newatom      [13, 0, 'analyze_variable'_2]
		newatom      [14, 0, 'create_pair'_3]
		newatom      [15, 0, 'apply'_3]
		newatom      [16, 0, 'sort_statements'_2]
		newatom      [17, 0, 'add_dereference'_3]
		newatom      [18, 0, 'list'.'append'_3]
		newatom      [19, 0, 'list'.'append'_3]
		newatom      [20, 0, 'translate_rule_guard'_2]
		newatom      [21, 0, 'list'.'append'_3]
		newatom      [22, 0, 'translate_rule_body'_2]
		newatom      [23, 0, 'free_arguments'_3]
		newatom      [24, 0, 'eliminate_variables'_2]
		newatom      [25, 0, 'expand_connect'_2]
		newatom      [26, 0, 'reduce_deref_ref'_2]
		newatom      [27, 0, 'expand_member_access'_2]
		newatom      [28, 0, 'reduce_null_assignment'_2]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [6, 2, 2, 2, 0]
		newlink        [6, 3, 7, 1, 0]
		newlink        [6, 4, 8, 1, 0]
		newlink        [6, 5, 8, 2, 0]
		newlink        [7, 0, 5, 0, 0]
		newlink        [7, 2, 8, 3, 0]
		newlink        [7, 3, 8, 0, 0]
		newlink        [8, 4, 14, 1, 0]
		newlink        [8, 5, 20, 0, 0]
		newlink        [8, 6, 22, 0, 0]
		newlink        [8, 7, 9, 0, 0]
		newlink        [9, 1, 15, 0, 0]
		newlink        [9, 2, 11, 0, 0]
		newlink        [10, 0, 11, 2, 0]
		newlink        [10, 1, 17, 1, 0]
		newlink        [10, 2, 23, 0, 0]
		newlink        [11, 1, 15, 1, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 23, 1, 0]
		newlink        [12, 2, 18, 0, 0]
		newlink        [13, 0, 14, 2, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [16, 0, 17, 2, 0]
		newlink        [16, 1, 25, 0, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [18, 1, 19, 2, 0]
		newlink        [19, 0, 20, 1, 0]
		newlink        [19, 1, 21, 2, 0]
		newlink        [21, 0, 22, 1, 0]
		newlink        [21, 1, 23, 2, 0]
		newlink        [24, 0, 25, 1, 0]
		newlink        [24, 1, 27, 0, 0]
		newlink        [26, 0, 27, 1, 0]
		newlink        [26, 1, 28, 0, 0]
		relink         [28, 1, 1, 3, 0]
		loadmodule     [0, "int"]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'translate_rule_guard'_2]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_rule_guard'_2]
		newatom      [2, 0, 'translate_alithmetic_stmts'_3]
		newatom      [3, 0, '[]'_1]
		relink         [2, 0, 1, 0, 0]
		newlink        [2, 1, 3, 0, 0]
		relink         [2, 2, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'translate_rule_body'_2]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_rule_body'_2]
		newatom      [2, 0, 'categorize_process'_4]
		newatom      [3, 0, 'expand_number'_3]
		newatom      [4, 0, 'expand_proccxt'_3]
		newatom      [5, 0, 'expand_constructor'_3]
		newatom      [6, 0, '[]'_1]
		newatom      [7, 0, 'transform_caller'_2]
		newatom      [8, 0, 'filter_connect'_3]
		newatom      [9, 0, 'filter_invoke'_3]
		newatom      [10, 0, 'connect_caller_args'_4]
		newatom      [11, 0, 'list'.'append'_3]
		newatom      [12, 0, 'list'.'append'_3]
		newatom      [13, 0, 'insert_invocation_links'_2]
		newatom      [14, 0, 'delete_equals'_2]
		newatom      [15, 0, 'introduce_parallelism'_2]
		newatom      [16, 0, 'connect_local_links'_2]
		relink         [2, 0, 1, 0, 0]
		newlink        [2, 1, 5, 0, 0]
		newlink        [2, 2, 4, 0, 0]
		newlink        [2, 3, 3, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		newlink        [3, 2, 7, 0, 0]
		newlink        [4, 1, 5, 2, 0]
		newlink        [5, 1, 6, 0, 0]
		newlink        [7, 1, 9, 0, 0]
		newlink        [8, 0, 9, 2, 0]
		newlink        [8, 1, 10, 1, 0]
		newlink        [8, 2, 11, 1, 0]
		newlink        [9, 1, 10, 0, 0]
		newlink        [10, 2, 14, 0, 0]
		newlink        [10, 3, 12, 1, 0]
		newlink        [11, 0, 12, 2, 0]
		newlink        [11, 2, 16, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [15, 0, 16, 1, 0]
		relink         [15, 1, 1, 1, 0]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'get_apply'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		commit         ["_get_", 0]
		removeatom     [1, 0, 'get_apply'_3]
		removeatom     [2, 0, 'apply'_3]
		unify          [1, 1, 2, 0, 0]
		unify          [1, 2, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'free_arguments'_3]
		deref        [2, 1, 0, 0]
		func           [2, 0_1]
		commit         ["_Rfre", 0]
		removeatom     [1, 0, 'free_arguments'_3]
		removeatom     [2, 0, 0_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'free_arguments'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [2, 0_1]
		igt            [4, 2]
		allocatom    [3, 1_1]
		isub         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		commit         ["_Rfre", 0]
		removeatom     [1, 0, 'free_arguments'_3]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		copyatom     [9, 0, 7]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'free'_3]
		newatom      [12, 0, 'ref'_2]
		newatom      [13, 0, 'string'.'concat'_3]
		newatom      [14, 0, "arg"_1]
		newatom      [15, 0, 'string'.'from'_2]
		newatom      [16, 0, "port"_1]
		newatom      [17, 0, 'free_arguments'_3]
		newlink        [10, 0, 11, 2, 0]
		newlink        [10, 1, 17, 2, 0]
		relink         [10, 2, 1, 2, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 16, 0, 0]
		newlink        [12, 0, 13, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 1, 0]
		newlink        [15, 0, 8, 0, 0]
		newlink        [17, 0, 9, 0, 0]
		relink         [17, 1, 1, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [5]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'categorize_process'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_cate", 0]
		removeatom     [1, 0, 'categorize_process'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		newatom      [5, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'categorize_process'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		commit         ["_cate", 0]
		removeatom     [1, 0, 'categorize_process'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [5, 0, 'categorize_process'_4]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'symbol'_2]
		relink         [5, 0, 2, 1, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [5, 3, 1, 3, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 2, 1, 1, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [7, 1, 3, 1, 0]
		relink         [8, 0, 4, 0, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'categorize_process'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'number'_2]
		commit         ["_cate", 0]
		removeatom     [1, 0, 'categorize_process'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'number'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [5, 0, 'categorize_process'_4]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'number'_2]
		relink         [5, 0, 2, 1, 0]
		relink         [5, 1, 1, 1, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [5, 3, 6, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 2, 1, 3, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [7, 1, 3, 1, 0]
		relink         [8, 0, 4, 0, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'categorize_process'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		commit         ["_cate", 0]
		removeatom     [1, 0, 'categorize_process'_4]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'categorize_process'_4]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'process_context'_4]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		relink         [4, 3, 1, 3, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'attach_proc_types'_6]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types'_6]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 3, 1, 0, 0]
		newatom      [3, 0, '[]'_1]
		unify          [1, 5, 1, 2, 0]
		relink         [3, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 33]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'attach_proc_types'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [6, 5, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 2]
		func           [7, '.'_3]
		deref        [8, 7, 1, 0]
		func           [8, '[]'_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		derefatom    [9, 4, 0]
		isstring       [9]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types'_6]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		removeatom     [9, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 9]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'apply'_3]
		newatom      [14, 0, 'symbol'_2]
		newatom      [15, 0, 'attach_proc_types_alithmetics'_9]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, '[]'_1]
		newatom      [20, 0, 'attach_proc_types'_6]
		newlink        [12, 0, 13, 2, 0]
		newlink        [12, 1, 20, 4, 0]
		relink         [12, 2, 1, 4, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 15, 1, 0]
		newlink        [14, 0, 10, 0, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [15, 2, 16, 2, 0]
		relink         [15, 3, 1, 0, 0]
		relink         [15, 4, 2, 1, 0]
		relink         [15, 5, 1, 2, 0]
		newlink        [15, 6, 20, 0, 0]
		newlink        [15, 7, 20, 1, 0]
		newlink        [15, 8, 20, 2, 0]
		relink         [16, 0, 5, 0, 0]
		newlink        [16, 1, 17, 2, 0]
		relink         [17, 0, 6, 0, 0]
		newlink        [17, 1, 18, 2, 0]
		relink         [18, 0, 7, 0, 0]
		newlink        [18, 1, 19, 0, 0]
		relink         [20, 3, 1, 3, 0]
		relink         [20, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		freeatom       [8]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 6, 1, 3, 0]
		unify          [1, 7, 1, 4, 0]
		unify          [1, 8, 1, 5, 0]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'atom'_2]
		newatom      [6, 0, 'attach_proc_types_alithmetics'_9]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 2, 2, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		relink         [6, 6, 1, 6, 0]
		relink         [6, 7, 1, 7, 0]
		relink         [6, 8, 1, 8, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 22]
	--memmatch:
		spec           [1, 22]
		findatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		derefatom    [6, 3, 1]
		isstring       [6]
		derefatom    [5, 3, 0]
		isstring       [5]
		deref        [4, 3, 2, 0]
		func           [4, 'none'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [4, 0, 'none'_1]
		removeatom     [2, 0, '.'_3]
		removeatom     [6, 0]
		removeatom     [5, 0]
		copyatom     [7, 0, 6]
		copyatom     [8, 0, 6]
		copyatom     [9, 0, 6]
		copyatom     [10, 0, 6]
		copyatom     [11, 0, 5]
		copyatom     [12, 0, 5]
		copyatom     [13, 0, 5]
		copyatom     [14, 0, 5]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'process_context'_4]
		newatom      [17, 0, 'none'_1]
		newatom      [18, 0, 'attach_proc_types_in'_4]
		newatom      [19, 0, 'attach_proc_types_in'_4]
		newatom      [20, 0, 'attach_proc_types_in'_4]
		newatom      [21, 0, 'attach_proc_types_alithmetics'_9]
		newlink        [15, 0, 16, 3, 0]
		newlink        [15, 1, 21, 1, 0]
		relink         [15, 2, 1, 1, 0]
		newlink        [16, 0, 11, 0, 0]
		newlink        [16, 1, 7, 0, 0]
		newlink        [16, 2, 17, 0, 0]
		newlink        [18, 0, 12, 0, 0]
		newlink        [18, 1, 8, 0, 0]
		relink         [18, 2, 1, 3, 0]
		newlink        [18, 3, 21, 3, 0]
		newlink        [19, 0, 13, 0, 0]
		newlink        [19, 1, 9, 0, 0]
		relink         [19, 2, 1, 4, 0]
		newlink        [19, 3, 21, 4, 0]
		newlink        [20, 0, 14, 0, 0]
		newlink        [20, 1, 10, 0, 0]
		relink         [20, 2, 1, 5, 0]
		newlink        [20, 3, 21, 5, 0]
		relink         [21, 0, 1, 0, 0]
		relink         [21, 2, 2, 1, 0]
		relink         [21, 6, 1, 6, 0]
		relink         [21, 7, 1, 7, 0]
		relink         [21, 8, 1, 8, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [6]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		derefatom    [5, 3, 0]
		isstring       [5]
		deref        [4, 3, 1, 0]
		func           [4, 'none'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_alithmetics'_9]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [4, 0, 'none'_1]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 5]
		copyatom     [8, 0, 5]
		copyatom     [9, 0, 5]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'process_context'_4]
		newatom      [12, 0, "int"_1]
		newatom      [13, 0, 'none'_1]
		newatom      [14, 0, 'attach_proc_types_in'_4]
		newatom      [15, 0, "int"_1]
		newatom      [16, 0, 'attach_proc_types_in'_4]
		newatom      [17, 0, "int"_1]
		newatom      [18, 0, 'attach_proc_types_in'_4]
		newatom      [19, 0, "int"_1]
		newatom      [20, 0, 'attach_proc_types_alithmetics'_9]
		newlink        [10, 0, 11, 3, 0]
		newlink        [10, 1, 20, 1, 0]
		relink         [10, 2, 1, 1, 0]
		newlink        [11, 0, 6, 0, 0]
		newlink        [11, 1, 12, 0, 0]
		newlink        [11, 2, 13, 0, 0]
		newlink        [14, 0, 7, 0, 0]
		newlink        [14, 1, 15, 0, 0]
		relink         [14, 2, 1, 3, 0]
		newlink        [14, 3, 20, 3, 0]
		newlink        [16, 0, 8, 0, 0]
		newlink        [16, 1, 17, 0, 0]
		relink         [16, 2, 1, 4, 0]
		newlink        [16, 3, 20, 4, 0]
		newlink        [18, 0, 9, 0, 0]
		newlink        [18, 1, 19, 0, 0]
		relink         [18, 2, 1, 5, 0]
		newlink        [18, 3, 20, 5, 0]
		relink         [20, 0, 1, 0, 0]
		relink         [20, 2, 2, 1, 0]
		relink         [20, 6, 1, 6, 0]
		relink         [20, 7, 1, 7, 0]
		relink         [20, 8, 1, 8, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 31]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'attach_proc_types'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 5, 0, 2]
		func           [6, 'process_context'_3]
		derefatom    [9, 6, 0]
		isstring       [9]
		deref        [8, 6, 1, 0]
		func           [8, 'none'_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		derefatom    [10, 4, 0]
		isstring       [10]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types'_6]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [6, 0, 'process_context'_3]
		removeatom     [8, 0, 'none'_1]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeatom     [10, 0]
		removeatom     [9, 0]
		copyatom     [11, 0, 10]
		copyatom     [12, 0, 10]
		copyatom     [13, 0, 10]
		copyatom     [14, 0, 9]
		copyatom     [15, 0, 9]
		copyatom     [16, 0, 9]
		newatom      [17, 0, 'attach_proc_types_in'_4]
		newatom      [18, 0, 'attach_proc_types_in'_4]
		newatom      [19, 0, 'attach_proc_types_in'_4]
		newatom      [20, 0, 'attach_proc_types'_6]
		newlink        [17, 0, 14, 0, 0]
		newlink        [17, 1, 11, 0, 0]
		relink         [17, 2, 1, 0, 0]
		newlink        [17, 3, 20, 0, 0]
		newlink        [18, 0, 15, 0, 0]
		newlink        [18, 1, 12, 0, 0]
		relink         [18, 2, 2, 1, 0]
		newlink        [18, 3, 20, 1, 0]
		newlink        [19, 0, 16, 0, 0]
		newlink        [19, 1, 13, 0, 0]
		relink         [19, 2, 1, 2, 0]
		newlink        [19, 3, 20, 2, 0]
		relink         [20, 3, 1, 3, 0]
		relink         [20, 4, 1, 4, 0]
		relink         [20, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [8]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [10]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 29]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'attach_proc_types'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [6, 5, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 0]
		func           [7, '[]'_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types'_6]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		newatom      [8, 0, 'attach_proc_types_if_binops'_7]
		newatom      [9, 0, 'is_binary_int_operator'_3]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'apply'_3]
		newatom      [12, 0, 'symbol'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, '[]'_1]
		relink         [8, 0, 1, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		newlink        [8, 2, 10, 2, 0]
		relink         [8, 3, 1, 2, 0]
		relink         [8, 4, 1, 3, 0]
		relink         [8, 5, 1, 4, 0]
		relink         [8, 6, 1, 5, 0]
		relink         [9, 0, 4, 0, 0]
		newlink        [9, 1, 12, 0, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 2, 1, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 13, 2, 0]
		relink         [13, 0, 5, 0, 0]
		newlink        [13, 1, 14, 2, 0]
		relink         [14, 0, 6, 0, 0]
		newlink        [14, 1, 15, 0, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 44]
	--memmatch:
		spec           [1, 48]
		findatom     [1, 0, 'attach_proc_types_if_binops'_7]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'apply'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 2]
		func           [8, '.'_3]
		deref        [11, 8, 1, 0]
		func           [11, '[]'_1]
		deref        [10, 8, 0, 2]
		func           [10, 'process_context'_3]
		derefatom    [14, 10, 0]
		isstring       [14]
		deref        [12, 10, 1, 0]
		func           [12, 'none'_1]
		deref        [7, 6, 0, 2]
		func           [7, 'process_context'_3]
		derefatom    [13, 7, 0]
		isstring       [13]
		deref        [9, 7, 1, 0]
		func           [9, 'none'_1]
		deref        [5, 4, 0, 1]
		func           [5, 'symbol'_2]
		deref        [2, 1, 1, 0]
		func           [2, 'true'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_if_binops'_7]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [5, 0, 'symbol'_2]
		removeatom     [7, 0, 'process_context'_3]
		removeatom     [9, 0, 'none'_1]
		removeatom     [10, 0, 'process_context'_3]
		removeatom     [12, 0, 'none'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '.'_3]
		removeatom     [11, 0, '[]'_1]
		removeatom     [13, 0]
		removeatom     [14, 0]
		copyatom     [15, 0, 13]
		copyatom     [16, 0, 13]
		copyatom     [17, 0, 13]
		copyatom     [18, 0, 13]
		copyatom     [19, 0, 14]
		copyatom     [20, 0, 14]
		copyatom     [21, 0, 14]
		copyatom     [22, 0, 14]
		newatom      [23, 0, 'attach_proc_types_in'_4]
		newatom      [24, 0, "int"_1]
		newatom      [25, 0, 'attach_proc_types_in'_4]
		newatom      [26, 0, "int"_1]
		newatom      [27, 0, 'attach_proc_types_in'_4]
		newatom      [28, 0, "int"_1]
		newatom      [29, 0, 'attach_proc_types_in'_4]
		newatom      [30, 0, "int"_1]
		newatom      [31, 0, 'attach_proc_types_in'_4]
		newatom      [32, 0, "int"_1]
		newatom      [33, 0, 'attach_proc_types_in'_4]
		newatom      [34, 0, "int"_1]
		newatom      [35, 0, 'attach_proc_types'_6]
		newatom      [36, 0, '.'_3]
		newatom      [37, 0, 'apply'_3]
		newatom      [38, 0, 'symbol'_2]
		newatom      [39, 0, '.'_3]
		newatom      [40, 0, 'process_context'_4]
		newatom      [41, 0, "int"_1]
		newatom      [42, 0, 'none'_1]
		newatom      [43, 0, '.'_3]
		newatom      [44, 0, 'process_context'_4]
		newatom      [45, 0, "int"_1]
		newatom      [46, 0, 'none'_1]
		newatom      [47, 0, '[]'_1]
		newlink        [23, 0, 19, 0, 0]
		newlink        [23, 1, 24, 0, 0]
		newlink        [23, 2, 25, 3, 0]
		newlink        [23, 3, 35, 0, 0]
		newlink        [25, 0, 15, 0, 0]
		newlink        [25, 1, 26, 0, 0]
		relink         [25, 2, 1, 0, 0]
		newlink        [27, 0, 20, 0, 0]
		newlink        [27, 1, 28, 0, 0]
		newlink        [27, 2, 29, 3, 0]
		newlink        [27, 3, 35, 1, 0]
		newlink        [29, 0, 16, 0, 0]
		newlink        [29, 1, 30, 0, 0]
		relink         [29, 2, 3, 1, 0]
		newlink        [31, 0, 21, 0, 0]
		newlink        [31, 1, 32, 0, 0]
		newlink        [31, 2, 33, 3, 0]
		newlink        [31, 3, 35, 2, 0]
		newlink        [33, 0, 17, 0, 0]
		newlink        [33, 1, 34, 0, 0]
		relink         [33, 2, 1, 3, 0]
		relink         [35, 3, 1, 4, 0]
		newlink        [35, 4, 36, 1, 0]
		relink         [35, 5, 1, 6, 0]
		newlink        [36, 0, 37, 2, 0]
		relink         [36, 2, 1, 5, 0]
		newlink        [37, 0, 38, 1, 0]
		newlink        [37, 1, 39, 2, 0]
		relink         [38, 0, 5, 0, 0]
		newlink        [39, 0, 40, 3, 0]
		newlink        [39, 1, 43, 2, 0]
		newlink        [40, 0, 18, 0, 0]
		newlink        [40, 1, 41, 0, 0]
		newlink        [40, 2, 42, 0, 0]
		newlink        [43, 0, 44, 3, 0]
		newlink        [43, 1, 47, 0, 0]
		newlink        [44, 0, 22, 0, 0]
		newlink        [44, 1, 45, 0, 0]
		newlink        [44, 2, 46, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [9]
		freeatom       [10]
		freeatom       [12]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [11]
		freeatom       [13]
		freeatom       [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 47]
	--memmatch:
		spec           [1, 40]
		findatom     [1, 0, 'attach_proc_types_if_binops'_7]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'apply'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 2]
		func           [8, '.'_3]
		deref        [12, 8, 1, 0]
		func           [12, '[]'_1]
		deref        [11, 8, 0, 2]
		func           [11, 'process_context'_3]
		derefatom    [15, 11, 0]
		isstring       [15]
		deref        [13, 11, 1, 0]
		func           [13, 'none'_1]
		deref        [7, 6, 0, 3]
		func           [7, 'process_context'_4]
		derefatom    [14, 7, 0]
		isstring       [14]
		deref        [10, 7, 2, 0]
		func           [10, 'none'_1]
		deref        [9, 7, 1, 0]
		func           [9, "int"_1]
		deref        [5, 4, 0, 1]
		func           [5, 'symbol'_2]
		deref        [2, 1, 1, 0]
		func           [2, 'true'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_if_binops'_7]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [5, 0, 'symbol'_2]
		removeatom     [7, 0, 'process_context'_4]
		removeatom     [10, 0, 'none'_1]
		removeatom     [11, 0, 'process_context'_3]
		removeatom     [13, 0, 'none'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [9, 0, "int"_1]
		removeatom     [8, 0, '.'_3]
		removeatom     [12, 0, '[]'_1]
		removeatom     [14, 0]
		removeatom     [15, 0]
		copyatom     [16, 0, 14]
		copyatom     [17, 0, 15]
		copyatom     [18, 0, 15]
		copyatom     [19, 0, 15]
		copyatom     [20, 0, 15]
		newatom      [21, 0, 'attach_proc_types_in'_4]
		newatom      [22, 0, "int"_1]
		newatom      [23, 0, 'attach_proc_types_in'_4]
		newatom      [24, 0, "int"_1]
		newatom      [25, 0, 'attach_proc_types_in'_4]
		newatom      [26, 0, "int"_1]
		newatom      [27, 0, 'attach_proc_types'_6]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'apply'_3]
		newatom      [30, 0, 'symbol'_2]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, 'process_context'_4]
		newatom      [33, 0, "int"_1]
		newatom      [34, 0, 'none'_1]
		newatom      [35, 0, '.'_3]
		newatom      [36, 0, 'process_context'_4]
		newatom      [37, 0, "int"_1]
		newatom      [38, 0, 'none'_1]
		newatom      [39, 0, '[]'_1]
		newlink        [21, 0, 17, 0, 0]
		newlink        [21, 1, 22, 0, 0]
		relink         [21, 2, 1, 0, 0]
		newlink        [21, 3, 27, 0, 0]
		newlink        [23, 0, 18, 0, 0]
		newlink        [23, 1, 24, 0, 0]
		relink         [23, 2, 3, 1, 0]
		newlink        [23, 3, 27, 1, 0]
		newlink        [25, 0, 19, 0, 0]
		newlink        [25, 1, 26, 0, 0]
		relink         [25, 2, 1, 3, 0]
		newlink        [25, 3, 27, 2, 0]
		relink         [27, 3, 1, 4, 0]
		newlink        [27, 4, 28, 1, 0]
		relink         [27, 5, 1, 6, 0]
		newlink        [28, 0, 29, 2, 0]
		relink         [28, 2, 1, 5, 0]
		newlink        [29, 0, 30, 1, 0]
		newlink        [29, 1, 31, 2, 0]
		relink         [30, 0, 5, 0, 0]
		newlink        [31, 0, 32, 3, 0]
		newlink        [31, 1, 35, 2, 0]
		newlink        [32, 0, 16, 0, 0]
		newlink        [32, 1, 33, 0, 0]
		newlink        [32, 2, 34, 0, 0]
		newlink        [35, 0, 36, 3, 0]
		newlink        [35, 1, 39, 0, 0]
		newlink        [36, 0, 20, 0, 0]
		newlink        [36, 1, 37, 0, 0]
		newlink        [36, 2, 38, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [10]
		freeatom       [11]
		freeatom       [13]
		freeatom       [3]
		freeatom       [6]
		freeatom       [9]
		freeatom       [8]
		freeatom       [12]
		freeatom       [14]
		freeatom       [15]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 41]
	--memmatch:
		spec           [1, 34]
		findatom     [1, 0, 'attach_proc_types_if_binops'_7]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'apply'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 2]
		func           [8, '.'_3]
		deref        [11, 8, 1, 0]
		func           [11, '[]'_1]
		deref        [10, 8, 0, 1]
		func           [10, 'atom'_2]
		deref        [7, 6, 0, 2]
		func           [7, 'process_context'_3]
		derefatom    [12, 7, 0]
		isstring       [12]
		deref        [9, 7, 1, 0]
		func           [9, 'none'_1]
		deref        [5, 4, 0, 1]
		func           [5, 'symbol'_2]
		deref        [2, 1, 1, 0]
		func           [2, 'true'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_if_binops'_7]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [5, 0, 'symbol'_2]
		removeatom     [7, 0, 'process_context'_3]
		removeatom     [9, 0, 'none'_1]
		removeatom     [10, 0, 'atom'_2]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '.'_3]
		removeatom     [11, 0, '[]'_1]
		removeatom     [12, 0]
		copyatom     [13, 0, 12]
		copyatom     [14, 0, 12]
		copyatom     [15, 0, 12]
		copyatom     [16, 0, 12]
		newatom      [17, 0, 'attach_proc_types_in'_4]
		newatom      [18, 0, "int"_1]
		newatom      [19, 0, 'attach_proc_types_in'_4]
		newatom      [20, 0, "int"_1]
		newatom      [21, 0, 'attach_proc_types_in'_4]
		newatom      [22, 0, "int"_1]
		newatom      [23, 0, 'attach_proc_types'_6]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'apply'_3]
		newatom      [26, 0, 'symbol'_2]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, 'process_context'_4]
		newatom      [29, 0, "int"_1]
		newatom      [30, 0, 'none'_1]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, 'atom'_2]
		newatom      [33, 0, '[]'_1]
		newlink        [17, 0, 13, 0, 0]
		newlink        [17, 1, 18, 0, 0]
		relink         [17, 2, 1, 0, 0]
		newlink        [17, 3, 23, 0, 0]
		newlink        [19, 0, 14, 0, 0]
		newlink        [19, 1, 20, 0, 0]
		relink         [19, 2, 3, 1, 0]
		newlink        [19, 3, 23, 1, 0]
		newlink        [21, 0, 15, 0, 0]
		newlink        [21, 1, 22, 0, 0]
		relink         [21, 2, 1, 3, 0]
		newlink        [21, 3, 23, 2, 0]
		relink         [23, 3, 1, 4, 0]
		newlink        [23, 4, 24, 1, 0]
		relink         [23, 5, 1, 6, 0]
		newlink        [24, 0, 25, 2, 0]
		relink         [24, 2, 1, 5, 0]
		newlink        [25, 0, 26, 1, 0]
		newlink        [25, 1, 27, 2, 0]
		relink         [26, 0, 5, 0, 0]
		newlink        [27, 0, 28, 3, 0]
		newlink        [27, 1, 31, 2, 0]
		newlink        [28, 0, 16, 0, 0]
		newlink        [28, 1, 29, 0, 0]
		newlink        [28, 2, 30, 0, 0]
		newlink        [31, 0, 32, 1, 0]
		newlink        [31, 1, 33, 0, 0]
		relink         [32, 0, 10, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [9]
		freeatom       [10]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [11]
		freeatom       [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 41]
	--memmatch:
		spec           [1, 34]
		findatom     [1, 0, 'attach_proc_types_if_binops'_7]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'apply'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 2]
		func           [8, '.'_3]
		deref        [10, 8, 1, 0]
		func           [10, '[]'_1]
		deref        [9, 8, 0, 2]
		func           [9, 'process_context'_3]
		derefatom    [12, 9, 0]
		isstring       [12]
		deref        [11, 9, 1, 0]
		func           [11, 'none'_1]
		deref        [7, 6, 0, 1]
		func           [7, 'atom'_2]
		deref        [5, 4, 0, 1]
		func           [5, 'symbol'_2]
		deref        [2, 1, 1, 0]
		func           [2, 'true'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_if_binops'_7]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [5, 0, 'symbol'_2]
		removeatom     [7, 0, 'atom'_2]
		removeatom     [9, 0, 'process_context'_3]
		removeatom     [11, 0, 'none'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '.'_3]
		removeatom     [10, 0, '[]'_1]
		removeatom     [12, 0]
		copyatom     [13, 0, 12]
		copyatom     [14, 0, 12]
		copyatom     [15, 0, 12]
		copyatom     [16, 0, 12]
		newatom      [17, 0, 'attach_proc_types_in'_4]
		newatom      [18, 0, "int"_1]
		newatom      [19, 0, 'attach_proc_types_in'_4]
		newatom      [20, 0, "int"_1]
		newatom      [21, 0, 'attach_proc_types_in'_4]
		newatom      [22, 0, "int"_1]
		newatom      [23, 0, 'attach_proc_types'_6]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'apply'_3]
		newatom      [26, 0, 'symbol'_2]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, 'atom'_2]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, 'process_context'_4]
		newatom      [31, 0, "int"_1]
		newatom      [32, 0, 'none'_1]
		newatom      [33, 0, '[]'_1]
		newlink        [17, 0, 13, 0, 0]
		newlink        [17, 1, 18, 0, 0]
		relink         [17, 2, 1, 0, 0]
		newlink        [17, 3, 23, 0, 0]
		newlink        [19, 0, 14, 0, 0]
		newlink        [19, 1, 20, 0, 0]
		relink         [19, 2, 3, 1, 0]
		newlink        [19, 3, 23, 1, 0]
		newlink        [21, 0, 15, 0, 0]
		newlink        [21, 1, 22, 0, 0]
		relink         [21, 2, 1, 3, 0]
		newlink        [21, 3, 23, 2, 0]
		relink         [23, 3, 1, 4, 0]
		newlink        [23, 4, 24, 1, 0]
		relink         [23, 5, 1, 6, 0]
		newlink        [24, 0, 25, 2, 0]
		relink         [24, 2, 1, 5, 0]
		newlink        [25, 0, 26, 1, 0]
		newlink        [25, 1, 27, 2, 0]
		relink         [26, 0, 5, 0, 0]
		newlink        [27, 0, 28, 1, 0]
		newlink        [27, 1, 29, 2, 0]
		relink         [28, 0, 7, 0, 0]
		newlink        [29, 0, 30, 3, 0]
		newlink        [29, 1, 33, 0, 0]
		newlink        [30, 0, 16, 0, 0]
		newlink        [30, 1, 31, 0, 0]
		newlink        [30, 2, 32, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [9]
		freeatom       [11]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [10]
		freeatom       [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'attach_proc_types_if_binops'_7]
		deref        [2, 1, 1, 0]
		func           [2, 'false'_1]
		commit         ["_atta", 0]
		removeatom     [1, 0, 'attach_proc_types_if_binops'_7]
		removeatom     [2, 0, 'false'_1]
		newatom      [3, 0, 'error_unrecognized_guards'_2]
		newatom      [4, 0, 'error_unrecognized_guards'_2]
		newatom      [5, 0, 'error_unrecognized_guards'_2]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 4, 0]
		relink         [4, 0, 1, 2, 0]
		relink         [4, 1, 1, 5, 0]
		relink         [5, 0, 1, 3, 0]
		relink         [5, 1, 1, 6, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'is_binary_int_operator'_3]
		commit         ["_Ris_", 0]
		removeatom     [1, 0, 'is_binary_int_operator'_3]
		newatom      [2, 0, 'is_binary_int_operator_in'_4]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, "=:="_1]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, "=\\="_1]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, "<"_1]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, ">"_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, "=<"_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, ">="_1]
		newatom      [15, 0, '[]'_1]
		newlink        [2, 0, 3, 2, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		newlink        [3, 0, 4, 0, 0]
		newlink        [3, 1, 5, 2, 0]
		newlink        [5, 0, 6, 0, 0]
		newlink        [5, 1, 7, 2, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 9, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 2, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 43]
		findatom     [1, 0, 'is_binary_int_operator_in'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [7, 2, 1]
		getlink      [6, 2, 0]
		newlist      [8]
		addtolist      [8, 6]
		newlist      [9]
		addtolist      [9, 3]
		addtolist      [9, 4]
		addtolist      [9, 5]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 3]
		eqground       [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 7]
		newlist      [15]
		addtolist      [15, 3]
		addtolist      [15, 4]
		addtolist      [15, 5]
		addtolist      [15, 6]
		isground     [16, 14, 15]
		commit         ["_Ris_", 0]
		newlist      [17]
		getlink      [18, 1, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 2, 1]
		addtolist      [19, 20]
		newlist      [21]
		getlink      [22, 2, 0]
		addtolist      [21, 22]
		removeatom     [1, 0, 'is_binary_int_operator_in'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [19, 0]
		removeground   [21, 0]
		removeground   [17, 0]
		getlink      [23, 2, 1]
		insertconnectorsinnull[24, [23]]
		getlink      [25, 2, 0]
		insertconnectorsinnull[26, [25]]
		getlink      [27, 1, 1]
		insertconnectorsinnull[28, [27]]
		newlist      [29]
		getlink      [30, 1, 1]
		addtolist      [29, 30]
		newlist      [31]
		getlink      [32, 2, 1]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 2, 0]
		addtolist      [33, 34]
		copyground   [35, 29, 0]
		getfromlist  [36, 35, 0]
		getfromlist  [37, 35, 1]
		newatom      [38, 0, 'true'_1]
		alloclink    [39, 38, 0]
		getfromlist  [40, 36, 0]
		getlink      [41, 1, 3]
		unifylinks     [39, 41, 0]
		getlink      [42, 1, 2]
		unifylinks     [40, 42, 0]
		deleteconnectors[28, 37]
		freeatom       [1]
		freeatom       [2]
		freeground     [31]
		freeground     [33]
		freeground     [29]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 38]
		findatom     [1, 0, 'is_binary_int_operator_in'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [7, 2, 1]
		getlink      [6, 2, 0]
		newlist      [8]
		addtolist      [8, 6]
		newlist      [9]
		addtolist      [9, 3]
		addtolist      [9, 4]
		addtolist      [9, 5]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 3]
		neqground      [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		isground     [13, 11, 12]
		commit         ["_Ris_", 0]
		newlist      [14]
		getlink      [15, 2, 0]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 1, 1]
		addtolist      [16, 17]
		removeatom     [1, 0, 'is_binary_int_operator_in'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [14, 0]
		removeground   [16, 0]
		getlink      [18, 2, 0]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 1, 1]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 2, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 1, 1]
		addtolist      [24, 25]
		copyground   [26, 24, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		newatom      [29, 0, 'is_binary_int_operator_in'_4]
		alloclink    [30, 29, 3]
		alloclink    [31, 29, 2]
		alloclink    [32, 29, 1]
		alloclink    [33, 29, 0]
		getfromlist  [34, 27, 0]
		getlink      [35, 2, 1]
		unifylinks     [33, 35, 0]
		unifylinks     [32, 34, 0]
		getlink      [36, 1, 2]
		unifylinks     [31, 36, 0]
		getlink      [37, 1, 3]
		unifylinks     [30, 37, 0]
		deleteconnectors[21, 28]
		freeatom       [1]
		freeatom       [2]
		freeground     [22]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'is_binary_int_operator_in'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Ris_", 0]
		removeatom     [1, 0, 'is_binary_int_operator_in'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'false'_1]
		unify          [1, 2, 1, 1, 0]
		relink         [3, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		derefatom    [4, 1, 1]
		isstring       [4]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Ratt", 0]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [4, 0]
		removeatom     [3, 0]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		commit         ["_Ratt", 0]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'variable'_3]
		newatom      [6, 0, 'attach_proc_types_in'_4]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 3, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 2, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		commit         ["_Ratt", 0]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'atom'_2]
		newatom      [6, 0, 'attach_proc_types_in'_4]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 3, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 2, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 58]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		derefatom    [10, 1, 1]
		isstring       [10]
		getlink      [6, 1, 3]
		getlink      [5, 1, 1]
		getlink      [4, 1, 0]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		newlist      [11]
		addtolist      [11, 4]
		newlist      [12]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		addtolist      [12, 9]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 7]
		eqground       [11, 14]
		newlist      [15]
		addtolist      [15, 4]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 8]
		addtolist      [15, 9]
		isground     [16, 14, 15]
		commit         ["_Ratt", 0]
		newlist      [17]
		getlink      [18, 1, 0]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 3, 0]
		addtolist      [19, 20]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [19, 0]
		removeatom     [10, 0]
		removeground   [17, 0]
		getlink      [21, 3, 0]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 0]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 1, 0]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 3, 0]
		addtolist      [27, 28]
		copyground   [29, 27, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyatom     [32, 0, 10]
		copyatom     [33, 0, 10]
		copyground   [34, 25, 0]
		getfromlist  [35, 34, 0]
		getfromlist  [36, 34, 1]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, 'process_context'_4]
		newatom      [39, 0, 'attach_proc_types_in'_4]
		alloclink    [40, 39, 2]
		alloclink    [41, 33, 0]
		alloclink    [42, 39, 1]
		alloclink    [43, 39, 0]
		alloclink    [44, 38, 2]
		alloclink    [45, 32, 0]
		alloclink    [46, 38, 1]
		alloclink    [47, 38, 0]
		alloclink    [48, 37, 2]
		alloclink    [49, 39, 3]
		alloclink    [50, 37, 1]
		alloclink    [51, 38, 3]
		alloclink    [52, 37, 0]
		getfromlist  [53, 35, 0]
		getfromlist  [54, 30, 0]
		unifylinks     [52, 51, 0]
		unifylinks     [50, 49, 0]
		getlink      [55, 1, 3]
		unifylinks     [48, 55, 0]
		unifylinks     [47, 54, 0]
		unifylinks     [46, 45, 0]
		getlink      [56, 3, 1]
		unifylinks     [44, 56, 0]
		unifylinks     [43, 53, 0]
		unifylinks     [42, 41, 0]
		getlink      [57, 2, 1]
		unifylinks     [40, 57, 0]
		deleteconnectors[22, 31]
		deleteconnectors[24, 36]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [27]
		freeatom       [10]
		freeground     [25]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 1]
		getlink      [4, 1, 0]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		newlist      [10]
		addtolist      [10, 4]
		newlist      [11]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 7]
		addtolist      [11, 8]
		addtolist      [11, 9]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 7]
		neqground      [10, 13]
		newlist      [14]
		addtolist      [14, 4]
		addtolist      [14, 5]
		addtolist      [14, 6]
		addtolist      [14, 8]
		addtolist      [14, 9]
		isground     [15, 13, 14]
		commit         ["_Ratt", 0]
		newlist      [16]
		getlink      [17, 1, 0]
		addtolist      [16, 17]
		newlist      [18]
		getlink      [19, 3, 0]
		addtolist      [18, 19]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [18, 0]
		removeground   [16, 0]
		getlink      [20, 3, 0]
		insertconnectorsinnull[21, [20]]
		getlink      [22, 1, 0]
		insertconnectorsinnull[23, [22]]
		newlist      [24]
		getlink      [25, 1, 0]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 3, 0]
		addtolist      [26, 27]
		copyground   [28, 26, 0]
		getfromlist  [29, 28, 0]
		getfromlist  [30, 28, 1]
		copyground   [31, 24, 0]
		getfromlist  [32, 31, 0]
		getfromlist  [33, 31, 1]
		newatom      [34, 0, '.'_3]
		newatom      [35, 0, 'process_context'_3]
		newatom      [36, 0, 'attach_proc_types_in'_4]
		alloclink    [37, 36, 2]
		alloclink    [38, 36, 1]
		alloclink    [39, 36, 0]
		alloclink    [40, 35, 1]
		alloclink    [41, 35, 0]
		alloclink    [42, 34, 2]
		alloclink    [43, 36, 3]
		alloclink    [44, 34, 1]
		alloclink    [45, 35, 2]
		alloclink    [46, 34, 0]
		getfromlist  [47, 32, 0]
		getfromlist  [48, 29, 0]
		unifylinks     [46, 45, 0]
		unifylinks     [44, 43, 0]
		getlink      [49, 1, 3]
		unifylinks     [42, 49, 0]
		unifylinks     [41, 48, 0]
		getlink      [50, 3, 1]
		unifylinks     [40, 50, 0]
		unifylinks     [39, 47, 0]
		getlink      [51, 1, 1]
		unifylinks     [38, 51, 0]
		getlink      [52, 2, 1]
		unifylinks     [37, 52, 0]
		deleteconnectors[21, 30]
		deleteconnectors[23, 33]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [26]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		commit         ["_Ratt", 0]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'process_context'_4]
		newatom      [6, 0, 'attach_proc_types_in'_4]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 3, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 2, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 14]
		findatom     [1, 0, 'attach_proc_types_in'_4]
		derefatom    [5, 1, 1]
		isstring       [5]
		derefatom    [4, 1, 0]
		isstring       [4]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Ratt", 0]
		removeatom     [1, 0, 'attach_proc_types_in'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		removeatom     [4, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 5]
		copyatom     [8, 0, 4]
		copyatom     [9, 0, 4]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'apply'_3]
		newatom      [12, 0, 'attach_proc_types_in'_4]
		newatom      [13, 0, 'attach_proc_types_in'_4]
		newlink        [10, 0, 11, 2, 0]
		newlink        [10, 1, 13, 3, 0]
		relink         [10, 2, 1, 3, 0]
		relink         [11, 0, 3, 0, 0]
		newlink        [11, 1, 12, 3, 0]
		newlink        [12, 0, 8, 0, 0]
		newlink        [12, 1, 6, 0, 0]
		relink         [12, 2, 3, 1, 0]
		newlink        [13, 0, 9, 0, 0]
		newlink        [13, 1, 7, 0, 0]
		relink         [13, 2, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'extract_function'_4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'number'_2]
		commit         ["_extr", 0]
		removeatom     [1, 0, 'extract_function'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'number'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [5, 0, 'extract_function'_4]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'number'_2]
		relink         [5, 0, 1, 0, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [5, 3, 6, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 2, 1, 3, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [7, 1, 3, 1, 0]
		relink         [8, 0, 4, 0, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 42]
		findatom     [1, 0, 'extract_function'_4]
		getlink      [7, 1, 3]
		getlink      [6, 1, 2]
		getlink      [5, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		getlink      [8, 3, 1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		getlink      [9, 4, 0]
		newlist      [11]
		addtolist      [11, 5]
		newlist      [12]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		addtolist      [12, 9]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 9]
		eqground       [11, 14]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		commit         ["_extr", 0]
		newlist      [17]
		getlink      [18, 1, 0]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 4, 0]
		addtolist      [19, 20]
		removeatom     [1, 0, 'extract_function'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeground   [19, 0]
		removeground   [17, 0]
		getlink      [21, 4, 0]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 0]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 1, 0]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 4, 0]
		addtolist      [27, 28]
		copyground   [29, 27, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		newatom      [32, 0, 'apply'_3]
		newatom      [33, 0, 'symbol'_2]
		unify          [1, 3, 2, 1, 0]
		alloclink    [34, 33, 0]
		alloclink    [35, 32, 2]
		alloclink    [36, 32, 1]
		alloclink    [37, 33, 1]
		alloclink    [38, 32, 0]
		getfromlist  [39, 30, 0]
		unifylinks     [38, 37, 0]
		getlink      [40, 3, 1]
		unifylinks     [36, 40, 0]
		getlink      [41, 1, 2]
		unifylinks     [35, 41, 0]
		unifylinks     [34, 39, 0]
		deleteconnectors[22, 31]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeground     [27]
		freeground     [25]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 57]
		findatom     [1, 0, 'extract_function'_4]
		getlink      [7, 1, 3]
		getlink      [6, 1, 2]
		getlink      [5, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		getlink      [8, 3, 1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		getlink      [9, 4, 0]
		newlist      [11]
		addtolist      [11, 5]
		newlist      [12]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		addtolist      [12, 9]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 9]
		neqground      [11, 14]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		commit         ["_extr", 0]
		newlist      [17]
		getlink      [18, 1, 0]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 4, 0]
		addtolist      [19, 20]
		removeatom     [1, 0, 'extract_function'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeground   [19, 0]
		removeground   [17, 0]
		getlink      [21, 4, 0]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 0]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 1, 0]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 4, 0]
		addtolist      [27, 28]
		copyground   [29, 27, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyground   [32, 25, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		newatom      [35, 0, 'extract_function'_4]
		newatom      [36, 0, '.'_3]
		newatom      [37, 0, 'apply'_3]
		newatom      [38, 0, 'symbol'_2]
		alloclink    [39, 38, 0]
		alloclink    [40, 37, 1]
		alloclink    [41, 38, 1]
		alloclink    [42, 37, 0]
		alloclink    [43, 36, 2]
		alloclink    [44, 37, 2]
		alloclink    [45, 36, 0]
		alloclink    [46, 36, 1]
		alloclink    [47, 35, 3]
		alloclink    [48, 35, 2]
		alloclink    [49, 35, 1]
		alloclink    [50, 35, 0]
		getfromlist  [51, 33, 0]
		getfromlist  [52, 30, 0]
		unifylinks     [50, 51, 0]
		getlink      [53, 2, 1]
		unifylinks     [49, 53, 0]
		getlink      [54, 1, 2]
		unifylinks     [48, 54, 0]
		unifylinks     [47, 46, 0]
		unifylinks     [45, 44, 0]
		getlink      [55, 1, 3]
		unifylinks     [43, 55, 0]
		unifylinks     [42, 41, 0]
		getlink      [56, 3, 1]
		unifylinks     [40, 56, 0]
		unifylinks     [39, 52, 0]
		deleteconnectors[22, 31]
		deleteconnectors[24, 34]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeground     [27]
		freeground     [25]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'extract_function'_4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		commit         ["_extr", 0]
		removeatom     [1, 0, 'extract_function'_4]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'extract_function'_4]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'process_context'_4]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [4, 3, 5, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 3, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'convert_arg_var0'_4]
		derefatom    [6, 1, 2]
		isint          [6]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		derefatom    [4, 3, 0]
		isint          [4]
		deref        [2, 1, 0, 0]
		func           [2, 'none'_1]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [2, 0, 'none'_1]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [6, 0]
		removeatom     [4, 0]
		removeatom     [5, 0]
		newatom      [7, 0, 'none'_1]
		relink         [7, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'convert_arg_var0'_4]
		derefatom    [6, 1, 2]
		isint          [6]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		derefatom    [4, 3, 0]
		isint          [4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [6, 0]
		removeatom     [4, 0]
		removeatom     [5, 0]
		newatom      [7, 0, '[]'_1]
		relink         [7, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'convert_arg_var0'_4]
		derefatom    [8, 1, 2]
		isint          [8]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [6, 3, 0]
		isint          [6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [4, 2, 0, 2]
		func           [4, 'variable'_3]
		derefatom    [7, 4, 1]
		isstring       [7]
		derefatom    [5, 4, 0]
		isint          [5]
		ieq            [5, 6]
		commit         ["_conv", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [8, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [9, 0, 8]
		copyatom     [10, 0, 8]
		copyatom     [11, 0, 5]
		copyatom     [12, 0, 6]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'variable'_3]
		newatom      [15, 0, 'string'.'concat'_3]
		newatom      [16, 0, "arg"_1]
		newatom      [17, 0, 'string'.'from'_2]
		newatom      [18, 0, 'convert_arg_var0'_4]
		newatom      [19, 0, 'variable'_3]
		newlink        [13, 0, 14, 2, 0]
		newlink        [13, 1, 18, 3, 0]
		relink         [13, 2, 1, 3, 0]
		newlink        [14, 0, 11, 0, 0]
		newlink        [14, 1, 15, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 1, 0]
		newlink        [17, 0, 9, 0, 0]
		relink         [18, 0, 2, 1, 0]
		newlink        [18, 1, 19, 2, 0]
		newlink        [18, 2, 10, 0, 0]
		newlink        [19, 0, 12, 0, 0]
		relink         [19, 1, 3, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		freeatom       [7]
		freeatom       [8]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'convert_arg_var0'_4]
		derefatom    [8, 1, 2]
		isint          [8]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [6, 3, 0]
		isint          [6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [4, 2, 0, 2]
		func           [4, 'variable'_3]
		derefatom    [7, 4, 1]
		isstring       [7]
		derefatom    [5, 4, 0]
		isint          [5]
		ine            [5, 6]
		commit         ["_conv", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [8, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [9, 0, 7]
		copyatom     [10, 0, 8]
		copyatom     [11, 0, 5]
		copyatom     [12, 0, 6]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'variable'_3]
		newatom      [15, 0, 'convert_arg_var0'_4]
		newatom      [16, 0, 'variable'_3]
		newlink        [13, 0, 14, 2, 0]
		newlink        [13, 1, 15, 3, 0]
		relink         [13, 2, 1, 3, 0]
		newlink        [14, 0, 11, 0, 0]
		newlink        [14, 1, 9, 0, 0]
		relink         [15, 0, 2, 1, 0]
		newlink        [15, 1, 16, 2, 0]
		newlink        [15, 2, 10, 0, 0]
		newlink        [16, 0, 12, 0, 0]
		relink         [16, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		freeatom       [7]
		freeatom       [8]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'convert_arg_var0'_4]
		derefatom    [7, 1, 2]
		isint          [7]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [6, 3, 1]
		isstring       [6]
		derefatom    [5, 3, 0]
		isint          [5]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [4, 2, 0, 2]
		func           [4, 'apply'_3]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [8, 0, 7]
		copyatom     [9, 0, 7]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		copyatom     [12, 0, 6]
		copyatom     [13, 0, 6]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'apply'_3]
		newatom      [16, 0, 'convert_arg_var0'_4]
		newatom      [17, 0, 'variable'_3]
		newatom      [18, 0, 'convert_arg_var0'_4]
		newatom      [19, 0, 'variable'_3]
		newlink        [14, 0, 15, 2, 0]
		newlink        [14, 1, 18, 3, 0]
		relink         [14, 2, 1, 3, 0]
		relink         [15, 0, 4, 0, 0]
		newlink        [15, 1, 16, 3, 0]
		relink         [16, 0, 4, 1, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [16, 2, 8, 0, 0]
		newlink        [17, 0, 10, 0, 0]
		newlink        [17, 1, 12, 0, 0]
		relink         [18, 0, 2, 1, 0]
		newlink        [18, 1, 19, 2, 0]
		newlink        [18, 2, 9, 0, 0]
		newlink        [19, 0, 11, 0, 0]
		newlink        [19, 1, 13, 0, 0]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		freeatom       [7]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'convert_arg_var0'_4]
		derefatom    [7, 1, 2]
		isint          [7]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [6, 3, 1]
		isstring       [6]
		derefatom    [5, 3, 0]
		isint          [5]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [4, 2, 0, 3]
		func           [4, 'process_context'_4]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [4, 0, 'process_context'_4]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [8, 0, 7]
		copyatom     [9, 0, 7]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		copyatom     [12, 0, 6]
		copyatom     [13, 0, 6]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'process_context'_4]
		newatom      [16, 0, 'convert_arg_var0'_4]
		newatom      [17, 0, 'variable'_3]
		newatom      [18, 0, 'convert_arg_var0'_4]
		newatom      [19, 0, 'variable'_3]
		newlink        [14, 0, 15, 3, 0]
		newlink        [14, 1, 18, 3, 0]
		relink         [14, 2, 1, 3, 0]
		relink         [15, 0, 4, 0, 0]
		relink         [15, 1, 4, 1, 0]
		newlink        [15, 2, 16, 3, 0]
		relink         [16, 0, 4, 2, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [16, 2, 8, 0, 0]
		newlink        [17, 0, 10, 0, 0]
		newlink        [17, 1, 12, 0, 0]
		relink         [18, 0, 2, 1, 0]
		newlink        [18, 1, 19, 2, 0]
		newlink        [18, 2, 9, 0, 0]
		newlink        [19, 0, 11, 0, 0]
		newlink        [19, 1, 13, 0, 0]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		freeatom       [7]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'convert_arg_var0'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [4, 2, 0, 1]
		func           [4, 'atom'_2]
		deref        [5, 4, 0, 1]
		func           [5, 'number'_2]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'convert_arg_var0'_4]
		removeatom     [4, 0, 'atom'_2]
		removeatom     [5, 0, 'number'_2]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'atom'_2]
		newatom      [8, 0, 'number'_2]
		newatom      [9, 0, 'convert_arg_var0'_4]
		newatom      [10, 0, 'variable'_3]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 9, 3, 0]
		relink         [6, 2, 1, 3, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [8, 0, 5, 0, 0]
		relink         [9, 0, 2, 1, 0]
		newlink        [9, 1, 10, 2, 0]
		relink         [9, 2, 1, 2, 0]
		relink         [10, 0, 3, 0, 0]
		relink         [10, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [4]
		freeatom       [5]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'convert_arg_var'_8]
		derefatom    [5, 1, 4]
		isint          [5]
		deref        [2, 1, 3, 2]
		func           [2, 'variable'_3]
		derefatom    [4, 2, 1]
		isstring       [4]
		derefatom    [3, 2, 0]
		isint          [3]
		commit         ["_conv", 0]
		removeatom     [1, 0, 'convert_arg_var'_8]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [5, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 5]
		copyatom     [8, 0, 5]
		copyatom     [9, 0, 3]
		copyatom     [10, 0, 3]
		copyatom     [11, 0, 3]
		copyatom     [12, 0, 4]
		copyatom     [13, 0, 4]
		copyatom     [14, 0, 4]
		newatom      [15, 0, 'convert_arg_var0'_4]
		newatom      [16, 0, 'variable'_3]
		newatom      [17, 0, 'convert_arg_var0'_4]
		newatom      [18, 0, 'variable'_3]
		newatom      [19, 0, 'convert_arg_var0'_4]
		newatom      [20, 0, 'variable'_3]
		relink         [15, 0, 1, 0, 0]
		newlink        [15, 1, 16, 2, 0]
		newlink        [15, 2, 6, 0, 0]
		relink         [15, 3, 1, 5, 0]
		newlink        [16, 0, 9, 0, 0]
		newlink        [16, 1, 12, 0, 0]
		relink         [17, 0, 1, 1, 0]
		newlink        [17, 1, 18, 2, 0]
		newlink        [17, 2, 7, 0, 0]
		relink         [17, 3, 1, 6, 0]
		newlink        [18, 0, 10, 0, 0]
		newlink        [18, 1, 13, 0, 0]
		relink         [19, 0, 1, 2, 0]
		newlink        [19, 1, 20, 2, 0]
		newlink        [19, 2, 8, 0, 0]
		relink         [19, 3, 1, 7, 0]
		newlink        [20, 0, 11, 0, 0]
		newlink        [20, 1, 14, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'convert_arg_var'_9]
		derefatom    [3, 1, 4]
		isint          [3]
		deref        [2, 1, 3, 0]
		func           [2, '[]'_1]
		commit         ["_conv", 0]
		removeatom     [1, 0, 'convert_arg_var'_9]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 5, 1, 0, 0]
		unify          [1, 6, 1, 1, 0]
		unify          [1, 7, 1, 2, 0]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 8, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 25]
		findatom     [1, 0, 'convert_arg_var'_9]
		derefatom    [7, 1, 4]
		isint          [7]
		allocatom    [6, 1_1]
		iadd         [8, 7, 6]
		getfunc      [9, 8]
		allocatomindirect[10, 9]
		deref        [2, 1, 3, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		derefatom    [4, 3, 0]
		isint          [4]
		commit         ["_conv", 0]
		removeatom     [1, 0, 'convert_arg_var'_9]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [4, 0]
		removeatom     [5, 0]
		copyatom     [11, 0, 10]
		copyatom     [12, 0, 7]
		copyatom     [13, 0, 7]
		copyatom     [14, 0, 4]
		copyatom     [15, 0, 4]
		copyatom     [16, 0, 5]
		newatom      [17, 0, 'convert_arg_var'_8]
		newatom      [18, 0, 'variable'_3]
		newatom      [19, 0, 'convert_arg_var'_9]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'variable'_3]
		newatom      [22, 0, 'string'.'concat'_3]
		newatom      [23, 0, "arg"_1]
		newatom      [24, 0, 'string'.'from'_2]
		relink         [17, 0, 1, 0, 0]
		relink         [17, 1, 1, 1, 0]
		relink         [17, 2, 1, 2, 0]
		newlink        [17, 3, 18, 2, 0]
		newlink        [17, 4, 12, 0, 0]
		newlink        [17, 5, 19, 0, 0]
		newlink        [17, 6, 19, 1, 0]
		newlink        [17, 7, 19, 2, 0]
		newlink        [18, 0, 14, 0, 0]
		newlink        [18, 1, 16, 0, 0]
		relink         [19, 3, 2, 1, 0]
		newlink        [19, 4, 11, 0, 0]
		relink         [19, 5, 1, 5, 0]
		relink         [19, 6, 1, 6, 0]
		relink         [19, 7, 1, 7, 0]
		newlink        [19, 8, 20, 1, 0]
		newlink        [20, 0, 21, 2, 0]
		relink         [20, 2, 1, 8, 0]
		newlink        [21, 0, 15, 0, 0]
		newlink        [21, 1, 22, 2, 0]
		newlink        [22, 0, 23, 0, 0]
		newlink        [22, 1, 24, 1, 0]
		newlink        [24, 0, 13, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [10]
		freeatom       [8]
		freeatom       [7]
		freeatom       [6]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'convert_arg_var'_8]
		deref        [2, 1, 3, 2]
		func           [2, 'apply'_3]
		commit         ["_conv", 0]
		removeatom     [1, 0, 'convert_arg_var'_8]
		removeatom     [2, 0, 'apply'_3]
		newatom      [3, 0, 'convert_arg_var'_9]
		newatom      [4, 0, 0_1]
		newatom      [5, 0, 'apply'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [3, 3, 2, 1, 0]
		newlink        [3, 4, 4, 0, 0]
		relink         [3, 5, 1, 4, 0]
		relink         [3, 6, 1, 5, 0]
		relink         [3, 7, 1, 6, 0]
		newlink        [3, 8, 5, 1, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 2, 1, 7, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'analyze_variable'_2]
		commit         ["_Rana", 0]
		removeatom     [1, 0, 'analyze_variable'_2]
		newatom      [2, 0, 'fold_right'_4]
		newatom      [3, 0, 'lambda'_4]
		newatom      [4, 0, 'analyze_variable2'_3]
		newatom      [5, 0, '[]'_1]
		newlink        [2, 0, 3, 3, 0]
		relink         [2, 1, 1, 0, 0]
		newlink        [2, 2, 5, 0, 0]
		relink         [2, 3, 1, 1, 0]
		newlink        [3, 0, 4, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		newlink        [3, 2, 4, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'analyze_variable2'_3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, 'pair'_3]
		getlink      [6, 2, 1]
		deref        [3, 2, 0, 0]
		func           [3, 'root'_1]
		newlist      [7]
		addtolist      [7, 6]
		newlist      [8]
		addtolist      [8, 4]
		addtolist      [8, 5]
		isground     [9, 7, 8]
		commit         ["_Rana", 0]
		newlist      [10]
		getlink      [11, 2, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'analyze_variable2'_3]
		removeatom     [2, 0, 'pair'_3]
		removeatom     [3, 0, 'root'_1]
		removeground   [10, 0]
		getlink      [12, 2, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 2, 1]
		addtolist      [14, 15]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 22]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'analyze_variable2'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'pair'_3]
		deref        [4, 2, 1, 2]
		func           [4, 'apply'_3]
		deref        [5, 4, 0, 1]
		func           [5, 'symbol'_2]
		derefatom    [7, 5, 0]
		isstring       [7]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [8, 3, 1]
		isstring       [8]
		findatom     [6, 0, 'type_db'_1]
		commit         ["_Rana", 0]
		removeatom     [1, 0, 'analyze_variable2'_3]
		removeatom     [2, 0, 'pair'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [5, 0, 'symbol'_2]
		removeatom     [6, 0, 'type_db'_1]
		removeatom     [7, 0]
		removeatom     [8, 0]
		copyatom     [9, 0, 7]
		copyatom     [10, 0, 7]
		copyatom     [11, 0, 7]
		copyatom     [12, 0, 8]
		newatom      [13, 0, 'pattern_match'_6]
		newatom      [14, 0, 'variable'_3]
		newatom      [15, 0, 'apply'_3]
		newatom      [16, 0, 'symbol'_2]
		newatom      [17, 0, 'types'.'get_constructor_named'_4]
		newatom      [18, 0, 'types'.'get_type_with_constructor'_4]
		newatom      [19, 0, 'type_db'_1]
		newlink        [13, 0, 14, 2, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [13, 2, 17, 3, 0]
		newlink        [13, 3, 18, 3, 0]
		relink         [13, 4, 1, 1, 0]
		relink         [13, 5, 1, 2, 0]
		relink         [14, 0, 3, 0, 0]
		newlink        [14, 1, 12, 0, 0]
		newlink        [15, 0, 16, 1, 0]
		relink         [15, 1, 4, 1, 0]
		newlink        [16, 0, 9, 0, 0]
		relink         [17, 0, 6, 0, 0]
		newlink        [17, 1, 10, 0, 0]
		newlink        [17, 2, 18, 0, 0]
		newlink        [18, 1, 11, 0, 0]
		newlink        [18, 2, 19, 0, 0]
		loadmodule     [0, "types"]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 28]
	--memmatch:
		spec           [1, 28]
		findatom     [1, 0, 'analyze_variable2'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'pair'_3]
		deref        [4, 2, 1, 3]
		func           [4, 'process_context'_4]
		derefatom    [12, 4, 1]
		isstring       [12]
		derefatom    [10, 4, 0]
		isstring       [10]
		deref        [5, 4, 2, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 5, 0, 2]
		func           [6, 'variable'_3]
		derefatom    [11, 6, 1]
		isstring       [11]
		derefatom    [9, 6, 0]
		isint          [9]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [8, 3, 0]
		isint          [8]
		ieq            [8, 9]
		commit         ["_Rana", 0]
		removeatom     [1, 0, 'analyze_variable2'_3]
		removeatom     [2, 0, 'pair'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [4, 0, 'process_context'_4]
		removeatom     [6, 0, 'variable'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeatom     [11, 0]
		removeatom     [8, 0]
		removeatom     [9, 0]
		removeatom     [12, 0]
		removeatom     [10, 0]
		copyatom     [13, 0, 12]
		copyatom     [14, 0, 12]
		copyatom     [15, 0, 10]
		copyatom     [16, 0, 10]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'declare'_4]
		newatom      [19, 0, 'string'.'concat'_3]
		newatom      [20, 0, "*"_1]
		newatom      [21, 0, 'string'.'concat'_3]
		newatom      [22, 0, "p"_1]
		newatom      [23, 0, 'obj'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'free'_3]
		newatom      [26, 0, 'string'.'concat'_3]
		newatom      [27, 0, "p"_1]
		newlink        [17, 0, 18, 3, 0]
		newlink        [17, 1, 24, 2, 0]
		relink         [17, 2, 1, 2, 0]
		newlink        [18, 0, 19, 2, 0]
		newlink        [18, 1, 21, 2, 0]
		newlink        [18, 2, 23, 1, 0]
		newlink        [19, 0, 13, 0, 0]
		newlink        [19, 1, 20, 0, 0]
		newlink        [21, 0, 22, 0, 0]
		newlink        [21, 1, 15, 0, 0]
		relink         [23, 0, 3, 1, 0]
		newlink        [24, 0, 25, 2, 0]
		relink         [24, 1, 1, 1, 0]
		newlink        [25, 0, 26, 2, 0]
		newlink        [25, 1, 14, 0, 0]
		newlink        [26, 0, 27, 0, 0]
		newlink        [26, 1, 16, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [5]
		freeatom       [7]
		freeatom       [11]
		freeatom       [8]
		freeatom       [9]
		freeatom       [12]
		freeatom       [10]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 33]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'analyze_variable2'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'pair'_3]
		deref        [4, 2, 1, 2]
		func           [4, 'apply'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [9, 6, 1, 0]
		func           [9, '[]'_1]
		deref        [8, 6, 0, 2]
		func           [8, 'variable'_3]
		derefatom    [12, 8, 1]
		isstring       [12]
		derefatom    [11, 8, 0]
		isint          [11]
		deref        [5, 4, 0, 1]
		func           [5, 'number'_2]
		deref        [7, 5, 0, 1]
		func           [7, 'int'_2]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [10, 3, 0]
		isint          [10]
		ieq            [10, 11]
		commit         ["_Rana", 0]
		removeatom     [1, 0, 'analyze_variable2'_3]
		removeatom     [2, 0, 'pair'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [5, 0, 'number'_2]
		removeatom     [7, 0, 'int'_2]
		removeatom     [8, 0, 'variable'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [9, 0, '[]'_1]
		removeatom     [12, 0]
		removeatom     [10, 0]
		removeatom     [11, 0]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'compare'_4]
		newatom      [15, 0, "=:="_1]
		newatom      [16, 0, 'number'_2]
		newatom      [17, 0, 'int'_2]
		newlink        [13, 0, 14, 3, 0]
		relink         [13, 1, 1, 1, 0]
		relink         [13, 2, 1, 2, 0]
		newlink        [14, 0, 15, 0, 0]
		relink         [14, 1, 3, 1, 0]
		newlink        [14, 2, 16, 1, 0]
		newlink        [16, 0, 17, 1, 0]
		relink         [17, 0, 7, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [8]
		freeatom       [6]
		freeatom       [9]
		freeatom       [12]
		freeatom       [10]
		freeatom       [11]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 43]
	--memmatch:
		spec           [1, 71]
		findatom     [1, 0, 'pattern_match'_6]
		getlink      [13, 1, 5]
		getlink      [12, 1, 4]
		deref        [5, 1, 3, 3]
		func           [5, 'type'_4]
		getlink      [20, 5, 2]
		getlink      [19, 5, 1]
		getlink      [18, 5, 0]
		deref        [4, 1, 2, 3]
		func           [4, 'constructor'_4]
		derefatom    [26, 4, 0]
		isstring       [26]
		getlink      [17, 4, 0]
		deref        [9, 4, 2, 0]
		func           [9, '[]'_1]
		deref        [8, 4, 1, 2]
		func           [8, '.'_3]
		getlink      [22, 8, 0]
		deref        [11, 8, 1, 0]
		func           [11, '[]'_1]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [7, 3, 1, 2]
		func           [7, '.'_3]
		getlink      [21, 7, 0]
		deref        [10, 7, 1, 0]
		func           [10, '[]'_1]
		deref        [6, 3, 0, 1]
		func           [6, 'symbol'_2]
		derefatom    [25, 6, 0]
		isstring       [25]
		getlink      [16, 6, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [24, 2, 1]
		isstring       [24]
		derefatom    [23, 2, 0]
		isint          [23]
		getlink      [15, 2, 1]
		getlink      [14, 2, 0]
		newlist      [27]
		addtolist      [27, 19]
		newlist      [28]
		addtolist      [28, 12]
		addtolist      [28, 13]
		addtolist      [28, 14]
		addtolist      [28, 15]
		addtolist      [28, 16]
		addtolist      [28, 17]
		addtolist      [28, 18]
		addtolist      [28, 20]
		addtolist      [28, 21]
		addtolist      [28, 22]
		isground     [29, 27, 28]
		newlist      [30]
		addtolist      [30, 20]
		newlist      [31]
		addtolist      [31, 12]
		addtolist      [31, 13]
		addtolist      [31, 14]
		addtolist      [31, 15]
		addtolist      [31, 16]
		addtolist      [31, 17]
		addtolist      [31, 18]
		addtolist      [31, 19]
		addtolist      [31, 21]
		addtolist      [31, 22]
		isground     [32, 30, 31]
		newlist      [33]
		addtolist      [33, 21]
		newlist      [34]
		addtolist      [34, 12]
		addtolist      [34, 13]
		addtolist      [34, 14]
		addtolist      [34, 15]
		addtolist      [34, 16]
		addtolist      [34, 17]
		addtolist      [34, 18]
		addtolist      [34, 19]
		addtolist      [34, 20]
		addtolist      [34, 22]
		isground     [35, 33, 34]
		newlist      [36]
		addtolist      [36, 22]
		newlist      [37]
		addtolist      [37, 12]
		addtolist      [37, 13]
		addtolist      [37, 14]
		addtolist      [37, 15]
		addtolist      [37, 16]
		addtolist      [37, 17]
		addtolist      [37, 18]
		addtolist      [37, 19]
		addtolist      [37, 20]
		addtolist      [37, 21]
		isground     [38, 36, 37]
		commit         ["_Rpat", 0]
		newlist      [39]
		getlink      [40, 8, 0]
		addtolist      [39, 40]
		newlist      [41]
		getlink      [42, 5, 2]
		addtolist      [41, 42]
		newlist      [43]
		getlink      [44, 7, 0]
		addtolist      [43, 44]
		newlist      [45]
		getlink      [46, 5, 1]
		addtolist      [45, 46]
		removeatom     [1, 0, 'pattern_match'_6]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [6, 0, 'symbol'_2]
		removeatom     [4, 0, 'constructor'_4]
		removeatom     [5, 0, 'type'_4]
		removeatom     [7, 0, '.'_3]
		removeatom     [10, 0, '[]'_1]
		removeatom     [8, 0, '.'_3]
		removeatom     [11, 0, '[]'_1]
		removeatom     [9, 0, '[]'_1]
		removeground   [41, 0]
		removeground   [39, 0]
		removeatom     [24, 0]
		removeatom     [26, 0]
		removeatom     [25, 0]
		removeatom     [23, 0]
		removeground   [45, 0]
		removeground   [43, 0]
		getlink      [47, 5, 2]
		insertconnectorsinnull[48, [47]]
		getlink      [49, 8, 0]
		insertconnectorsinnull[50, [49]]
		getlink      [51, 5, 1]
		insertconnectorsinnull[52, [51]]
		getlink      [53, 7, 0]
		insertconnectorsinnull[54, [53]]
		newlist      [55]
		getlink      [56, 8, 0]
		addtolist      [55, 56]
		newlist      [57]
		getlink      [58, 5, 2]
		addtolist      [57, 58]
		newlist      [59]
		getlink      [60, 7, 0]
		addtolist      [59, 60]
		newlist      [61]
		getlink      [62, 5, 1]
		addtolist      [61, 62]
		copyatom     [63, 0, 24]
		copyatom     [64, 0, 24]
		copyatom     [65, 0, 25]
		newatom      [66, 0, '.'_3]
		newatom      [67, 0, 'match'_3]
		newatom      [68, 0, '.'_3]
		newatom      [69, 0, 'free'_3]
		newatom      [70, 0, 'obj'_2]
		newlink        [66, 0, 67, 2, 0]
		newlink        [66, 1, 68, 2, 0]
		relink         [66, 2, 1, 5, 0]
		newlink        [67, 0, 63, 0, 0]
		newlink        [67, 1, 65, 0, 0]
		newlink        [68, 0, 69, 2, 0]
		relink         [68, 1, 1, 4, 0]
		newlink        [69, 0, 70, 1, 0]
		relink         [69, 1, 5, 0, 0]
		newlink        [70, 0, 64, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [10]
		freeatom       [8]
		freeatom       [11]
		freeatom       [9]
		freeground     [57]
		freeground     [55]
		freeatom       [24]
		freeatom       [26]
		freeatom       [25]
		freeatom       [23]
		freeground     [61]
		freeground     [59]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'pattern_match'_6]
		getlink      [8, 1, 5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 2]
		deref        [4, 1, 3, 3]
		func           [4, 'type'_4]
		derefatom    [17, 4, 0]
		isstring       [17]
		getlink      [15, 4, 2]
		getlink      [14, 4, 1]
		getlink      [13, 4, 0]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		getlink      [11, 3, 1]
		deref        [5, 3, 0, 1]
		func           [5, 'symbol'_2]
		getlink      [12, 5, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [16, 2, 1]
		isstring       [16]
		getlink      [10, 2, 1]
		getlink      [9, 2, 0]
		newlist      [18]
		addtolist      [18, 14]
		newlist      [19]
		addtolist      [19, 6]
		addtolist      [19, 7]
		addtolist      [19, 8]
		addtolist      [19, 9]
		addtolist      [19, 10]
		addtolist      [19, 11]
		addtolist      [19, 12]
		addtolist      [19, 13]
		addtolist      [19, 15]
		isground     [20, 18, 19]
		newlist      [21]
		addtolist      [21, 15]
		newlist      [22]
		addtolist      [22, 6]
		addtolist      [22, 7]
		addtolist      [22, 8]
		addtolist      [22, 9]
		addtolist      [22, 10]
		addtolist      [22, 11]
		addtolist      [22, 12]
		addtolist      [22, 13]
		addtolist      [22, 14]
		isground     [23, 21, 22]
		commit         ["_Rpat", 0]
		newlist      [24]
		getlink      [25, 4, 1]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 4, 2]
		addtolist      [26, 27]
		removeatom     [1, 0, 'pattern_match'_6]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [5, 0, 'symbol'_2]
		removeatom     [4, 0, 'type'_4]
		removeground   [26, 0]
		removeatom     [16, 0]
		removeground   [24, 0]
		removeatom     [17, 0]
		getlink      [28, 4, 2]
		insertconnectorsinnull[29, [28]]
		getlink      [30, 4, 1]
		insertconnectorsinnull[31, [30]]
		newlist      [32]
		getlink      [33, 4, 1]
		addtolist      [32, 33]
		newlist      [34]
		getlink      [35, 4, 2]
		addtolist      [34, 35]
		copyatom     [36, 0, 16]
		copyatom     [37, 0, 16]
		copyatom     [38, 0, 16]
		copyatom     [39, 0, 16]
		copyatom     [40, 0, 16]
		copyatom     [41, 0, 17]
		copyatom     [42, 0, 17]
		newatom      [43, 0, '.'_3]
		newatom      [44, 0, 'match'_3]
		newatom      [45, 0, '.'_3]
		newatom      [46, 0, 'free'_3]
		newatom      [47, 0, 'obj'_2]
		newatom      [48, 0, '.'_3]
		newatom      [49, 0, 'locate'_4]
		newatom      [50, 0, 'get_connected_linkname'_6]
		newatom      [51, 0, 'deconstruct_into_links'_5]
		newatom      [52, 0, 'variable'_3]
		newlink        [43, 0, 44, 2, 0]
		newlink        [43, 1, 45, 2, 0]
		relink         [43, 2, 1, 5, 0]
		newlink        [44, 0, 36, 0, 0]
		relink         [44, 1, 5, 0, 0]
		newlink        [45, 0, 46, 2, 0]
		newlink        [45, 1, 48, 2, 0]
		newlink        [46, 0, 47, 1, 0]
		newlink        [46, 1, 41, 0, 0]
		newlink        [47, 0, 37, 0, 0]
		newlink        [48, 0, 49, 3, 0]
		newlink        [48, 1, 51, 4, 0]
		newlink        [49, 0, 38, 0, 0]
		newlink        [49, 1, 42, 0, 0]
		newlink        [49, 2, 50, 5, 0]
		newlink        [50, 0, 39, 0, 0]
		relink         [50, 1, 3, 1, 0]
		relink         [50, 2, 1, 2, 0]
		newlink        [50, 3, 51, 1, 0]
		newlink        [50, 4, 51, 2, 0]
		newlink        [51, 0, 52, 2, 0]
		relink         [51, 3, 1, 4, 0]
		relink         [52, 0, 2, 0, 0]
		newlink        [52, 1, 40, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		freeground     [34]
		freeatom       [16]
		freeground     [32]
		freeatom       [17]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_connected_linkname'_6]
		deref        [2, 1, 2, 3]
		func           [2, 'constructor'_4]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_connected_linkname'_6]
		removeatom     [2, 0, 'constructor'_4]
		newatom      [3, 0, 'get_connected_linkname_'_6]
		newatom      [4, 0, 'constructor'_4]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 2, 1, 0]
		relink         [3, 3, 1, 3, 0]
		newlink        [3, 4, 4, 1, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 2, 2, 2, 0]
		relink         [4, 3, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 73]
		findatom     [1, 0, 'get_connected_linkname_'_6]
		getlink      [9, 1, 5]
		getlink      [8, 1, 4]
		getlink      [7, 1, 3]
		getlink      [6, 1, 0]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		getlink      [15, 3, 1]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		getlink      [13, 5, 1]
		getlink      [12, 5, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [14, 2, 1]
		deref        [4, 2, 0, 2]
		func           [4, 'variable'_3]
		getlink      [11, 4, 1]
		getlink      [10, 4, 0]
		newlist      [16]
		addtolist      [16, 6]
		newlist      [17]
		addtolist      [17, 7]
		addtolist      [17, 8]
		addtolist      [17, 9]
		addtolist      [17, 10]
		addtolist      [17, 11]
		addtolist      [17, 12]
		addtolist      [17, 13]
		addtolist      [17, 14]
		addtolist      [17, 15]
		isground     [18, 16, 17]
		newlist      [19]
		addtolist      [19, 11]
		neqground      [16, 19]
		newlist      [20]
		addtolist      [20, 6]
		addtolist      [20, 7]
		addtolist      [20, 8]
		addtolist      [20, 9]
		addtolist      [20, 10]
		addtolist      [20, 12]
		addtolist      [20, 13]
		addtolist      [20, 14]
		addtolist      [20, 15]
		isground     [21, 19, 20]
		commit         ["_Rget", 0]
		newlist      [22]
		getlink      [23, 1, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 4, 1]
		addtolist      [24, 25]
		removeatom     [1, 0, 'get_connected_linkname_'_6]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		removeground   [24, 0]
		removeground   [22, 0]
		getlink      [26, 4, 1]
		insertconnectorsinnull[27, [26]]
		getlink      [28, 1, 0]
		insertconnectorsinnull[29, [28]]
		newlist      [30]
		getlink      [31, 1, 0]
		addtolist      [30, 31]
		newlist      [32]
		getlink      [33, 4, 1]
		addtolist      [32, 33]
		copyground   [34, 32, 0]
		getfromlist  [35, 34, 0]
		getfromlist  [36, 34, 1]
		copyground   [37, 30, 0]
		getfromlist  [38, 37, 0]
		getfromlist  [39, 37, 1]
		newatom      [40, 0, 'get_connected_linkname_'_6]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, 'variable'_3]
		newatom      [43, 0, '.'_3]
		newatom      [44, 0, 'variable'_3]
		alloclink    [45, 44, 1]
		alloclink    [46, 44, 0]
		alloclink    [47, 43, 2]
		alloclink    [48, 44, 2]
		alloclink    [49, 43, 0]
		alloclink    [50, 42, 1]
		alloclink    [51, 42, 0]
		alloclink    [52, 41, 2]
		alloclink    [53, 42, 2]
		alloclink    [54, 41, 0]
		alloclink    [55, 40, 5]
		alloclink    [56, 43, 1]
		alloclink    [57, 40, 4]
		alloclink    [58, 41, 1]
		alloclink    [59, 40, 3]
		alloclink    [60, 40, 2]
		alloclink    [61, 40, 1]
		alloclink    [62, 40, 0]
		getfromlist  [63, 38, 0]
		getfromlist  [64, 35, 0]
		unifylinks     [62, 63, 0]
		getlink      [65, 2, 1]
		unifylinks     [61, 65, 0]
		getlink      [66, 3, 1]
		unifylinks     [60, 66, 0]
		unifylinks     [59, 58, 0]
		unifylinks     [57, 56, 0]
		getlink      [67, 1, 5]
		unifylinks     [55, 67, 0]
		unifylinks     [54, 53, 0]
		getlink      [68, 1, 3]
		unifylinks     [52, 68, 0]
		getlink      [69, 4, 0]
		unifylinks     [51, 69, 0]
		unifylinks     [50, 64, 0]
		unifylinks     [49, 48, 0]
		getlink      [70, 1, 4]
		unifylinks     [47, 70, 0]
		getlink      [71, 5, 0]
		unifylinks     [46, 71, 0]
		getlink      [72, 5, 1]
		unifylinks     [45, 72, 0]
		deleteconnectors[27, 36]
		deleteconnectors[29, 39]
		freeatom       [1]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		freeatom       [3]
		freeground     [32]
		freeground     [30]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 66]
		findatom     [1, 0, 'get_connected_linkname_'_6]
		getlink      [9, 1, 5]
		getlink      [8, 1, 4]
		getlink      [7, 1, 3]
		getlink      [6, 1, 0]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		getlink      [15, 3, 1]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		derefatom    [16, 5, 1]
		isstring       [16]
		getlink      [13, 5, 1]
		getlink      [12, 5, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [14, 2, 1]
		deref        [4, 2, 0, 2]
		func           [4, 'variable'_3]
		getlink      [11, 4, 1]
		getlink      [10, 4, 0]
		newlist      [17]
		addtolist      [17, 6]
		newlist      [18]
		addtolist      [18, 7]
		addtolist      [18, 8]
		addtolist      [18, 9]
		addtolist      [18, 10]
		addtolist      [18, 11]
		addtolist      [18, 12]
		addtolist      [18, 13]
		addtolist      [18, 14]
		addtolist      [18, 15]
		isground     [19, 17, 18]
		newlist      [20]
		addtolist      [20, 11]
		eqground       [17, 20]
		newlist      [21]
		addtolist      [21, 6]
		addtolist      [21, 7]
		addtolist      [21, 8]
		addtolist      [21, 9]
		addtolist      [21, 10]
		addtolist      [21, 12]
		addtolist      [21, 13]
		addtolist      [21, 14]
		addtolist      [21, 15]
		isground     [22, 20, 21]
		commit         ["_Rget", 0]
		newlist      [23]
		getlink      [24, 1, 0]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 4, 1]
		addtolist      [25, 26]
		removeatom     [1, 0, 'get_connected_linkname_'_6]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		removeground   [25, 0]
		removeatom     [16, 0]
		removeground   [23, 0]
		getlink      [27, 4, 1]
		insertconnectorsinnull[28, [27]]
		getlink      [29, 1, 0]
		insertconnectorsinnull[30, [29]]
		newlist      [31]
		getlink      [32, 1, 0]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 4, 1]
		addtolist      [33, 34]
		copyground   [35, 33, 0]
		getfromlist  [36, 35, 0]
		getfromlist  [37, 35, 1]
		copyatom     [38, 0, 16]
		copyatom     [39, 0, 16]
		newatom      [40, 0, '.'_3]
		newatom      [41, 0, 'variable'_3]
		newatom      [42, 0, '.'_3]
		newatom      [43, 0, 'variable'_3]
		alloclink    [44, 38, 0]
		alloclink    [45, 39, 0]
		alloclink    [46, 43, 1]
		alloclink    [47, 43, 0]
		alloclink    [48, 42, 2]
		alloclink    [49, 42, 1]
		alloclink    [50, 43, 2]
		alloclink    [51, 42, 0]
		alloclink    [52, 41, 1]
		alloclink    [53, 41, 0]
		alloclink    [54, 40, 2]
		alloclink    [55, 40, 1]
		alloclink    [56, 41, 2]
		alloclink    [57, 40, 0]
		getfromlist  [58, 36, 0]
		unifylinks     [57, 56, 0]
		getlink      [59, 2, 1]
		unifylinks     [55, 59, 0]
		getlink      [60, 1, 3]
		unifylinks     [54, 60, 0]
		getlink      [61, 4, 0]
		unifylinks     [53, 61, 0]
		unifylinks     [52, 58, 0]
		unifylinks     [51, 50, 0]
		getlink      [62, 3, 1]
		unifylinks     [49, 62, 0]
		getlink      [63, 1, 4]
		unifylinks     [48, 63, 0]
		getlink      [64, 5, 0]
		unifylinks     [47, 64, 0]
		unifylinks     [46, 45, 0]
		getlink      [65, 1, 5]
		unifylinks     [44, 65, 0]
		deleteconnectors[28, 37]
		freeatom       [1]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		freeatom       [3]
		freeground     [33]
		freeatom       [16]
		freeground     [31]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 32]
	--memmatch:
		spec           [1, 67]
		findatom     [1, 0, 'deconstruct_into_links'_5]
		getlink      [9, 1, 4]
		getlink      [8, 1, 3]
		deref        [4, 1, 2, 3]
		func           [4, 'constructor'_4]
		getlink      [15, 4, 2]
		getlink      [14, 4, 0]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		getlink      [19, 6, 1]
		deref        [7, 6, 0, 2]
		func           [7, 'variable'_3]
		derefatom    [22, 7, 1]
		isstring       [22]
		derefatom    [21, 7, 0]
		isint          [21]
		getlink      [17, 7, 1]
		getlink      [16, 7, 0]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		getlink      [18, 3, 1]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		derefatom    [20, 5, 0]
		isint          [20]
		getlink      [13, 5, 1]
		getlink      [12, 5, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		getlink      [11, 2, 1]
		getlink      [10, 2, 0]
		newlist      [23]
		addtolist      [23, 11]
		newlist      [24]
		addtolist      [24, 8]
		addtolist      [24, 9]
		addtolist      [24, 10]
		addtolist      [24, 12]
		addtolist      [24, 13]
		addtolist      [24, 14]
		addtolist      [24, 15]
		addtolist      [24, 16]
		addtolist      [24, 17]
		addtolist      [24, 18]
		addtolist      [24, 19]
		isground     [25, 23, 24]
		newlist      [26]
		addtolist      [26, 13]
		eqground       [23, 26]
		newlist      [27]
		addtolist      [27, 8]
		addtolist      [27, 9]
		addtolist      [27, 10]
		addtolist      [27, 11]
		addtolist      [27, 12]
		addtolist      [27, 14]
		addtolist      [27, 15]
		addtolist      [27, 16]
		addtolist      [27, 17]
		addtolist      [27, 18]
		addtolist      [27, 19]
		isground     [28, 26, 27]
		commit         ["_Rdec", 0]
		newlist      [29]
		getlink      [30, 2, 1]
		addtolist      [29, 30]
		newlist      [31]
		getlink      [32, 5, 1]
		addtolist      [31, 32]
		removeatom     [1, 0, 'deconstruct_into_links'_5]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [4, 0, 'constructor'_4]
		removeatom     [7, 0, 'variable'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeground   [29, 0]
		removeground   [31, 0]
		removeatom     [22, 0]
		removeatom     [20, 0]
		removeatom     [21, 0]
		getlink      [33, 2, 1]
		insertconnectorsinnull[34, [33]]
		getlink      [35, 5, 1]
		insertconnectorsinnull[36, [35]]
		newlist      [37]
		getlink      [38, 2, 1]
		addtolist      [37, 38]
		newlist      [39]
		getlink      [40, 5, 1]
		addtolist      [39, 40]
		copyground   [41, 37, 0]
		getfromlist  [42, 41, 0]
		getfromlist  [43, 41, 1]
		newatom      [44, 0, 'deconstruct_into_links'_5]
		newatom      [45, 0, 'variable'_3]
		newatom      [46, 0, 'constructor'_4]
		alloclink    [47, 46, 2]
		alloclink    [48, 46, 1]
		alloclink    [49, 46, 0]
		alloclink    [50, 45, 1]
		alloclink    [51, 45, 0]
		alloclink    [52, 44, 4]
		alloclink    [53, 44, 3]
		alloclink    [54, 46, 3]
		alloclink    [55, 44, 2]
		alloclink    [56, 44, 1]
		alloclink    [57, 45, 2]
		alloclink    [58, 44, 0]
		getfromlist  [59, 42, 0]
		unifylinks     [58, 57, 0]
		getlink      [60, 3, 1]
		unifylinks     [56, 60, 0]
		unifylinks     [55, 54, 0]
		getlink      [61, 1, 3]
		unifylinks     [53, 61, 0]
		getlink      [62, 1, 4]
		unifylinks     [52, 62, 0]
		getlink      [63, 2, 0]
		unifylinks     [51, 63, 0]
		unifylinks     [50, 59, 0]
		getlink      [64, 4, 0]
		unifylinks     [49, 64, 0]
		getlink      [65, 6, 1]
		unifylinks     [48, 65, 0]
		getlink      [66, 4, 2]
		unifylinks     [47, 66, 0]
		deleteconnectors[34, 43]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		freeatom       [7]
		freeatom       [3]
		freeatom       [6]
		freeground     [37]
		freeground     [39]
		freeatom       [22]
		freeatom       [20]
		freeatom       [21]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 34]
	--memmatch:
		spec           [1, 107]
		findatom     [1, 0, 'deconstruct_into_links'_5]
		getlink      [10, 1, 4]
		getlink      [9, 1, 3]
		deref        [4, 1, 2, 3]
		func           [4, 'constructor'_4]
		derefatom    [28, 4, 0]
		isstring       [28]
		getlink      [16, 4, 2]
		getlink      [15, 4, 0]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		getlink      [21, 6, 1]
		deref        [7, 6, 0, 2]
		func           [7, 'variable'_3]
		derefatom    [32, 7, 1]
		isstring       [32]
		derefatom    [30, 7, 0]
		isint          [30]
		getlink      [18, 7, 1]
		getlink      [17, 7, 0]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		getlink      [20, 3, 1]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		derefatom    [29, 5, 0]
		isint          [29]
		getlink      [14, 5, 1]
		getlink      [13, 5, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [31, 2, 1]
		isstring       [31]
		getlink      [12, 2, 1]
		getlink      [11, 2, 0]
		findatom     [8, 0, 'type_db'_1]
		getlink      [19, 8, 0]
		newlist      [22]
		addtolist      [22, 12]
		newlist      [23]
		addtolist      [23, 9]
		addtolist      [23, 10]
		addtolist      [23, 11]
		addtolist      [23, 13]
		addtolist      [23, 14]
		addtolist      [23, 15]
		addtolist      [23, 16]
		addtolist      [23, 17]
		addtolist      [23, 18]
		addtolist      [23, 19]
		addtolist      [23, 20]
		addtolist      [23, 21]
		isground     [24, 22, 23]
		newlist      [25]
		addtolist      [25, 14]
		neqground      [22, 25]
		newlist      [26]
		addtolist      [26, 9]
		addtolist      [26, 10]
		addtolist      [26, 11]
		addtolist      [26, 12]
		addtolist      [26, 13]
		addtolist      [26, 15]
		addtolist      [26, 16]
		addtolist      [26, 17]
		addtolist      [26, 18]
		addtolist      [26, 19]
		addtolist      [26, 20]
		addtolist      [26, 21]
		isground     [27, 25, 26]
		commit         ["_Rdec", 0]
		newlist      [33]
		getlink      [34, 5, 1]
		addtolist      [33, 34]
		removeatom     [1, 0, 'deconstruct_into_links'_5]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [4, 0, 'constructor'_4]
		removeatom     [7, 0, 'variable'_3]
		removeatom     [8, 0, 'type_db'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [31, 0]
		removeground   [33, 0]
		removeatom     [32, 0]
		removeatom     [29, 0]
		removeatom     [30, 0]
		removeatom     [28, 0]
		getlink      [35, 5, 1]
		insertconnectorsinnull[36, [35]]
		newlist      [37]
		getlink      [38, 5, 1]
		addtolist      [37, 38]
		copyatom     [39, 0, 31]
		copyatom     [40, 0, 31]
		copyground   [41, 37, 0]
		getfromlist  [42, 41, 0]
		getfromlist  [43, 41, 1]
		copyatom     [44, 0, 32]
		copyatom     [45, 0, 28]
		copyatom     [46, 0, 28]
		newatom      [47, 0, '.'_3]
		newatom      [48, 0, 'declare'_4]
		newatom      [49, 0, "port"_1]
		newatom      [50, 0, 'member'_3]
		newatom      [51, 0, 'coerce'_3]
		newatom      [52, 0, 'obj'_2]
		newatom      [53, 0, 'pointer_type'_2]
		newatom      [54, 0, 'types'.'get_typename_with_constructor'_4]
		newatom      [55, 0, 'type_db'_1]
		newatom      [56, 0, 'deconstruct_into_links'_5]
		newatom      [57, 0, 'variable'_3]
		newatom      [58, 0, 'constructor'_4]
		alloclink    [59, 58, 2]
		alloclink    [60, 58, 1]
		alloclink    [61, 46, 0]
		alloclink    [62, 58, 0]
		alloclink    [63, 40, 0]
		alloclink    [64, 57, 1]
		alloclink    [65, 57, 0]
		alloclink    [66, 56, 3]
		alloclink    [67, 58, 3]
		alloclink    [68, 56, 2]
		alloclink    [69, 56, 1]
		alloclink    [70, 57, 2]
		alloclink    [71, 56, 0]
		alloclink    [72, 55, 0]
		alloclink    [73, 54, 2]
		alloclink    [74, 45, 0]
		alloclink    [75, 54, 1]
		alloclink    [76, 54, 0]
		alloclink    [77, 54, 3]
		alloclink    [78, 53, 0]
		alloclink    [79, 39, 0]
		alloclink    [80, 52, 0]
		alloclink    [81, 53, 1]
		alloclink    [82, 51, 1]
		alloclink    [83, 52, 1]
		alloclink    [84, 51, 0]
		alloclink    [85, 44, 0]
		alloclink    [86, 50, 1]
		alloclink    [87, 51, 2]
		alloclink    [88, 50, 0]
		alloclink    [89, 50, 2]
		alloclink    [90, 48, 2]
		alloclink    [91, 48, 1]
		alloclink    [92, 49, 0]
		alloclink    [93, 48, 0]
		alloclink    [94, 47, 2]
		alloclink    [95, 56, 4]
		alloclink    [96, 47, 1]
		alloclink    [97, 48, 3]
		alloclink    [98, 47, 0]
		getfromlist  [99, 42, 0]
		unifylinks     [98, 97, 0]
		unifylinks     [96, 95, 0]
		getlink      [100, 1, 4]
		unifylinks     [94, 100, 0]
		unifylinks     [93, 92, 0]
		unifylinks     [91, 99, 0]
		unifylinks     [90, 89, 0]
		unifylinks     [88, 87, 0]
		unifylinks     [86, 85, 0]
		unifylinks     [84, 83, 0]
		unifylinks     [82, 81, 0]
		unifylinks     [80, 79, 0]
		unifylinks     [78, 77, 0]
		getlink      [101, 8, 0]
		unifylinks     [76, 101, 0]
		unifylinks     [75, 74, 0]
		unifylinks     [73, 72, 0]
		unifylinks     [71, 70, 0]
		getlink      [102, 3, 1]
		unifylinks     [69, 102, 0]
		unifylinks     [68, 67, 0]
		getlink      [103, 1, 3]
		unifylinks     [66, 103, 0]
		getlink      [104, 2, 0]
		unifylinks     [65, 104, 0]
		unifylinks     [64, 63, 0]
		unifylinks     [62, 61, 0]
		getlink      [105, 6, 1]
		unifylinks     [60, 105, 0]
		getlink      [106, 4, 2]
		unifylinks     [59, 106, 0]
		deleteconnectors[36, 43]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		freeatom       [7]
		freeatom       [8]
		freeatom       [3]
		freeatom       [6]
		freeatom       [31]
		freeground     [37]
		freeatom       [32]
		freeatom       [29]
		freeatom       [30]
		freeatom       [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'deconstruct_into_links'_5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [10, 2, 1]
		isstring       [10]
		derefatom    [9, 2, 0]
		isint          [9]
		getlink      [8, 2, 1]
		getlink      [7, 2, 0]
		newlist      [11]
		addtolist      [11, 4]
		newlist      [12]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		isground     [13, 11, 12]
		commit         ["_Rdec", 0]
		newlist      [14]
		getlink      [15, 1, 2]
		addtolist      [14, 15]
		removeatom     [1, 0, 'deconstruct_into_links'_5]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, '[]'_1]
		removeground   [14, 0]
		removeatom     [10, 0]
		removeatom     [9, 0]
		getlink      [16, 1, 2]
		insertconnectorsinnull[17, [16]]
		newlist      [18]
		getlink      [19, 1, 2]
		addtolist      [18, 19]
		unify          [1, 4, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [18]
		freeatom       [10]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 25]
	--memmatch:
		spec           [1, 26]
		findatom     [1, 0, 'types'.'get_reference_to'_4]
		derefatom    [14, 1, 1]
		isstring       [14]
		getlink      [10, 1, 3]
		getlink      [9, 1, 1]
		getlink      [8, 1, 0]
		deref        [2, 1, 2, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [7, 4, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 4, 0, 2]
		func           [6, 'variable'_3]
		derefatom    [15, 6, 1]
		isstring       [15]
		derefatom    [13, 6, 0]
		isint          [13]
		getlink      [12, 6, 1]
		getlink      [11, 6, 0]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, "any"_1]
		newlist      [16]
		addtolist      [16, 8]
		newlist      [17]
		addtolist      [17, 9]
		addtolist      [17, 10]
		addtolist      [17, 11]
		addtolist      [17, 12]
		isground     [18, 16, 17]
		commit         ["_Rtyp", 0]
		newlist      [19]
		getlink      [20, 1, 0]
		addtolist      [19, 20]
		removeatom     [1, 0, 'types'.'get_reference_to'_4]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [6, 0, 'variable'_3]
		removeatom     [5, 0, "any"_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeground   [19, 0]
		removeatom     [15, 0]
		removeatom     [13, 0]
		removeatom     [14, 0]
		getlink      [21, 1, 0]
		insertconnectorsinnull[22, [21]]
		newlist      [23]
		getlink      [24, 1, 0]
		addtolist      [23, 24]
		newatom      [25, 0, 'none'_1]
		relink         [25, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [5]
		freeatom       [4]
		freeatom       [7]
		freeground     [23]
		freeatom       [15]
		freeatom       [13]
		freeatom       [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'types'.'get_reference_to'_5]
		derefatom    [2, 1, 1]
		isstring       [2]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_reference_to'_5]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		copyatom     [4, 0, 2]
		newatom      [5, 0, 'types'.'get_reference_to'_4]
		newatom      [6, 0, 'types_'.'get_constraint'_4]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 1, 3, 0, 0]
		newlink        [5, 2, 6, 3, 0]
		relink         [5, 3, 1, 4, 0]
		relink         [6, 0, 1, 2, 0]
		newlink        [6, 1, 4, 0, 0]
		relink         [6, 2, 1, 3, 0]
		loadmodule     [0, "types"]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'create_pair'_3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		newlist      [7]
		addtolist      [7, 6]
		newlist      [8]
		addtolist      [8, 3]
		addtolist      [8, 4]
		addtolist      [8, 5]
		isground     [9, 7, 8]
		commit         ["_crea", 0]
		newlist      [10]
		getlink      [11, 2, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'create_pair'_3]
		removeatom     [2, 0, 'apply'_3]
		removeground   [10, 0]
		getlink      [12, 2, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 2, 1]
		addtolist      [14, 15]
		copyground   [16, 14, 0]
		getfromlist  [17, 16, 0]
		getfromlist  [18, 16, 1]
		copyground   [19, 14, 0]
		getfromlist  [20, 19, 0]
		getfromlist  [21, 19, 1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'pair'_3]
		newatom      [24, 0, 'root'_1]
		newatom      [25, 0, 'apply'_3]
		newatom      [26, 0, 'create_pair1'_5]
		newatom      [27, 0, '[]'_1]
		newatom      [28, 0, 'list'.'differentiate'_3]
		alloclink    [29, 28, 0]
		alloclink    [30, 27, 0]
		alloclink    [31, 26, 3]
		alloclink    [32, 26, 2]
		alloclink    [33, 28, 2]
		alloclink    [34, 26, 1]
		alloclink    [35, 28, 1]
		alloclink    [36, 26, 0]
		alloclink    [37, 25, 1]
		alloclink    [38, 25, 0]
		alloclink    [39, 25, 2]
		alloclink    [40, 23, 1]
		alloclink    [41, 24, 0]
		alloclink    [42, 23, 0]
		alloclink    [43, 22, 2]
		alloclink    [44, 26, 4]
		alloclink    [45, 22, 1]
		alloclink    [46, 23, 2]
		alloclink    [47, 22, 0]
		getfromlist  [48, 20, 0]
		getfromlist  [49, 17, 0]
		unifylinks     [47, 46, 0]
		unifylinks     [45, 44, 0]
		getlink      [50, 1, 2]
		unifylinks     [43, 50, 0]
		unifylinks     [42, 41, 0]
		unifylinks     [40, 39, 0]
		getlink      [51, 2, 0]
		unifylinks     [38, 51, 0]
		unifylinks     [37, 49, 0]
		unifylinks     [36, 35, 0]
		unifylinks     [34, 33, 0]
		getlink      [52, 1, 1]
		unifylinks     [32, 52, 0]
		unifylinks     [31, 30, 0]
		unifylinks     [29, 48, 0]
		deleteconnectors[13, 18]
		deleteconnectors[13, 21]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'create_pair1'_5]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		deref        [3, 1, 2, 0]
		func           [3, '[]'_1]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_pair1'_5]
		removeatom     [3, 0, '[]'_1]
		unify          [1, 4, 1, 3, 0]
		freeatom       [1]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'create_pair1'_5]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_pair1'_5]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'create_pair2'_7]
		newatom      [4, 0, 'create_pair1'_5]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [3, 3, 1, 2, 0]
		newlink        [3, 4, 4, 2, 0]
		newlink        [3, 5, 4, 4, 0]
		relink         [3, 6, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 3, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'create_pair2'_7]
		getlink      [8, 1, 6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		getlink      [3, 1, 0]
		deref        [2, 1, 3, 0]
		func           [2, '[]'_1]
		newlist      [9]
		addtolist      [9, 3]
		newlist      [10]
		addtolist      [10, 4]
		addtolist      [10, 5]
		addtolist      [10, 6]
		addtolist      [10, 7]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		commit         ["_Rcre", 0]
		newlist      [12]
		getlink      [13, 1, 0]
		addtolist      [12, 13]
		removeatom     [1, 0, 'create_pair2'_7]
		removeatom     [2, 0, '[]'_1]
		removeground   [12, 0]
		getlink      [14, 1, 0]
		insertconnectorsinnull[15, [14]]
		newlist      [16]
		getlink      [17, 1, 0]
		addtolist      [16, 17]
		unify          [1, 6, 1, 5, 0]
		unify          [1, 1, 1, 2, 0]
		newatom      [18, 0, '[]'_1]
		relink         [18, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [16]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'create_pair2'_7]
		deref        [2, 1, 3, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_pair2'_7]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'create_pair2'_8]
		newatom      [5, 0, 'has_var'_5]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'process_context'_4]
		newlink        [4, 0, 5, 4, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [4, 3, 1, 2, 0]
		newlink        [4, 4, 6, 2, 0]
		relink         [4, 5, 1, 4, 0]
		relink         [4, 6, 1, 5, 0]
		relink         [4, 7, 1, 6, 0]
		relink         [5, 0, 1, 0, 0]
		relink         [5, 1, 3, 2, 0]
		newlink        [5, 3, 7, 2, 0]
		newlink        [6, 0, 7, 3, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'create_pair2'_7]
		deref        [2, 1, 3, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_pair2'_7]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'create_pair2'_8]
		newatom      [5, 0, 'has_var'_5]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newlink        [4, 0, 5, 4, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [4, 3, 1, 2, 0]
		newlink        [4, 4, 6, 2, 0]
		relink         [4, 5, 1, 4, 0]
		relink         [4, 6, 1, 5, 0]
		relink         [4, 7, 1, 6, 0]
		relink         [5, 0, 1, 0, 0]
		relink         [5, 1, 3, 1, 0]
		newlink        [5, 3, 7, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [7, 0, 3, 0, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'create_pair2'_8]
		deref        [3, 1, 4, 2]
		func           [3, '.'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_pair2'_8]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, 'create_pair2'_7]
		newatom      [5, 0, '.'_3]
		relink         [4, 0, 1, 1, 0]
		relink         [4, 1, 1, 2, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [4, 3, 3, 1, 0]
		newlink        [4, 4, 5, 1, 0]
		relink         [4, 5, 1, 6, 0]
		relink         [4, 6, 1, 7, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 2, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'create_pair2'_8]
		getlink      [10, 1, 7]
		getlink      [9, 1, 6]
		getlink      [8, 1, 5]
		getlink      [7, 1, 3]
		getlink      [6, 1, 2]
		getlink      [5, 1, 1]
		deref        [3, 1, 4, 2]
		func           [3, '.'_3]
		getlink      [13, 3, 1]
		deref        [4, 3, 0, 2]
		func           [4, 'apply'_3]
		getlink      [12, 4, 1]
		getlink      [11, 4, 0]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [14]
		addtolist      [14, 12]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		addtolist      [15, 11]
		addtolist      [15, 13]
		isground     [16, 14, 15]
		commit         ["_Rcre", 0]
		newlist      [17]
		getlink      [18, 4, 1]
		addtolist      [17, 18]
		removeatom     [1, 0, 'create_pair2'_8]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'apply'_3]
		removeatom     [3, 0, '.'_3]
		removeground   [17, 0]
		getlink      [19, 4, 1]
		insertconnectorsinnull[20, [19]]
		newlist      [21]
		getlink      [22, 4, 1]
		addtolist      [21, 22]
		copyground   [23, 21, 0]
		getfromlist  [24, 23, 0]
		getfromlist  [25, 23, 1]
		copyground   [26, 21, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, 'pair'_3]
		newatom      [31, 0, 'apply'_3]
		unify          [1, 5, 3, 1, 0]
		newatom      [32, 0, 'list'.'differentiate'_3]
		alloclink    [33, 32, 2]
		alloclink    [34, 32, 1]
		alloclink    [35, 32, 0]
		alloclink    [36, 31, 1]
		alloclink    [37, 31, 0]
		alloclink    [38, 31, 2]
		alloclink    [39, 30, 1]
		alloclink    [40, 30, 0]
		alloclink    [41, 29, 2]
		alloclink    [42, 29, 1]
		alloclink    [43, 30, 2]
		alloclink    [44, 29, 0]
		getfromlist  [45, 24, 0]
		getfromlist  [46, 27, 0]
		unifylinks     [44, 43, 0]
		getlink      [47, 1, 6]
		unifylinks     [42, 47, 0]
		getlink      [48, 1, 7]
		unifylinks     [41, 48, 0]
		getlink      [49, 1, 1]
		unifylinks     [40, 49, 0]
		unifylinks     [39, 38, 0]
		getlink      [50, 4, 0]
		unifylinks     [37, 50, 0]
		unifylinks     [36, 45, 0]
		unifylinks     [35, 46, 0]
		getlink      [51, 1, 3]
		unifylinks     [34, 51, 0]
		getlink      [52, 1, 2]
		unifylinks     [33, 52, 0]
		deleteconnectors[20, 25]
		deleteconnectors[20, 28]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeground     [21]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 56]
		findatom     [1, 0, 'create_pair2'_8]
		getlink      [10, 1, 7]
		getlink      [9, 1, 6]
		getlink      [8, 1, 5]
		getlink      [7, 1, 3]
		getlink      [6, 1, 2]
		getlink      [5, 1, 1]
		deref        [3, 1, 4, 2]
		func           [3, '.'_3]
		getlink      [14, 3, 1]
		deref        [4, 3, 0, 3]
		func           [4, 'process_context'_4]
		getlink      [13, 4, 2]
		getlink      [12, 4, 1]
		getlink      [11, 4, 0]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [15]
		addtolist      [15, 13]
		newlist      [16]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 10]
		addtolist      [16, 11]
		addtolist      [16, 12]
		addtolist      [16, 14]
		isground     [17, 15, 16]
		commit         ["_Rcre", 0]
		newlist      [18]
		getlink      [19, 4, 2]
		addtolist      [18, 19]
		removeatom     [1, 0, 'create_pair2'_8]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'process_context'_4]
		removeatom     [3, 0, '.'_3]
		removeground   [18, 0]
		getlink      [20, 4, 2]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 4, 2]
		addtolist      [22, 23]
		copyground   [24, 22, 0]
		getfromlist  [25, 24, 0]
		getfromlist  [26, 24, 1]
		copyground   [27, 22, 0]
		getfromlist  [28, 27, 0]
		getfromlist  [29, 27, 1]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'pair'_3]
		newatom      [32, 0, 'process_context'_4]
		unify          [1, 5, 3, 1, 0]
		newatom      [33, 0, 'list'.'differentiate'_3]
		alloclink    [34, 33, 2]
		alloclink    [35, 33, 1]
		alloclink    [36, 33, 0]
		alloclink    [37, 32, 2]
		alloclink    [38, 32, 1]
		alloclink    [39, 32, 0]
		alloclink    [40, 32, 3]
		alloclink    [41, 31, 1]
		alloclink    [42, 31, 0]
		alloclink    [43, 30, 2]
		alloclink    [44, 30, 1]
		alloclink    [45, 31, 2]
		alloclink    [46, 30, 0]
		getfromlist  [47, 28, 0]
		getfromlist  [48, 25, 0]
		unifylinks     [46, 45, 0]
		getlink      [49, 1, 6]
		unifylinks     [44, 49, 0]
		getlink      [50, 1, 7]
		unifylinks     [43, 50, 0]
		getlink      [51, 1, 1]
		unifylinks     [42, 51, 0]
		unifylinks     [41, 40, 0]
		getlink      [52, 4, 0]
		unifylinks     [39, 52, 0]
		getlink      [53, 4, 1]
		unifylinks     [38, 53, 0]
		unifylinks     [37, 48, 0]
		unifylinks     [36, 47, 0]
		getlink      [54, 1, 3]
		unifylinks     [35, 54, 0]
		getlink      [55, 1, 2]
		unifylinks     [34, 55, 0]
		deleteconnectors[21, 26]
		deleteconnectors[21, 29]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeground     [22]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'has_var'_5]
		deref        [3, 1, 1, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		commit         ["_Rhas", 0]
		removeatom     [1, 0, 'has_var'_5]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, 'false'_1]
		newatom      [5, 0, 'variable'_3]
		newatom      [6, 0, '[]'_1]
		relink         [4, 0, 1, 4, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'has_var'_5]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'variable'_3]
		derefatom    [6, 4, 0]
		isint          [6]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [5, 2, 0]
		isint          [5]
		ieq            [5, 6]
		commit         ["_Rhas", 0]
		removeatom     [1, 0, 'has_var'_5]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0]
		removeatom     [5, 0]
		copyatom     [7, 0, 6]
		copyatom     [8, 0, 5]
		newatom      [9, 0, 'true'_1]
		newatom      [10, 0, 'variable'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'variable'_3]
		relink         [9, 0, 1, 4, 0]
		newlink        [10, 0, 8, 0, 0]
		relink         [10, 1, 2, 1, 0]
		relink         [10, 2, 1, 2, 0]
		newlink        [11, 0, 12, 2, 0]
		relink         [11, 1, 3, 1, 0]
		relink         [11, 2, 1, 3, 0]
		newlink        [12, 0, 7, 0, 0]
		relink         [12, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'has_var'_5]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'variable'_3]
		derefatom    [6, 4, 0]
		isint          [6]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [5, 2, 0]
		isint          [5]
		ine            [5, 6]
		commit         ["_Rhas", 0]
		removeatom     [1, 0, 'has_var'_5]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0]
		removeatom     [5, 0]
		copyatom     [7, 0, 6]
		copyatom     [8, 0, 5]
		newatom      [9, 0, 'has_var'_5]
		newatom      [10, 0, 'variable'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'variable'_3]
		newlink        [9, 0, 10, 2, 0]
		relink         [9, 1, 3, 1, 0]
		relink         [9, 2, 1, 2, 0]
		newlink        [9, 3, 11, 1, 0]
		relink         [9, 4, 1, 4, 0]
		newlink        [10, 0, 8, 0, 0]
		relink         [10, 1, 2, 1, 0]
		newlink        [11, 0, 12, 2, 0]
		relink         [11, 2, 1, 3, 0]
		newlink        [12, 0, 7, 0, 0]
		relink         [12, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_number'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_number'_3]
		newatom      [2, 0, 'expand_number'_4]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_number'_4]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_number'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 3, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 30]
	--memmatch:
		spec           [1, 64]
		findatom     [1, 0, 'expand_number'_4]
		derefatom    [11, 1, 0]
		isint          [11]
		allocatom    [9, 1_1]
		iadd         [12, 11, 9]
		getfunc      [13, 12]
		allocatomindirect[14, 13]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [8, 5, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 5, 0, 2]
		func           [7, 'variable'_3]
		derefatom    [10, 7, 0]
		isint          [10]
		deref        [4, 3, 0, 1]
		func           [4, 'number'_2]
		deref        [6, 4, 0, 1]
		func           [6, 'int'_2]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_number'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'number'_2]
		removeatom     [6, 0, 'int'_2]
		removeatom     [7, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		removeatom     [11, 0]
		removeatom     [10, 0]
		copyatom     [15, 0, 14]
		copyatom     [16, 0, 11]
		copyatom     [17, 0, 11]
		copyatom     [18, 0, 11]
		copyatom     [19, 0, 11]
		copyatom     [20, 0, 11]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, 'alloc'_3]
		newatom      [23, 0, 'string'.'concat'_3]
		newatom      [24, 0, "n"_1]
		newatom      [25, 0, 'string'.'from'_2]
		newatom      [26, 0, "int"_1]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, 'assign'_3]
		newatom      [29, 0, 'deref'_2]
		newatom      [30, 0, 'string'.'concat'_2]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, "n"_1]
		newatom      [33, 0, '.'_3]
		newatom      [34, 0, 'string'.'from'_2]
		newatom      [35, 0, '[]'_1]
		newatom      [36, 0, 'string'.'from'_2]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, 'declare'_4]
		newatom      [39, 0, "port"_1]
		newatom      [40, 0, 'string'.'concat'_2]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, "n"_1]
		newatom      [43, 0, '.'_3]
		newatom      [44, 0, 'string'.'from'_2]
		newatom      [45, 0, '.'_3]
		newatom      [46, 0, "_0"_1]
		newatom      [47, 0, '[]'_1]
		newatom      [48, 0, 'link'_3]
		newatom      [49, 0, 'string'.'concat'_3]
		newatom      [50, 0, "n"_1]
		newatom      [51, 0, 'string'.'from'_2]
		newatom      [52, 0, 'none'_1]
		newatom      [53, 0, '.'_3]
		newatom      [54, 0, 'connect'_3]
		newatom      [55, 0, 'string'.'concat'_2]
		newatom      [56, 0, '.'_3]
		newatom      [57, 0, "n"_1]
		newatom      [58, 0, '.'_3]
		newatom      [59, 0, 'string'.'from'_2]
		newatom      [60, 0, '.'_3]
		newatom      [61, 0, "_0"_1]
		newatom      [62, 0, '[]'_1]
		newatom      [63, 0, 'expand_number'_4]
		newlink        [21, 0, 22, 2, 0]
		newlink        [21, 1, 27, 2, 0]
		relink         [21, 2, 1, 3, 0]
		newlink        [22, 0, 23, 2, 0]
		newlink        [22, 1, 26, 0, 0]
		newlink        [23, 0, 24, 0, 0]
		newlink        [23, 1, 25, 1, 0]
		newlink        [25, 0, 16, 0, 0]
		newlink        [27, 0, 28, 2, 0]
		newlink        [27, 1, 37, 2, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 36, 1, 0]
		newlink        [29, 0, 30, 1, 0]
		newlink        [30, 0, 31, 2, 0]
		newlink        [31, 0, 32, 0, 0]
		newlink        [31, 1, 33, 2, 0]
		newlink        [33, 0, 34, 1, 0]
		newlink        [33, 1, 35, 0, 0]
		newlink        [34, 0, 17, 0, 0]
		relink         [36, 0, 6, 0, 0]
		newlink        [37, 0, 38, 3, 0]
		newlink        [37, 1, 53, 2, 0]
		newlink        [38, 0, 39, 0, 0]
		newlink        [38, 1, 40, 1, 0]
		newlink        [38, 2, 48, 2, 0]
		newlink        [40, 0, 41, 2, 0]
		newlink        [41, 0, 42, 0, 0]
		newlink        [41, 1, 43, 2, 0]
		newlink        [43, 0, 44, 1, 0]
		newlink        [43, 1, 45, 2, 0]
		newlink        [44, 0, 18, 0, 0]
		newlink        [45, 0, 46, 0, 0]
		newlink        [45, 1, 47, 0, 0]
		newlink        [48, 0, 49, 2, 0]
		newlink        [48, 1, 52, 0, 0]
		newlink        [49, 0, 50, 0, 0]
		newlink        [49, 1, 51, 1, 0]
		newlink        [51, 0, 19, 0, 0]
		newlink        [53, 0, 54, 2, 0]
		newlink        [53, 1, 63, 3, 0]
		newlink        [54, 0, 55, 1, 0]
		relink         [54, 1, 7, 1, 0]
		newlink        [55, 0, 56, 2, 0]
		newlink        [56, 0, 57, 0, 0]
		newlink        [56, 1, 58, 2, 0]
		newlink        [58, 0, 59, 1, 0]
		newlink        [58, 1, 60, 2, 0]
		newlink        [59, 0, 20, 0, 0]
		newlink        [60, 0, 61, 0, 0]
		newlink        [60, 1, 62, 0, 0]
		newlink        [63, 0, 15, 0, 0]
		relink         [63, 1, 2, 1, 0]
		relink         [63, 2, 1, 2, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [7]
		freeatom       [2]
		freeatom       [5]
		freeatom       [8]
		freeatom       [14]
		freeatom       [11]
		freeatom       [10]
		freeatom       [9]
		freeatom       [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_proccxt'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_proccxt'_3]
		newatom      [2, 0, 'expand_proccxt'_4]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_proccxt'_4]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_proccxt'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 3, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 27]
	--memmatch:
		spec           [1, 62]
		findatom     [1, 0, 'expand_proccxt'_4]
		derefatom    [10, 1, 0]
		isint          [10]
		allocatom    [8, 1_1]
		iadd         [11, 10, 8]
		getfunc      [12, 11]
		allocatomindirect[13, 12]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		deref        [5, 3, 2, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 5, 0, 2]
		func           [6, 'variable'_3]
		derefatom    [9, 6, 0]
		isint          [9]
		deref        [4, 3, 1, 0]
		func           [4, "int"_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_proccxt'_4]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [6, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, "int"_1]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeatom     [10, 0]
		removeatom     [9, 0]
		copyatom     [14, 0, 13]
		copyatom     [15, 0, 10]
		copyatom     [16, 0, 10]
		copyatom     [17, 0, 10]
		copyatom     [18, 0, 10]
		copyatom     [19, 0, 10]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'alloc'_3]
		newatom      [22, 0, 'string'.'concat'_3]
		newatom      [23, 0, "p"_1]
		newatom      [24, 0, 'string'.'from'_2]
		newatom      [25, 0, "int"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'assign'_3]
		newatom      [28, 0, 'deref'_2]
		newatom      [29, 0, 'string'.'concat'_3]
		newatom      [30, 0, "p"_1]
		newatom      [31, 0, 'string'.'from'_2]
		newatom      [32, 0, 'deref'_2]
		newatom      [33, 0, 'string'.'concat'_3]
		newatom      [34, 0, "p"_1]
		newatom      [35, 0, '.'_3]
		newatom      [36, 0, 'declare'_4]
		newatom      [37, 0, "port"_1]
		newatom      [38, 0, 'string'.'concat'_2]
		newatom      [39, 0, '.'_3]
		newatom      [40, 0, "p"_1]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, 'string'.'from'_2]
		newatom      [43, 0, '.'_3]
		newatom      [44, 0, "_0"_1]
		newatom      [45, 0, '[]'_1]
		newatom      [46, 0, 'link'_3]
		newatom      [47, 0, 'string'.'concat'_3]
		newatom      [48, 0, "p"_1]
		newatom      [49, 0, 'string'.'from'_2]
		newatom      [50, 0, 'none'_1]
		newatom      [51, 0, '.'_3]
		newatom      [52, 0, 'connect'_3]
		newatom      [53, 0, 'string'.'concat'_2]
		newatom      [54, 0, '.'_3]
		newatom      [55, 0, "p"_1]
		newatom      [56, 0, '.'_3]
		newatom      [57, 0, 'string'.'from'_2]
		newatom      [58, 0, '.'_3]
		newatom      [59, 0, "_0"_1]
		newatom      [60, 0, '[]'_1]
		newatom      [61, 0, 'expand_proccxt'_4]
		newlink        [20, 0, 21, 2, 0]
		newlink        [20, 1, 26, 2, 0]
		relink         [20, 2, 1, 3, 0]
		newlink        [21, 0, 22, 2, 0]
		newlink        [21, 1, 25, 0, 0]
		newlink        [22, 0, 23, 0, 0]
		newlink        [22, 1, 24, 1, 0]
		newlink        [24, 0, 15, 0, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 35, 2, 0]
		newlink        [27, 0, 28, 1, 0]
		newlink        [27, 1, 32, 1, 0]
		newlink        [28, 0, 29, 2, 0]
		newlink        [29, 0, 30, 0, 0]
		newlink        [29, 1, 31, 1, 0]
		newlink        [31, 0, 16, 0, 0]
		newlink        [32, 0, 33, 2, 0]
		newlink        [33, 0, 34, 0, 0]
		relink         [33, 1, 3, 0, 0]
		newlink        [35, 0, 36, 3, 0]
		newlink        [35, 1, 51, 2, 0]
		newlink        [36, 0, 37, 0, 0]
		newlink        [36, 1, 38, 1, 0]
		newlink        [36, 2, 46, 2, 0]
		newlink        [38, 0, 39, 2, 0]
		newlink        [39, 0, 40, 0, 0]
		newlink        [39, 1, 41, 2, 0]
		newlink        [41, 0, 42, 1, 0]
		newlink        [41, 1, 43, 2, 0]
		newlink        [42, 0, 17, 0, 0]
		newlink        [43, 0, 44, 0, 0]
		newlink        [43, 1, 45, 0, 0]
		newlink        [46, 0, 47, 2, 0]
		newlink        [46, 1, 50, 0, 0]
		newlink        [47, 0, 48, 0, 0]
		newlink        [47, 1, 49, 1, 0]
		newlink        [49, 0, 18, 0, 0]
		newlink        [51, 0, 52, 2, 0]
		newlink        [51, 1, 61, 3, 0]
		newlink        [52, 0, 53, 1, 0]
		relink         [52, 1, 6, 1, 0]
		newlink        [53, 0, 54, 2, 0]
		newlink        [54, 0, 55, 0, 0]
		newlink        [54, 1, 56, 2, 0]
		newlink        [56, 0, 57, 1, 0]
		newlink        [56, 1, 58, 2, 0]
		newlink        [57, 0, 19, 0, 0]
		newlink        [58, 0, 59, 0, 0]
		newlink        [58, 1, 60, 0, 0]
		newlink        [61, 0, 14, 0, 0]
		relink         [61, 1, 2, 1, 0]
		relink         [61, 2, 1, 2, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [6]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [8]
		freeatom       [13]
		freeatom       [10]
		freeatom       [11]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_constructor'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_constructor'_3]
		newatom      [2, 0, 'expand_constructor'_4]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_constructor'_4]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_constructor'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 3, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'expand_constructor'_4]
		derefatom    [8, 1, 0]
		isint          [8]
		allocatom    [6, 1_1]
		iadd         [9, 8, 6]
		getfunc      [10, 9]
		allocatomindirect[11, 10]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		derefatom    [7, 4, 0]
		isstring       [7]
		findatom     [5, 0, 'type_db'_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_constructor'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [5, 0, 'type_db'_1]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [8, 0]
		copyatom     [12, 0, 7]
		copyatom     [13, 0, 7]
		copyatom     [14, 0, 11]
		copyatom     [15, 0, 8]
		newatom      [16, 0, 'expand_constructor'_6]
		newatom      [17, 0, 'apply'_3]
		newatom      [18, 0, 'symbol'_2]
		newatom      [19, 0, 'types'.'get_constructor_named'_4]
		newatom      [20, 0, 'expand_constructor'_4]
		newlink        [16, 0, 15, 0, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [16, 2, 19, 3, 0]
		newlink        [16, 3, 19, 2, 0]
		newlink        [16, 4, 20, 3, 0]
		relink         [16, 5, 1, 3, 0]
		newlink        [17, 0, 18, 1, 0]
		relink         [17, 1, 3, 1, 0]
		newlink        [18, 0, 12, 0, 0]
		relink         [19, 0, 5, 0, 0]
		newlink        [19, 1, 13, 0, 0]
		newlink        [20, 0, 14, 0, 0]
		relink         [20, 1, 2, 1, 0]
		relink         [20, 2, 1, 2, 0]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		freeatom       [7]
		freeatom       [11]
		freeatom       [8]
		freeatom       [6]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'expand_constructor'_6]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [3, 1, 2, 1]
		func           [3, 'error_notfound'_2]
		derefatom    [5, 3, 0]
		isstring       [5]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_constructor'_6]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'error_notfound'_2]
		removeatom     [4, 0]
		removeatom     [5, 0]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'type_db'_1]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 1, 4, 0]
		relink         [6, 2, 1, 5, 0]
		relink         [7, 0, 2, 0, 0]
		relink         [7, 1, 2, 1, 0]
		relink         [8, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 28]
		findatom     [1, 0, 'expand_constructor'_6]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 2, 3]
		func           [2, 'constructor'_4]
		derefatom    [4, 2, 0]
		isstring       [4]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_constructor'_6]
		removeatom     [2, 0, 'constructor'_4]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [5, 0, 3]
		copyatom     [6, 0, 3]
		copyatom     [7, 0, 3]
		copyatom     [8, 0, 3]
		copyatom     [9, 0, 4]
		copyatom     [10, 0, 4]
		copyatom     [11, 0, 4]
		newatom      [12, 0, 'list'.'duplicate'_3]
		newatom      [13, 0, 'fieldnames_with_constructor'_2]
		newatom      [14, 0, 'constructor'_4]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'alloc'_3]
		newatom      [17, 0, 'allocated_name'_2]
		newatom      [18, 0, 'types'.'get_typename_with_constructor'_4]
		newatom      [19, 0, 'type_db'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'set_tag'_3]
		newatom      [22, 0, 'allocated_name'_2]
		newatom      [23, 0, 'create_links'_4]
		newatom      [24, 0, 'allocated_name'_2]
		newatom      [25, 0, 'connect_field_to_arg'_5]
		newatom      [26, 0, 'allocated_name'_2]
		newatom      [27, 0, 'linknames_with_apply'_2]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 23, 1, 0]
		newlink        [12, 2, 25, 1, 0]
		newlink        [13, 0, 14, 3, 0]
		newlink        [14, 0, 9, 0, 0]
		relink         [14, 1, 2, 1, 0]
		relink         [14, 2, 2, 2, 0]
		newlink        [15, 0, 16, 2, 0]
		newlink        [15, 1, 20, 2, 0]
		relink         [15, 2, 1, 5, 0]
		newlink        [16, 0, 17, 1, 0]
		newlink        [16, 1, 18, 3, 0]
		newlink        [17, 0, 5, 0, 0]
		relink         [18, 0, 1, 3, 0]
		newlink        [18, 1, 10, 0, 0]
		newlink        [18, 2, 19, 0, 0]
		newlink        [20, 0, 21, 2, 0]
		newlink        [20, 1, 23, 3, 0]
		newlink        [21, 0, 22, 1, 0]
		newlink        [21, 1, 11, 0, 0]
		newlink        [22, 0, 6, 0, 0]
		newlink        [23, 0, 24, 1, 0]
		newlink        [23, 2, 25, 4, 0]
		newlink        [24, 0, 7, 0, 0]
		newlink        [25, 0, 26, 1, 0]
		newlink        [25, 2, 27, 1, 0]
		relink         [25, 3, 1, 4, 0]
		newlink        [26, 0, 8, 0, 0]
		relink         [27, 0, 1, 1, 0]
		loadmodule     [0, "list"]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'fieldnames_with_constructor'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 3]
		func           [2, 'constructor'_4]
		derefatom    [7, 2, 0]
		isstring       [7]
		getlink      [6, 2, 2]
		getlink      [5, 2, 1]
		getlink      [4, 2, 0]
		newlist      [8]
		addtolist      [8, 6]
		newlist      [9]
		addtolist      [9, 3]
		addtolist      [9, 4]
		addtolist      [9, 5]
		isground     [10, 8, 9]
		commit         ["_Rfie", 0]
		newlist      [11]
		getlink      [12, 2, 2]
		addtolist      [11, 12]
		removeatom     [1, 0, 'fieldnames_with_constructor'_2]
		removeatom     [2, 0, 'constructor'_4]
		removeground   [11, 0]
		removeatom     [7, 0]
		getlink      [13, 2, 2]
		insertconnectorsinnull[14, [13]]
		newlist      [15]
		getlink      [16, 2, 2]
		addtolist      [15, 16]
		newatom      [17, 0, 'map'_3]
		newatom      [18, 0, 'lambda'_3]
		newatom      [19, 0, 'variable_to_string'_2]
		newlink        [17, 0, 18, 2, 0]
		relink         [17, 1, 2, 1, 0]
		relink         [17, 2, 1, 1, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 19, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [15]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'linknames_with_apply'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		derefatom    [4, 3, 0]
		isstring       [4]
		commit         ["_Rlin", 0]
		removeatom     [1, 0, 'linknames_with_apply'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [4, 0]
		newatom      [5, 0, 'map'_3]
		newatom      [6, 0, 'lambda'_3]
		newatom      [7, 0, 'variable_to_string'_2]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 1, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 7, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'create_links'_4]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_links'_4]
		newatom      [2, 0, 'fold_right'_4]
		newatom      [3, 0, 'lambda'_4]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'create_link_string'_3]
		newlink        [2, 0, 3, 3, 0]
		relink         [2, 1, 1, 1, 0]
		relink         [2, 2, 1, 2, 0]
		relink         [2, 3, 1, 3, 0]
		newlink        [3, 0, 5, 1, 0]
		newlink        [3, 1, 4, 1, 0]
		newlink        [3, 2, 4, 2, 0]
		newlink        [4, 0, 5, 2, 0]
		relink         [5, 0, 1, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'create_link_string'_3]
		derefatom    [3, 1, 1]
		isstring       [3]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_Rcre", 0]
		removeatom     [1, 0, 'create_link_string'_3]
		removeatom     [2, 0]
		removeatom     [3, 0]
		copyatom     [4, 0, 2]
		copyatom     [5, 0, 2]
		copyatom     [6, 0, 2]
		copyatom     [7, 0, 3]
		copyatom     [8, 0, 3]
		newatom      [9, 0, 'declare'_4]
		newatom      [10, 0, "port"_1]
		newatom      [11, 0, 'string'.'concat'_2]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, "_"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, '[]'_1]
		newatom      [17, 0, 'link'_3]
		newatom      [18, 0, 'ref'_2]
		newatom      [19, 0, 'member'_3]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 1, 0]
		newlink        [9, 2, 17, 2, 0]
		relink         [9, 3, 1, 2, 0]
		newlink        [11, 0, 12, 2, 0]
		newlink        [12, 0, 4, 0, 0]
		newlink        [12, 1, 13, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 7, 0, 0]
		newlink        [15, 1, 16, 0, 0]
		newlink        [17, 0, 5, 0, 0]
		newlink        [17, 1, 18, 1, 0]
		newlink        [18, 0, 19, 2, 0]
		newlink        [19, 0, 6, 0, 0]
		newlink        [19, 1, 8, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'connect_field_to_arg'_5]
		derefatom    [4, 1, 0]
		isstring       [4]
		deref        [3, 1, 2, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_field_to_arg'_5]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0, '[]'_1]
		removeatom     [4, 0]
		unify          [1, 4, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'connect_field_to_arg'_5]
		derefatom    [4, 1, 0]
		isstring       [4]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_field_to_arg'_5]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'connect'_3]
		newatom      [9, 0, 'string'.'concat'_2]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, "_"_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, '[]'_1]
		newatom      [15, 0, 'connect_field_to_arg'_5]
		newlink        [7, 0, 8, 2, 0]
		newlink        [7, 1, 15, 4, 0]
		relink         [7, 2, 1, 4, 0]
		relink         [8, 0, 3, 0, 0]
		newlink        [8, 1, 9, 1, 0]
		newlink        [9, 0, 10, 2, 0]
		newlink        [10, 0, 5, 0, 0]
		newlink        [10, 1, 11, 2, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 2, 0]
		relink         [13, 0, 2, 0, 0]
		newlink        [13, 1, 14, 0, 0]
		newlink        [15, 0, 6, 0, 0]
		relink         [15, 1, 2, 1, 0]
		relink         [15, 2, 3, 1, 0]
		relink         [15, 3, 1, 3, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'allocated_name'_2]
		derefatom    [2, 1, 0]
		isint          [2]
		commit         ["_Rall", 0]
		removeatom     [1, 0, 'allocated_name'_2]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		newatom      [4, 0, 'string'.'concat'_3]
		newatom      [5, 0, "v"_1]
		newatom      [6, 0, 'string'.'from'_2]
		newlink        [4, 0, 5, 0, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [6, 0, 3, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'transform_caller'_2]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller'_2]
		newatom      [2, 0, 'map'_3]
		newatom      [3, 0, 'lambda'_3]
		newatom      [4, 0, 'transform_caller_'_2]
		newlink        [2, 0, 3, 2, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		newlink        [3, 0, 4, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'transform_caller_'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller_'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		newatom      [4, 0, 'invoke'_3]
		newatom      [5, 0, 'map'_3]
		newatom      [6, 0, 'lambda'_3]
		newatom      [7, 0, 'variable_to_string'_2]
		relink         [4, 0, 3, 0, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 2, 1, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 7, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'transform_caller_'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'assign'_3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller_'_2]
		removeatom     [2, 0, 'assign'_3]
		newatom      [3, 0, 'assign'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'transform_caller_'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'set_tag'_3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller_'_2]
		removeatom     [2, 0, 'set_tag'_3]
		newatom      [3, 0, 'set_tag'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'transform_caller_'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller_'_2]
		removeatom     [2, 0, 'connect'_3]
		newatom      [3, 0, 'connect'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'transform_caller_'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'alloc'_3]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller_'_2]
		removeatom     [2, 0, 'alloc'_3]
		newatom      [3, 0, 'alloc'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'transform_caller_'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'declare'_4]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'transform_caller_'_2]
		removeatom     [2, 0, 'declare'_4]
		newatom      [3, 0, 'declare'_4]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 2, 2, 0]
		relink         [3, 3, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'variable_to_string'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [3, 2, 0]
		isint          [3]
		commit         ["_Rvar", 0]
		removeatom     [1, 0, 'variable_to_string'_2]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0]
		unify          [1, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'delete_equals'_2]
		commit         ["_Rdel", 0]
		removeatom     [1, 0, 'delete_equals'_2]
		newatom      [2, 0, 'delete_equals'_3]
		newatom      [3, 0, "="_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'delete_equals'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rdel", 0]
		removeatom     [1, 0, 'delete_equals'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 23]
	--memmatch:
		spec           [1, 51]
		findatom     [1, 0, 'delete_equals'_3]
		getlink      [8, 1, 2]
		getlink      [7, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		getlink      [9, 3, 0]
		deref        [4, 3, 1, 2]
		func           [4, '.'_3]
		getlink      [11, 4, 0]
		deref        [5, 4, 1, 2]
		func           [5, '.'_3]
		getlink      [12, 5, 0]
		deref        [6, 5, 1, 0]
		func           [6, '[]'_1]
		newlist      [13]
		addtolist      [13, 7]
		newlist      [14]
		addtolist      [14, 8]
		addtolist      [14, 9]
		addtolist      [14, 10]
		addtolist      [14, 11]
		addtolist      [14, 12]
		isground     [15, 13, 14]
		newlist      [16]
		addtolist      [16, 9]
		eqground       [13, 16]
		newlist      [17]
		addtolist      [17, 7]
		addtolist      [17, 8]
		addtolist      [17, 10]
		addtolist      [17, 11]
		addtolist      [17, 12]
		isground     [18, 16, 17]
		commit         ["_Rdel", 0]
		newlist      [19]
		getlink      [20, 1, 0]
		addtolist      [19, 20]
		newlist      [21]
		getlink      [22, 3, 0]
		addtolist      [21, 22]
		removeatom     [1, 0, 'delete_equals'_3]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [6, 0, '[]'_1]
		removeground   [19, 0]
		removeground   [21, 0]
		getlink      [23, 1, 0]
		insertconnectorsinnull[24, [23]]
		getlink      [25, 3, 0]
		insertconnectorsinnull[26, [25]]
		newlist      [27]
		getlink      [28, 1, 0]
		addtolist      [27, 28]
		newlist      [29]
		getlink      [30, 3, 0]
		addtolist      [29, 30]
		copyground   [31, 27, 0]
		getfromlist  [32, 31, 0]
		getfromlist  [33, 31, 1]
		newatom      [34, 0, '.'_3]
		newatom      [35, 0, 'connect'_3]
		newatom      [36, 0, 'delete_equals'_3]
		alloclink    [37, 36, 1]
		alloclink    [38, 36, 0]
		alloclink    [39, 35, 1]
		alloclink    [40, 35, 0]
		alloclink    [41, 34, 2]
		alloclink    [42, 36, 2]
		alloclink    [43, 34, 1]
		alloclink    [44, 35, 2]
		alloclink    [45, 34, 0]
		getfromlist  [46, 32, 0]
		unifylinks     [45, 44, 0]
		unifylinks     [43, 42, 0]
		getlink      [47, 1, 2]
		unifylinks     [41, 47, 0]
		getlink      [48, 4, 0]
		unifylinks     [40, 48, 0]
		getlink      [49, 5, 0]
		unifylinks     [39, 49, 0]
		unifylinks     [38, 46, 0]
		getlink      [50, 2, 1]
		unifylinks     [37, 50, 0]
		deleteconnectors[24, 33]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		freeground     [27]
		freeground     [29]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 50]
		findatom     [1, 0, 'delete_equals'_3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [8, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		getlink      [7, 3, 1]
		getlink      [6, 3, 0]
		newlist      [9]
		addtolist      [9, 4]
		newlist      [10]
		addtolist      [10, 5]
		addtolist      [10, 6]
		addtolist      [10, 7]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		newlist      [12]
		addtolist      [12, 6]
		neqground      [9, 12]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 7]
		addtolist      [13, 8]
		isground     [14, 12, 13]
		commit         ["_Rdel", 0]
		newlist      [15]
		getlink      [16, 1, 0]
		addtolist      [15, 16]
		newlist      [17]
		getlink      [18, 3, 0]
		addtolist      [17, 18]
		removeatom     [1, 0, 'delete_equals'_3]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [15, 0]
		removeground   [17, 0]
		getlink      [19, 1, 0]
		insertconnectorsinnull[20, [19]]
		getlink      [21, 3, 0]
		insertconnectorsinnull[22, [21]]
		newlist      [23]
		getlink      [24, 1, 0]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 3, 0]
		addtolist      [25, 26]
		copyground   [27, 23, 0]
		getfromlist  [28, 27, 0]
		getfromlist  [29, 27, 1]
		copyground   [30, 25, 0]
		getfromlist  [31, 30, 0]
		getfromlist  [32, 30, 1]
		newatom      [33, 0, '.'_3]
		newatom      [34, 0, 'invoke'_3]
		newatom      [35, 0, 'delete_equals'_3]
		alloclink    [36, 35, 1]
		alloclink    [37, 35, 0]
		alloclink    [38, 34, 1]
		alloclink    [39, 34, 0]
		alloclink    [40, 33, 2]
		alloclink    [41, 35, 2]
		alloclink    [42, 33, 1]
		alloclink    [43, 34, 2]
		alloclink    [44, 33, 0]
		getfromlist  [45, 28, 0]
		getfromlist  [46, 31, 0]
		unifylinks     [44, 43, 0]
		unifylinks     [42, 41, 0]
		getlink      [47, 1, 2]
		unifylinks     [40, 47, 0]
		unifylinks     [39, 46, 0]
		getlink      [48, 3, 1]
		unifylinks     [38, 48, 0]
		unifylinks     [37, 45, 0]
		getlink      [49, 2, 1]
		unifylinks     [36, 49, 0]
		deleteconnectors[20, 29]
		deleteconnectors[22, 32]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [23]
		freeground     [25]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'connect_caller_args'_4]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_caller_args'_4]
		newatom      [2, 0, 'connect_invocation_args'_4]
		relink         [2, 0, 1, 0, 0]
		relink         [2, 1, 1, 1, 0]
		relink         [2, 2, 1, 2, 0]
		relink         [2, 3, 1, 3, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'connect_invocation_args'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		relink         [3, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'connect_invocation_args'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args'_4]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'connect_invocation_args'_4]
		newatom      [6, 0, 'connect_invocation_args'_4]
		newatom      [7, 0, 'invoke'_3]
		newlink        [4, 0, 6, 2, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 2, 1, 0]
		newlink        [5, 1, 6, 3, 0]
		relink         [5, 3, 1, 3, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'connect_invocation_args'_4]
		deref        [3, 1, 1, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args'_4]
		removeatom     [2, 0, 'invoke'_3]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, 'invoke'_3]
		newatom      [5, 0, '[]'_1]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'connect_invocation_args'_4]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args'_4]
		removeatom     [2, 0, 'invoke'_3]
		removeatom     [4, 0, 'connect'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [5, 0, 'connect_invocation_args_check_var_L'_6]
		newatom      [6, 0, 'invoke'_3]
		newatom      [7, 0, 'list'.'contains'_5]
		newatom      [8, 0, 'connect'_3]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 4, 0]
		newlink        [5, 2, 8, 2, 0]
		relink         [5, 3, 3, 1, 0]
		relink         [5, 4, 1, 2, 0]
		relink         [5, 5, 1, 3, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		relink         [7, 0, 2, 1, 0]
		relink         [7, 1, 4, 0, 0]
		newlink        [7, 3, 8, 0, 0]
		relink         [8, 1, 4, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'connect_invocation_args_check_var_L'_6]
		deref        [4, 1, 2, 2]
		func           [4, 'connect'_3]
		deref        [3, 1, 1, 0]
		func           [3, 'true'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args_check_var_L'_6]
		removeatom     [2, 0, 'invoke'_3]
		removeatom     [3, 0, 'true'_1]
		removeatom     [4, 0, 'connect'_3]
		newatom      [5, 0, 'connect_invocation_args'_4]
		newatom      [6, 0, 'invoke'_3]
		newatom      [7, 0, 'list'.'exchange'_4]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 3, 0]
		relink         [5, 2, 1, 4, 0]
		relink         [5, 3, 1, 5, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 7, 3, 0]
		relink         [7, 0, 2, 1, 0]
		relink         [7, 1, 4, 0, 0]
		relink         [7, 2, 4, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'connect_invocation_args_check_var_L'_6]
		deref        [4, 1, 2, 2]
		func           [4, 'connect'_3]
		deref        [3, 1, 1, 0]
		func           [3, 'false'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args_check_var_L'_6]
		removeatom     [2, 0, 'invoke'_3]
		removeatom     [3, 0, 'false'_1]
		removeatom     [4, 0, 'connect'_3]
		newatom      [5, 0, 'connect_invocation_args_check_var_R'_6]
		newatom      [6, 0, 'invoke'_3]
		newatom      [7, 0, 'list'.'contains'_5]
		newatom      [8, 0, 'connect'_3]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 4, 0]
		newlink        [5, 2, 8, 2, 0]
		relink         [5, 3, 1, 3, 0]
		relink         [5, 4, 1, 4, 0]
		relink         [5, 5, 1, 5, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		relink         [7, 0, 2, 1, 0]
		relink         [7, 1, 4, 1, 0]
		newlink        [7, 3, 8, 1, 0]
		relink         [8, 0, 4, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'connect_invocation_args_check_var_R'_6]
		deref        [4, 1, 2, 2]
		func           [4, 'connect'_3]
		deref        [3, 1, 1, 0]
		func           [3, 'true'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args_check_var_R'_6]
		removeatom     [2, 0, 'invoke'_3]
		removeatom     [3, 0, 'true'_1]
		removeatom     [4, 0, 'connect'_3]
		newatom      [5, 0, 'connect_invocation_args'_4]
		newatom      [6, 0, 'invoke'_3]
		newatom      [7, 0, 'list'.'exchange'_4]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 3, 0]
		relink         [5, 2, 1, 4, 0]
		relink         [5, 3, 1, 5, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 7, 3, 0]
		relink         [7, 0, 2, 1, 0]
		relink         [7, 1, 4, 1, 0]
		relink         [7, 2, 4, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'connect_invocation_args_check_var_R'_6]
		deref        [4, 1, 2, 2]
		func           [4, 'connect'_3]
		deref        [3, 1, 1, 0]
		func           [3, 'false'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'invoke'_3]
		commit         ["_conn", 0]
		removeatom     [1, 0, 'connect_invocation_args_check_var_R'_6]
		removeatom     [2, 0, 'invoke'_3]
		removeatom     [3, 0, 'false'_1]
		removeatom     [4, 0, 'connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'connect'_3]
		newatom      [7, 0, 'connect_invocation_args'_4]
		newatom      [8, 0, 'invoke'_3]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 3, 0]
		relink         [5, 2, 1, 5, 0]
		relink         [6, 0, 4, 0, 0]
		relink         [6, 1, 4, 1, 0]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 3, 0]
		relink         [7, 2, 1, 4, 0]
		relink         [8, 0, 2, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'connect_local_links'_2]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_local_links'_2]
		newatom      [2, 0, 'filter_connect'_3]
		newatom      [3, 0, 'list'.'append'_3]
		newatom      [4, 0, 'connect_local_links0'_2]
		relink         [2, 0, 1, 0, 0]
		newlink        [2, 1, 4, 0, 0]
		newlink        [2, 2, 3, 1, 0]
		newlink        [3, 0, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'connect_local_links0'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_local_links0'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'connect_local_links0'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'connect'_3]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_local_links0'_2]
		removeatom     [3, 0, 'connect'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'connect_local_links_inner'_5]
		newatom      [5, 0, 'connect'_3]
		newatom      [6, 0, 'connect_local_links0'_2]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [4, 2, 6, 1, 0]
		newlink        [4, 3, 6, 0, 0]
		relink         [4, 4, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'connect_local_links_inner'_5]
		deref        [3, 1, 1, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_local_links_inner'_5]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'connect'_3]
		newatom      [6, 0, '[]'_1]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 2, 0]
		relink         [4, 2, 1, 4, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [6, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'connect_local_links_inner'_5]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'connect_local_links_inner'_5]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [4, 0, 'connect'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [5, 0, 'connect_local_links_check1'_6]
		newatom      [6, 0, 'connect'_3]
		newatom      [7, 0, 'connect'_3]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 2, 0]
		relink         [5, 2, 3, 1, 0]
		relink         [5, 3, 1, 2, 0]
		relink         [5, 4, 1, 3, 0]
		relink         [5, 5, 1, 4, 0]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [7, 0, 4, 0, 0]
		relink         [7, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 32]
		findatom     [1, 0, 'connect_local_links_check1'_6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'connect'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		getlink      [9, 2, 1]
		getlink      [8, 2, 0]
		newlist      [12]
		addtolist      [12, 8]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 9]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 10]
		eqground       [12, 15]
		newlist      [16]
		addtolist      [16, 4]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		commit         ["_Rcon", 0]
		newlist      [18]
		getlink      [19, 3, 0]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 2, 0]
		addtolist      [20, 21]
		removeatom     [1, 0, 'connect_local_links_check1'_6]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeground   [18, 0]
		removeground   [20, 0]
		getlink      [22, 3, 0]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 2, 0]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 3, 0]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 2, 0]
		addtolist      [28, 29]
		unify          [1, 5, 1, 3, 0]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'connect'_3]
		newlink        [30, 0, 31, 2, 0]
		relink         [30, 1, 1, 2, 0]
		relink         [30, 2, 1, 4, 0]
		relink         [31, 0, 2, 1, 0]
		relink         [31, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [26]
		freeground     [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 32]
		findatom     [1, 0, 'connect_local_links_check1'_6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'connect'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		getlink      [9, 2, 1]
		getlink      [8, 2, 0]
		newlist      [12]
		addtolist      [12, 8]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 9]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 11]
		eqground       [12, 15]
		newlist      [16]
		addtolist      [16, 4]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 10]
		isground     [17, 15, 16]
		commit         ["_Rcon", 0]
		newlist      [18]
		getlink      [19, 3, 1]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 2, 0]
		addtolist      [20, 21]
		removeatom     [1, 0, 'connect_local_links_check1'_6]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeground   [18, 0]
		removeground   [20, 0]
		getlink      [22, 3, 1]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 2, 0]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 3, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 2, 0]
		addtolist      [28, 29]
		unify          [1, 5, 1, 3, 0]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'connect'_3]
		newlink        [30, 0, 31, 2, 0]
		relink         [30, 1, 1, 2, 0]
		relink         [30, 2, 1, 4, 0]
		relink         [31, 0, 2, 1, 0]
		relink         [31, 1, 3, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [26]
		freeground     [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 71]
		findatom     [1, 0, 'connect_local_links_check1'_6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'connect'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		getlink      [9, 2, 1]
		getlink      [8, 2, 0]
		newlist      [12]
		addtolist      [12, 8]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 9]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 10]
		neqground      [12, 15]
		newlist      [16]
		addtolist      [16, 4]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		newlist      [18]
		addtolist      [18, 11]
		neqground      [12, 18]
		newlist      [19]
		addtolist      [19, 4]
		addtolist      [19, 5]
		addtolist      [19, 6]
		addtolist      [19, 7]
		addtolist      [19, 8]
		addtolist      [19, 9]
		addtolist      [19, 10]
		isground     [20, 18, 19]
		commit         ["_Rcon", 0]
		newlist      [21]
		getlink      [22, 3, 1]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 2, 0]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 3, 0]
		addtolist      [25, 26]
		removeatom     [1, 0, 'connect_local_links_check1'_6]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeground   [25, 0]
		removeground   [21, 0]
		removeground   [23, 0]
		getlink      [27, 3, 0]
		insertconnectorsinnull[28, [27]]
		getlink      [29, 3, 1]
		insertconnectorsinnull[30, [29]]
		getlink      [31, 2, 0]
		insertconnectorsinnull[32, [31]]
		newlist      [33]
		getlink      [34, 3, 1]
		addtolist      [33, 34]
		newlist      [35]
		getlink      [36, 2, 0]
		addtolist      [35, 36]
		newlist      [37]
		getlink      [38, 3, 0]
		addtolist      [37, 38]
		copyground   [39, 37, 0]
		getfromlist  [40, 39, 0]
		getfromlist  [41, 39, 1]
		copyground   [42, 33, 0]
		getfromlist  [43, 42, 0]
		getfromlist  [44, 42, 1]
		copyground   [45, 35, 0]
		getfromlist  [46, 45, 0]
		getfromlist  [47, 45, 1]
		newatom      [48, 0, 'connect_local_links_check2'_6]
		newatom      [49, 0, 'connect'_3]
		newatom      [50, 0, 'connect'_3]
		alloclink    [51, 50, 1]
		alloclink    [52, 50, 0]
		alloclink    [53, 49, 1]
		alloclink    [54, 49, 0]
		alloclink    [55, 48, 5]
		alloclink    [56, 48, 4]
		alloclink    [57, 48, 3]
		alloclink    [58, 48, 2]
		alloclink    [59, 50, 2]
		alloclink    [60, 48, 1]
		alloclink    [61, 49, 2]
		alloclink    [62, 48, 0]
		getfromlist  [63, 40, 0]
		getfromlist  [64, 43, 0]
		getfromlist  [65, 46, 0]
		unifylinks     [62, 61, 0]
		unifylinks     [60, 59, 0]
		getlink      [66, 1, 2]
		unifylinks     [58, 66, 0]
		getlink      [67, 1, 3]
		unifylinks     [57, 67, 0]
		getlink      [68, 1, 4]
		unifylinks     [56, 68, 0]
		getlink      [69, 1, 5]
		unifylinks     [55, 69, 0]
		unifylinks     [54, 65, 0]
		getlink      [70, 2, 1]
		unifylinks     [53, 70, 0]
		unifylinks     [52, 63, 0]
		unifylinks     [51, 64, 0]
		deleteconnectors[28, 41]
		deleteconnectors[30, 44]
		deleteconnectors[32, 47]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [37]
		freeground     [33]
		freeground     [35]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 32]
		findatom     [1, 0, 'connect_local_links_check2'_6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'connect'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		getlink      [9, 2, 1]
		getlink      [8, 2, 0]
		newlist      [12]
		addtolist      [12, 9]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 8]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 10]
		eqground       [12, 15]
		newlist      [16]
		addtolist      [16, 4]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		commit         ["_Rcon", 0]
		newlist      [18]
		getlink      [19, 2, 1]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 3, 0]
		addtolist      [20, 21]
		removeatom     [1, 0, 'connect_local_links_check2'_6]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeground   [18, 0]
		removeground   [20, 0]
		getlink      [22, 2, 1]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 3, 0]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 2, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 3, 0]
		addtolist      [28, 29]
		unify          [1, 5, 1, 3, 0]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'connect'_3]
		newlink        [30, 0, 31, 2, 0]
		relink         [30, 1, 1, 2, 0]
		relink         [30, 2, 1, 4, 0]
		relink         [31, 0, 2, 0, 0]
		relink         [31, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [26]
		freeground     [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 32]
		findatom     [1, 0, 'connect_local_links_check2'_6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'connect'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		getlink      [9, 2, 1]
		getlink      [8, 2, 0]
		newlist      [12]
		addtolist      [12, 9]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 8]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 11]
		eqground       [12, 15]
		newlist      [16]
		addtolist      [16, 4]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 10]
		isground     [17, 15, 16]
		commit         ["_Rcon", 0]
		newlist      [18]
		getlink      [19, 3, 1]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 2, 1]
		addtolist      [20, 21]
		removeatom     [1, 0, 'connect_local_links_check2'_6]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeground   [20, 0]
		removeground   [18, 0]
		getlink      [22, 2, 1]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 3, 1]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 3, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 2, 1]
		addtolist      [28, 29]
		unify          [1, 5, 1, 3, 0]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'connect'_3]
		newlink        [30, 0, 31, 2, 0]
		relink         [30, 1, 1, 2, 0]
		relink         [30, 2, 1, 4, 0]
		relink         [31, 0, 2, 0, 0]
		relink         [31, 1, 3, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [28]
		freeground     [26]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 74]
		findatom     [1, 0, 'connect_local_links_check2'_6]
		getlink      [7, 1, 5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'connect'_3]
		getlink      [11, 3, 1]
		getlink      [10, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'connect'_3]
		getlink      [9, 2, 1]
		getlink      [8, 2, 0]
		newlist      [12]
		addtolist      [12, 9]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 8]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 10]
		neqground      [12, 15]
		newlist      [16]
		addtolist      [16, 4]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		newlist      [18]
		addtolist      [18, 11]
		neqground      [12, 18]
		newlist      [19]
		addtolist      [19, 4]
		addtolist      [19, 5]
		addtolist      [19, 6]
		addtolist      [19, 7]
		addtolist      [19, 8]
		addtolist      [19, 9]
		addtolist      [19, 10]
		isground     [20, 18, 19]
		commit         ["_Rcon", 0]
		newlist      [21]
		getlink      [22, 2, 1]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 3, 1]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 3, 0]
		addtolist      [25, 26]
		removeatom     [1, 0, 'connect_local_links_check2'_6]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeground   [21, 0]
		removeground   [25, 0]
		removeground   [23, 0]
		getlink      [27, 2, 1]
		insertconnectorsinnull[28, [27]]
		getlink      [29, 3, 0]
		insertconnectorsinnull[30, [29]]
		getlink      [31, 3, 1]
		insertconnectorsinnull[32, [31]]
		newlist      [33]
		getlink      [34, 2, 1]
		addtolist      [33, 34]
		newlist      [35]
		getlink      [36, 3, 1]
		addtolist      [35, 36]
		newlist      [37]
		getlink      [38, 3, 0]
		addtolist      [37, 38]
		copyground   [39, 33, 0]
		getfromlist  [40, 39, 0]
		getfromlist  [41, 39, 1]
		copyground   [42, 37, 0]
		getfromlist  [43, 42, 0]
		getfromlist  [44, 42, 1]
		copyground   [45, 35, 0]
		getfromlist  [46, 45, 0]
		getfromlist  [47, 45, 1]
		newatom      [48, 0, 'connect_local_links_inner'_5]
		newatom      [49, 0, 'connect'_3]
		newatom      [50, 0, '.'_3]
		newatom      [51, 0, 'connect'_3]
		alloclink    [52, 51, 1]
		alloclink    [53, 51, 0]
		alloclink    [54, 50, 2]
		alloclink    [55, 51, 2]
		alloclink    [56, 50, 0]
		alloclink    [57, 49, 1]
		alloclink    [58, 49, 0]
		alloclink    [59, 48, 4]
		alloclink    [60, 50, 1]
		alloclink    [61, 48, 3]
		alloclink    [62, 48, 2]
		alloclink    [63, 48, 1]
		alloclink    [64, 49, 2]
		alloclink    [65, 48, 0]
		getfromlist  [66, 46, 0]
		getfromlist  [67, 40, 0]
		getfromlist  [68, 43, 0]
		unifylinks     [65, 64, 0]
		getlink      [69, 1, 2]
		unifylinks     [63, 69, 0]
		getlink      [70, 1, 3]
		unifylinks     [62, 70, 0]
		unifylinks     [61, 60, 0]
		getlink      [71, 1, 5]
		unifylinks     [59, 71, 0]
		getlink      [72, 2, 0]
		unifylinks     [58, 72, 0]
		unifylinks     [57, 67, 0]
		unifylinks     [56, 55, 0]
		getlink      [73, 1, 4]
		unifylinks     [54, 73, 0]
		unifylinks     [53, 68, 0]
		unifylinks     [52, 66, 0]
		deleteconnectors[28, 41]
		deleteconnectors[30, 44]
		deleteconnectors[32, 47]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [33]
		freeground     [37]
		freeground     [35]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'insert_invocation_links'_2]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links'_2]
		newatom      [2, 0, 'filter_invoke'_3]
		newatom      [3, 0, 'insert_invocation_links0'_4]
		newatom      [4, 0, 0_1]
		relink         [2, 0, 1, 0, 0]
		newlink        [2, 1, 3, 1, 0]
		newlink        [2, 2, 3, 2, 0]
		newlink        [3, 0, 4, 0, 0]
		relink         [3, 3, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'insert_invocation_links0'_4]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links0'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 3, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 12]
		findatom     [1, 0, 'insert_invocation_links0'_4]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [3, 1_1]
		iadd         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links0'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		copyatom     [9, 0, 4]
		newatom      [10, 0, 'insert_invocation_links1'_4]
		newatom      [11, 0, 'insert_invocation_links0'_4]
		newlink        [10, 0, 9, 0, 0]
		relink         [10, 1, 2, 0, 0]
		newlink        [10, 2, 11, 3, 0]
		relink         [10, 3, 1, 3, 0]
		newlink        [11, 0, 8, 0, 0]
		relink         [11, 1, 2, 1, 0]
		relink         [11, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'insert_invocation_links1'_4]
		deref        [2, 1, 1, 2]
		func           [2, 'invoke'_3]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links1'_4]
		removeatom     [2, 0, 'invoke'_3]
		newatom      [3, 0, 'insert_invocation_links2'_5]
		newatom      [4, 0, 'string'.'concat'_3]
		newatom      [5, 0, "f"_1]
		newatom      [6, 0, 'string'.'from'_2]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 0, 0]
		relink         [3, 2, 2, 1, 0]
		relink         [3, 3, 1, 2, 0]
		relink         [3, 4, 1, 3, 0]
		newlink        [4, 0, 5, 0, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [6, 0, 1, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 14]
		findatom     [1, 0, 'insert_invocation_links2'_5]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links2'_5]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		copyatom     [4, 0, 2]
		copyatom     [5, 0, 2]
		newatom      [6, 0, 'insert_invocation_links_declaration'_6]
		newatom      [7, 0, 0_1]
		newatom      [8, 0, 'insert_invocation_links_connection'_6]
		newatom      [9, 0, 0_1]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'invoke'_3]
		newatom      [12, 0, 'insert_invocation_links_invocation'_4]
		newatom      [13, 0, 0_1]
		newlink        [6, 0, 3, 0, 0]
		newlink        [6, 1, 7, 0, 0]
		relink         [6, 2, 1, 2, 0]
		newlink        [6, 3, 8, 2, 0]
		newlink        [6, 4, 8, 5, 0]
		relink         [6, 5, 1, 4, 0]
		newlink        [8, 0, 4, 0, 0]
		newlink        [8, 1, 9, 0, 0]
		newlink        [8, 3, 12, 2, 0]
		newlink        [8, 4, 10, 2, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 1, 3, 0]
		relink         [11, 0, 1, 1, 0]
		newlink        [11, 1, 12, 3, 0]
		newlink        [12, 0, 5, 0, 0]
		newlink        [12, 1, 13, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'insert_invocation_links_declaration'_6]
		derefatom    [4, 1, 1]
		isint          [4]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links_declaration'_6]
		removeatom     [2, 0, '[]'_1]
		removeatom     [4, 0]
		removeatom     [3, 0]
		unify          [1, 5, 1, 4, 0]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 50]
		findatom     [1, 0, 'insert_invocation_links_declaration'_6]
		derefatom    [5, 1, 1]
		isint          [5]
		allocatom    [3, 1_1]
		iadd         [6, 5, 3]
		getfunc      [7, 6]
		allocatomindirect[8, 7]
		derefatom    [4, 1, 0]
		isstring       [4]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links_declaration'_6]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		removeatom     [4, 0]
		copyatom     [9, 0, 8]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		copyatom     [12, 0, 5]
		copyatom     [13, 0, 4]
		copyatom     [14, 0, 4]
		copyatom     [15, 0, 4]
		copyatom     [16, 0, 4]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'alloc'_3]
		newatom      [19, 0, 'string'.'concat'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, "_arg"_1]
		newatom      [23, 0, '.'_3]
		newatom      [24, 0, 'string'.'from'_2]
		newatom      [25, 0, '[]'_1]
		newatom      [26, 0, "port"_1]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, 'declare'_4]
		newatom      [29, 0, "port"_1]
		newatom      [30, 0, 'string'.'concat'_2]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, '.'_3]
		newatom      [33, 0, "_"_1]
		newatom      [34, 0, '.'_3]
		newatom      [35, 0, 'string'.'from'_2]
		newatom      [36, 0, '[]'_1]
		newatom      [37, 0, 'link'_3]
		newatom      [38, 0, 'none'_1]
		newatom      [39, 0, 'string'.'concat'_2]
		newatom      [40, 0, '.'_3]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, "_arg"_1]
		newatom      [43, 0, '.'_3]
		newatom      [44, 0, 'string'.'from'_2]
		newatom      [45, 0, '.'_3]
		newatom      [46, 0, ""_1]
		newatom      [47, 0, '[]'_1]
		newatom      [48, 0, 'insert_invocation_links_declaration'_6]
		newatom      [49, 0, '.'_3]
		newlink        [17, 0, 18, 2, 0]
		newlink        [17, 1, 27, 2, 0]
		relink         [17, 2, 1, 5, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 26, 0, 0]
		newlink        [19, 0, 20, 2, 0]
		newlink        [20, 0, 13, 0, 0]
		newlink        [20, 1, 21, 2, 0]
		newlink        [21, 0, 22, 0, 0]
		newlink        [21, 1, 23, 2, 0]
		newlink        [23, 0, 24, 1, 0]
		newlink        [23, 1, 25, 0, 0]
		newlink        [24, 0, 10, 0, 0]
		newlink        [27, 0, 28, 3, 0]
		newlink        [27, 1, 48, 5, 0]
		newlink        [28, 0, 29, 0, 0]
		newlink        [28, 1, 30, 1, 0]
		newlink        [28, 2, 37, 2, 0]
		newlink        [30, 0, 31, 2, 0]
		newlink        [31, 0, 14, 0, 0]
		newlink        [31, 1, 32, 2, 0]
		newlink        [32, 0, 33, 0, 0]
		newlink        [32, 1, 34, 2, 0]
		newlink        [34, 0, 35, 1, 0]
		newlink        [34, 1, 36, 0, 0]
		newlink        [35, 0, 11, 0, 0]
		newlink        [37, 0, 38, 0, 0]
		newlink        [37, 1, 39, 1, 0]
		newlink        [39, 0, 40, 2, 0]
		newlink        [40, 0, 15, 0, 0]
		newlink        [40, 1, 41, 2, 0]
		newlink        [41, 0, 42, 0, 0]
		newlink        [41, 1, 43, 2, 0]
		newlink        [43, 0, 44, 1, 0]
		newlink        [43, 1, 45, 2, 0]
		newlink        [44, 0, 12, 0, 0]
		newlink        [45, 0, 46, 0, 0]
		newlink        [45, 1, 47, 0, 0]
		newlink        [48, 0, 16, 0, 0]
		newlink        [48, 1, 9, 0, 0]
		relink         [48, 2, 2, 1, 0]
		newlink        [48, 3, 49, 1, 0]
		relink         [48, 4, 1, 4, 0]
		relink         [49, 0, 2, 0, 0]
		relink         [49, 2, 1, 3, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [8]
		freeatom       [5]
		freeatom       [3]
		freeatom       [6]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'insert_invocation_links_connection'_6]
		derefatom    [4, 1, 1]
		isint          [4]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links_connection'_6]
		removeatom     [2, 0, '[]'_1]
		removeatom     [4, 0]
		removeatom     [3, 0]
		unify          [1, 5, 1, 4, 0]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 27]
		findatom     [1, 0, 'insert_invocation_links_connection'_6]
		derefatom    [6, 1, 1]
		isint          [6]
		allocatom    [3, 1_1]
		iadd         [7, 6, 3]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		derefatom    [4, 1, 0]
		isstring       [4]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		derefatom    [5, 2, 0]
		isstring       [5]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links_connection'_6]
		removeatom     [2, 0, '.'_3]
		removeatom     [6, 0]
		removeatom     [4, 0]
		removeatom     [5, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 4]
		copyatom     [13, 0, 4]
		copyatom     [14, 0, 5]
		copyatom     [15, 0, 5]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'connect'_3]
		newatom      [18, 0, 'string'.'concat'_2]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, "_"_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'string'.'from'_2]
		newatom      [24, 0, '[]'_1]
		newatom      [25, 0, 'insert_invocation_links_connection'_6]
		newatom      [26, 0, '.'_3]
		newlink        [16, 0, 17, 2, 0]
		newlink        [16, 1, 25, 5, 0]
		relink         [16, 2, 1, 5, 0]
		newlink        [17, 0, 14, 0, 0]
		newlink        [17, 1, 18, 1, 0]
		newlink        [18, 0, 19, 2, 0]
		newlink        [19, 0, 12, 0, 0]
		newlink        [19, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 0, 0]
		newlink        [23, 0, 11, 0, 0]
		newlink        [25, 0, 13, 0, 0]
		newlink        [25, 1, 10, 0, 0]
		relink         [25, 2, 2, 1, 0]
		newlink        [25, 3, 26, 1, 0]
		relink         [25, 4, 1, 4, 0]
		newlink        [26, 0, 15, 0, 0]
		relink         [26, 2, 1, 3, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [7]
		freeatom       [3]
		freeatom       [9]
		freeatom       [6]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'insert_invocation_links_invocation'_4]
		derefatom    [4, 1, 1]
		isint          [4]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links_invocation'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [4, 0]
		removeatom     [3, 0]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 25]
		findatom     [1, 0, 'insert_invocation_links_invocation'_4]
		derefatom    [6, 1, 1]
		isint          [6]
		allocatom    [3, 1_1]
		iadd         [7, 6, 3]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		derefatom    [5, 1, 0]
		isstring       [5]
		deref        [2, 1, 2, 2]
		func           [2, '.'_3]
		derefatom    [4, 2, 0]
		isstring       [4]
		commit         ["_Rins", 0]
		removeatom     [1, 0, 'insert_invocation_links_invocation'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [6, 0]
		removeatom     [5, 0]
		removeatom     [4, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 5]
		copyatom     [13, 0, 5]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'string'.'concat'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, "_arg"_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, 'string'.'from'_2]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, ""_1]
		newatom      [23, 0, '[]'_1]
		newatom      [24, 0, 'insert_invocation_links_invocation'_4]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 24, 3, 0]
		relink         [14, 2, 1, 3, 0]
		newlink        [15, 0, 16, 2, 0]
		newlink        [16, 0, 12, 0, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 20, 1, 0]
		newlink        [19, 1, 21, 2, 0]
		newlink        [20, 0, 11, 0, 0]
		newlink        [21, 0, 22, 0, 0]
		newlink        [21, 1, 23, 0, 0]
		newlink        [24, 0, 13, 0, 0]
		newlink        [24, 1, 10, 0, 0]
		relink         [24, 2, 2, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [9]
		freeatom       [3]
		freeatom       [7]
		freeatom       [6]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_invoke'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_invoke'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_invoke'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_invoke'_3]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_invoke'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'invoke'_3]
		relink         [4, 0, 2, 1, 0]
		newlink        [4, 1, 5, 1, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_invoke'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'filter_invoke'_3]
		newatom      [4, 0, '.'_3]
		relink         [3, 0, 2, 1, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [3, 2, 4, 1, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'invoke'_3]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'assign'_3]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'set_tag'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'set_tag'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'set_tag'_3]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'connect'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'connect'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'connect'_3]
		relink         [4, 0, 2, 1, 0]
		newlink        [4, 1, 5, 1, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'alloc'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'alloc'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'alloc'_3]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'alloc'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'alloc'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'alloc'_4]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_3]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'declare'_4]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_free'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_free'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_3]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_free'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'match'_3]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_free'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_3]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_free'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'declare'_4]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_free'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_3]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_free'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'locate'_4]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_free'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_3]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_free'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'free'_3]
		relink         [4, 0, 2, 1, 0]
		newlink        [4, 1, 5, 1, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_free'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'filter_free'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'compare'_4]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'add_dereference'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference'_3]
		newatom      [2, 0, 'add_dereference_cmds'_3]
		relink         [2, 0, 1, 0, 0]
		relink         [2, 1, 1, 1, 0]
		relink         [2, 2, 1, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'add_dereference_cmds'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds'_3]
		newatom      [2, 0, 'add_dereference_cmds'_4]
		newatom      [3, 0, 0_1]
		relink         [2, 0, 1, 0, 0]
		relink         [2, 1, 1, 1, 0]
		newlink        [2, 2, 3, 0, 0]
		relink         [2, 3, 1, 2, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'add_dereference_cmds'_4]
		derefatom    [3, 1, 1]
		isint          [3]
		derefatom    [2, 1, 2]
		isint          [2]
		ieq            [2, 3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds'_4]
		removeatom     [2, 0]
		removeatom     [3, 0]
		unify          [1, 3, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'add_dereference_cmds'_4]
		derefatom    [3, 1, 1]
		isint          [3]
		derefatom    [2, 1, 2]
		isint          [2]
		ilt            [2, 3]
		allocatom    [4, 1_1]
		iadd         [5, 2, 4]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds'_4]
		removeatom     [2, 0]
		removeatom     [3, 0]
		copyatom     [8, 0, 7]
		copyatom     [9, 0, 2]
		copyatom     [10, 0, 3]
		newatom      [11, 0, 'map'_3]
		newatom      [12, 0, 'lambda'_3]
		newatom      [13, 0, 'add_dereference_cmds_inner'_3]
		newatom      [14, 0, 'string'.'concat'_3]
		newatom      [15, 0, "arg"_1]
		newatom      [16, 0, 'string'.'from'_2]
		newatom      [17, 0, 'add_dereference_cmds'_4]
		newlink        [11, 0, 12, 2, 0]
		relink         [11, 1, 1, 0, 0]
		newlink        [11, 2, 17, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 13, 2, 0]
		newlink        [13, 0, 14, 2, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 1, 0]
		newlink        [16, 0, 9, 0, 0]
		newlink        [17, 1, 10, 0, 0]
		newlink        [17, 2, 8, 0, 0]
		relink         [17, 3, 1, 3, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		derefatom    [2, 1, 1]
		isstring       [2]
		samefunc       [2, 3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0]
		removeatom     [3, 0]
		copyatom     [4, 0, 2]
		newatom      [5, 0, 'deref'_2]
		newlink        [5, 0, 4, 0, 0]
		relink         [5, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isunary        [3]
		getfunc      [4, 3]
		derefatom    [2, 1, 1]
		isstring       [2]
		isunary        [2]
		getfunc      [5, 2]
		neqfunc        [4, 5]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0]
		removeatom     [3, 0]
		copyatom     [6, 0, 2]
		relink         [6, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'match'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'match'_3]
		newatom      [3, 0, 'match'_3]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 3]
		func           [2, 'compare'_4]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'compare'_4]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'compare'_4]
		newatom      [7, 0, 'add_dereference_cmds_inner'_3]
		newatom      [8, 0, 'add_dereference_cmds_inner'_3]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [6, 2, 8, 2, 0]
		relink         [6, 3, 1, 2, 0]
		newlink        [7, 0, 4, 0, 0]
		relink         [7, 1, 2, 1, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 2]
		func           [2, 'connect'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'connect'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'connect'_3]
		newatom      [7, 0, 'add_dereference_cmds_inner'_3]
		newatom      [8, 0, 'add_dereference_cmds_inner'_3]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [6, 2, 1, 2, 0]
		newlink        [7, 0, 4, 0, 0]
		relink         [7, 1, 2, 0, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 3]
		func           [2, 'locate'_4]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'locate'_4]
		newatom      [3, 0, 'locate'_4]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 2, 2, 0]
		relink         [3, 3, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'alloc'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'alloc'_3]
		newatom      [3, 0, 'alloc'_3]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 3]
		func           [2, 'declare'_4]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'declare'_4]
		newatom      [3, 0, 'declare'_4]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		newlink        [3, 2, 4, 2, 0]
		relink         [3, 3, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 2]
		func           [2, 'assign'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'assign'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'assign'_3]
		newatom      [7, 0, 'add_dereference_cmds_inner'_3]
		newatom      [8, 0, 'add_dereference_cmds_inner'_3]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [6, 2, 1, 2, 0]
		newlink        [7, 0, 4, 0, 0]
		relink         [7, 1, 2, 0, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'set_tag'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'set_tag'_3]
		newatom      [3, 0, 'set_tag'_3]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'invoke'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'invoke'_3]
		newatom      [3, 0, 'invoke'_3]
		newatom      [4, 0, 'map'_3]
		newatom      [5, 0, 'lambda'_3]
		newatom      [6, 0, 'add_dereference_cmds_inner'_3]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		relink         [3, 2, 1, 2, 0]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [6, 0, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 1]
		func           [2, 'thread_join'_2]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'thread_join'_2]
		newatom      [3, 0, 'thread_join'_2]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'free'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'free'_3]
		newatom      [3, 0, 'free'_3]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 1]
		func           [2, 'deref'_2]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'deref'_2]
		newatom      [3, 0, 'deref'_2]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 29]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 0]
		deref        [2, 1, 1, 1]
		func           [2, 'ref'_2]
		getlink      [5, 2, 0]
		newlist      [6]
		addtolist      [6, 5]
		newlist      [7]
		addtolist      [7, 3]
		addtolist      [7, 4]
		isground     [8, 6, 7]
		newlist      [9]
		addtolist      [9, 3]
		eqground       [6, 9]
		newlist      [10]
		addtolist      [10, 4]
		addtolist      [10, 5]
		isground     [11, 9, 10]
		commit         ["_Radd", 0]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newlist      [14]
		getlink      [15, 1, 0]
		addtolist      [14, 15]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'ref'_2]
		removeground   [12, 0]
		removeground   [14, 0]
		getlink      [16, 2, 0]
		insertconnectorsinnull[17, [16]]
		getlink      [18, 1, 0]
		insertconnectorsinnull[19, [18]]
		newlist      [20]
		getlink      [21, 2, 0]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 1, 0]
		addtolist      [22, 23]
		copyground   [24, 20, 0]
		getfromlist  [25, 24, 0]
		getfromlist  [26, 24, 1]
		getfromlist  [27, 25, 0]
		getlink      [28, 1, 2]
		unifylinks     [27, 28, 0]
		deleteconnectors[17, 26]
		freeatom       [1]
		freeatom       [2]
		freeground     [20]
		freeground     [22]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 40]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 0]
		deref        [2, 1, 1, 1]
		func           [2, 'ref'_2]
		getlink      [5, 2, 0]
		newlist      [6]
		addtolist      [6, 5]
		newlist      [7]
		addtolist      [7, 3]
		addtolist      [7, 4]
		isground     [8, 6, 7]
		newlist      [9]
		addtolist      [9, 3]
		neqground      [6, 9]
		newlist      [10]
		addtolist      [10, 4]
		addtolist      [10, 5]
		isground     [11, 9, 10]
		commit         ["_Radd", 0]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newlist      [14]
		getlink      [15, 1, 0]
		addtolist      [14, 15]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'ref'_2]
		removeground   [12, 0]
		removeground   [14, 0]
		getlink      [16, 2, 0]
		insertconnectorsinnull[17, [16]]
		getlink      [18, 1, 0]
		insertconnectorsinnull[19, [18]]
		newlist      [20]
		getlink      [21, 2, 0]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 1, 0]
		addtolist      [22, 23]
		copyground   [24, 20, 0]
		getfromlist  [25, 24, 0]
		getfromlist  [26, 24, 1]
		copyground   [27, 22, 0]
		getfromlist  [28, 27, 0]
		getfromlist  [29, 27, 1]
		newatom      [30, 0, 'ref'_2]
		newatom      [31, 0, 'add_dereference_cmds_inner'_3]
		alloclink    [32, 31, 1]
		alloclink    [33, 31, 0]
		alloclink    [34, 30, 1]
		alloclink    [35, 31, 2]
		alloclink    [36, 30, 0]
		getfromlist  [37, 25, 0]
		getfromlist  [38, 28, 0]
		unifylinks     [36, 35, 0]
		getlink      [39, 1, 2]
		unifylinks     [34, 39, 0]
		unifylinks     [33, 38, 0]
		unifylinks     [32, 37, 0]
		deleteconnectors[17, 26]
		deleteconnectors[19, 29]
		freeatom       [1]
		freeatom       [2]
		freeground     [20]
		freeground     [22]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 1]
		func           [2, 'obj'_2]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'obj'_2]
		newatom      [3, 0, 'obj'_2]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 1]
		func           [2, 'portref'_2]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'portref'_2]
		newatom      [3, 0, 'portref'_2]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'coerce'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'coerce'_3]
		newatom      [3, 0, 'coerce'_3]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'member'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'member'_3]
		newatom      [3, 0, 'member'_3]
		newatom      [4, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 2]
		func           [2, 'link'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'link'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'link'_3]
		newatom      [7, 0, 'add_dereference_cmds_inner'_3]
		newatom      [8, 0, 'add_dereference_cmds_inner'_3]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [6, 2, 1, 2, 0]
		newlink        [7, 0, 4, 0, 0]
		relink         [7, 1, 2, 0, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 1]
		func           [2, 'number'_2]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'number'_2]
		removeatom     [3, 0]
		newatom      [4, 0, 'number'_2]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 0]
		func           [2, 'none'_1]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'none'_1]
		removeatom     [3, 0]
		newatom      [4, 0, 'none'_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		deref        [2, 1, 1, 1]
		func           [2, 'init_list'_2]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'init_list'_2]
		newatom      [3, 0, 'init_list'_2]
		newatom      [4, 0, 'map'_3]
		newatom      [5, 0, 'lambda'_3]
		newatom      [6, 0, 'add_dereference_cmds_inner'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 2, 0]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 2, 0, 0]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [6, 0, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'add_dereference_cmds_inner'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		commit         ["_Radd", 0]
		removeatom     [1, 0, 'add_dereference_cmds_inner'_3]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0]
		newatom      [4, 0, 'apply'_3]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'sort_statements'_2]
		commit         ["_Rsor", 0]
		removeatom     [1, 0, 'sort_statements'_2]
		newatom      [2, 0, 'concat_scopes'_2]
		newatom      [3, 0, 'sort_scopes'_2]
		newatom      [4, 0, 'group_statements'_2]
		newlink        [2, 0, 3, 1, 0]
		relink         [2, 1, 1, 1, 0]
		newlink        [3, 0, 4, 1, 0]
		relink         [4, 0, 1, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'group_statements'_2]
		commit         ["_Rgro", 0]
		removeatom     [1, 0, 'group_statements'_2]
		newatom      [2, 0, 'scope'_4]
		newatom      [3, 0, 'group_statements_inner'_4]
		newlink        [2, 0, 3, 3, 0]
		newlink        [2, 1, 3, 1, 0]
		newlink        [2, 2, 3, 2, 0]
		relink         [2, 3, 1, 1, 0]
		relink         [3, 0, 1, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'group_statements_inner'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rgro", 0]
		removeatom     [1, 0, 'group_statements_inner'_4]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'group_statements_inner'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_Rgro", 0]
		removeatom     [1, 0, 'group_statements_inner'_4]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		unify          [1, 3, 1, 1, 0]
		newatom      [4, 0, 'scope'_4]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'match'_3]
		newatom      [7, 0, 'group_statements_inner'_4]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		newlink        [4, 2, 7, 2, 0]
		relink         [4, 3, 1, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 3, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'group_statements_inner'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_Rgro", 0]
		removeatom     [1, 0, 'group_statements_inner'_4]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		unify          [1, 3, 1, 1, 0]
		newatom      [4, 0, 'scope'_4]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'locate'_4]
		newatom      [7, 0, 'group_statements_inner'_4]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		newlink        [4, 2, 7, 2, 0]
		relink         [4, 3, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		newlink        [5, 1, 7, 3, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'group_statements_inner'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		commit         ["_Rgro", 0]
		removeatom     [1, 0, 'group_statements_inner'_4]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		unify          [1, 3, 1, 1, 0]
		newatom      [4, 0, 'scope'_4]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'compare'_4]
		newatom      [7, 0, 'group_statements_inner'_4]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		newlink        [4, 2, 7, 2, 0]
		relink         [4, 3, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		newlink        [5, 1, 7, 3, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'group_statements_inner'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rgro", 0]
		removeatom     [1, 0, 'group_statements_inner'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'group_statements_inner'_4]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 3, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_match'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_match'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_match'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_match'_6]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'match'_3]
		newatom      [6, 0, 'filter_match'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_match'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_match'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_match'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_connect'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_connect'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'connect'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_6]
		removeatom     [3, 0, 'connect'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'connect'_3]
		newatom      [6, 0, 'filter_connect'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_connect'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_connect'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_connect'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_locate'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_locate'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_locate'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_locate'_6]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'locate'_4]
		newatom      [6, 0, 'filter_locate'_6]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_locate'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_locate'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_locate'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_alloc'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_alloc'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_alloc'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'alloc'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_alloc'_6]
		removeatom     [3, 0, 'alloc'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'alloc'_3]
		newatom      [6, 0, 'filter_alloc'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_alloc'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_alloc'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_alloc'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_free'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_free'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_6]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'free'_3]
		newatom      [6, 0, 'filter_free'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_free'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_free'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_free'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_declare'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_declare'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_declare'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_declare'_6]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'declare'_4]
		newatom      [6, 0, 'filter_declare'_6]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_declare'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_declare'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_declare'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_set_tag'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_set_tag'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_set_tag'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'set_tag'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_set_tag'_6]
		removeatom     [3, 0, 'set_tag'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'set_tag'_3]
		newatom      [6, 0, 'filter_set_tag'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_set_tag'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_set_tag'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_set_tag'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_invoke'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_invoke'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_invoke'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_invoke'_6]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'invoke'_3]
		newatom      [6, 0, 'filter_invoke'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_invoke'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_invoke'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_invoke'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_assign'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_assign'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_assign'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_assign'_6]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'assign'_3]
		newatom      [6, 0, 'filter_assign'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_assign'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_assign'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_assign'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_thread_join'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_thread_join'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_thread_join'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'thread_join'_2]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_thread_join'_6]
		removeatom     [3, 0, 'thread_join'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'thread_join'_2]
		newatom      [6, 0, 'filter_thread_join'_6]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_thread_join'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_thread_join'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_thread_join'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'filter_compare'_6]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_compare'_6]
		unify          [1, 2, 1, 3, 0]
		unify          [1, 4, 1, 5, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'filter_compare'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_compare'_6]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'compare'_4]
		newatom      [6, 0, 'filter_compare'_6]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 1, 4, 0]
		relink         [6, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'filter_compare'_6]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_filt", 0]
		removeatom     [1, 0, 'filter_compare'_6]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'filter_compare'_6]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 4, 0]
		relink         [3, 2, 1, 4, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [4, 3, 1, 3, 0]
		relink         [4, 5, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'sort_scope'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'scope'_4]
		commit         ["_Rsor", 0]
		removeatom     [1, 0, 'sort_scope'_2]
		removeatom     [2, 0, 'scope'_4]
		newatom      [3, 0, 'filter_match'_6]
		newatom      [4, 0, 'filter_connect'_6]
		newatom      [5, 0, 'filter_locate'_6]
		newatom      [6, 0, 'filter_alloc'_6]
		newatom      [7, 0, 'filter_free'_6]
		newatom      [8, 0, 'filter_declare'_6]
		newatom      [9, 0, 'filter_set_tag'_6]
		newatom      [10, 0, 'filter_invoke'_6]
		newatom      [11, 0, 'filter_assign'_6]
		newatom      [12, 0, 'filter_thread_join'_6]
		newatom      [13, 0, 'filter_compare'_6]
		newatom      [14, 0, 'scope'_4]
		newatom      [15, 0, 'sort_free'_4]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		newlink        [3, 2, 14, 0, 0]
		newlink        [3, 3, 5, 2, 0]
		newlink        [3, 4, 4, 0, 0]
		newlink        [3, 5, 4, 1, 0]
		newlink        [4, 2, 11, 3, 0]
		newlink        [4, 3, 15, 2, 0]
		newlink        [4, 4, 5, 0, 0]
		newlink        [4, 5, 5, 1, 0]
		newlink        [5, 3, 13, 2, 0]
		newlink        [5, 4, 6, 0, 0]
		newlink        [5, 5, 6, 1, 0]
		newlink        [6, 2, 13, 3, 0]
		newlink        [6, 3, 8, 2, 0]
		newlink        [6, 4, 7, 0, 0]
		newlink        [6, 5, 7, 1, 0]
		newlink        [7, 2, 15, 0, 0]
		newlink        [7, 3, 15, 1, 0]
		newlink        [7, 4, 8, 0, 0]
		newlink        [7, 5, 8, 1, 0]
		newlink        [8, 3, 9, 2, 0]
		newlink        [8, 4, 9, 0, 0]
		newlink        [8, 5, 9, 1, 0]
		newlink        [9, 3, 11, 2, 0]
		newlink        [9, 4, 10, 0, 0]
		newlink        [9, 5, 10, 1, 0]
		newlink        [10, 2, 15, 3, 0]
		newlink        [10, 3, 12, 2, 0]
		newlink        [10, 4, 11, 0, 0]
		newlink        [10, 5, 11, 1, 0]
		newlink        [11, 4, 12, 0, 0]
		newlink        [11, 5, 12, 1, 0]
		newlink        [12, 3, 13, 4, 0]
		newlink        [12, 4, 13, 0, 0]
		newlink        [12, 5, 13, 1, 0]
		newlink        [13, 5, 14, 1, 0]
		relink         [14, 2, 2, 2, 0]
		relink         [14, 3, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'sort_scopes'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rsor", 0]
		removeatom     [1, 0, 'sort_scopes'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'sort_scopes'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'scope'_4]
		commit         ["_Rsor", 0]
		removeatom     [1, 0, 'sort_scopes'_2]
		removeatom     [2, 0, 'scope'_4]
		newatom      [3, 0, 'sort_scope'_2]
		newatom      [4, 0, 'scope'_4]
		newatom      [5, 0, 'sort_scopes'_2]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		relink         [5, 0, 2, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'sort_free'_4]
		deref        [2, 1, 0, 1]
		eqatom         [2, 1]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free'_4]
		unify          [1, 2, 1, 3, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'sort_free'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free'_4]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'sort_free_inner'_7]
		newatom      [5, 0, 'free'_3]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [4, 3, 4, 4, 0]
		relink         [4, 5, 1, 2, 0]
		relink         [4, 6, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'sort_free_inner'_7]
		deref        [3, 1, 1, 2]
		eqatom         [3, 1]
		deref        [2, 1, 0, 2]
		func           [2, 'free'_3]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free_inner'_7]
		removeatom     [2, 0, 'free'_3]
		newatom      [4, 0, 'sort_free'_4]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'free'_3]
		relink         [4, 0, 1, 3, 0]
		relink         [4, 1, 1, 4, 0]
		newlink        [4, 2, 5, 1, 0]
		relink         [4, 3, 1, 6, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 2, 1, 5, 0]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'sort_free_inner'_7]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'free'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'free'_3]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free_inner'_7]
		removeatom     [2, 0, 'free'_3]
		removeatom     [4, 0, 'free'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [5, 0, 'sort_free_inner'_8]
		newatom      [6, 0, 'get_depending_order'_5]
		newatom      [7, 0, 'free'_3]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'free'_3]
		newlink        [5, 0, 6, 4, 0]
		newlink        [5, 1, 7, 2, 0]
		newlink        [5, 2, 8, 2, 0]
		relink         [5, 3, 1, 2, 0]
		relink         [5, 4, 1, 3, 0]
		relink         [5, 5, 1, 4, 0]
		relink         [5, 6, 1, 5, 0]
		relink         [5, 7, 1, 6, 0]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 4, 0, 0]
		newlink        [6, 2, 7, 0, 0]
		newlink        [6, 3, 9, 0, 0]
		relink         [7, 1, 2, 1, 0]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 1, 3, 1, 0]
		relink         [9, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'sort_free_inner'_8]
		deref        [4, 1, 2, 2]
		func           [4, '.'_3]
		deref        [5, 4, 0, 2]
		func           [5, 'free'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'free'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'ascending'_1]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free_inner'_8]
		removeatom     [2, 0, 'ascending'_1]
		removeatom     [3, 0, 'free'_3]
		removeatom     [5, 0, 'free'_3]
		removeatom     [4, 0, '.'_3]
		newatom      [6, 0, 'sort_free_inner'_7]
		newatom      [7, 0, 'free'_3]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'free'_3]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 4, 1, 0]
		relink         [6, 2, 1, 3, 0]
		relink         [6, 3, 1, 4, 0]
		newlink        [6, 4, 8, 1, 0]
		relink         [6, 5, 1, 6, 0]
		relink         [6, 6, 1, 7, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 2, 1, 5, 0]
		relink         [9, 0, 5, 0, 0]
		relink         [9, 1, 5, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'sort_free_inner'_8]
		deref        [4, 1, 2, 2]
		func           [4, '.'_3]
		deref        [5, 4, 0, 2]
		func           [5, 'free'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'free'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'nothing'_1]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free_inner'_8]
		removeatom     [2, 0, 'nothing'_1]
		removeatom     [3, 0, 'free'_3]
		removeatom     [5, 0, 'free'_3]
		removeatom     [4, 0, '.'_3]
		newatom      [6, 0, 'sort_free_inner'_7]
		newatom      [7, 0, 'free'_3]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'free'_3]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 4, 1, 0]
		relink         [6, 2, 1, 3, 0]
		relink         [6, 3, 1, 4, 0]
		newlink        [6, 4, 8, 1, 0]
		relink         [6, 5, 1, 6, 0]
		relink         [6, 6, 1, 7, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 2, 1, 5, 0]
		relink         [9, 0, 5, 0, 0]
		relink         [9, 1, 5, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'sort_free_inner'_8]
		deref        [4, 1, 2, 2]
		func           [4, '.'_3]
		deref        [5, 4, 0, 2]
		func           [5, 'free'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'free'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'descending'_1]
		commit         ["_sort", 0]
		removeatom     [1, 0, 'sort_free_inner'_8]
		removeatom     [2, 0, 'descending'_1]
		removeatom     [3, 0, 'free'_3]
		removeatom     [5, 0, 'free'_3]
		removeatom     [4, 0, '.'_3]
		newatom      [6, 0, 'sort_free'_4]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'free'_3]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'free'_3]
		unify          [1, 3, 1, 4, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 1, 5, 0]
		relink         [6, 2, 1, 6, 0]
		relink         [6, 3, 1, 7, 0]
		newlink        [7, 0, 8, 2, 0]
		newlink        [7, 1, 9, 2, 0]
		relink         [8, 0, 5, 0, 0]
		relink         [8, 1, 5, 1, 0]
		newlink        [9, 0, 10, 2, 0]
		relink         [9, 1, 4, 1, 0]
		relink         [10, 0, 3, 0, 0]
		relink         [10, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'get_depending_order'_5]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_5]
		newatom      [2, 0, 'get_depending_order'_6]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		relink         [2, 4, 1, 3, 0]
		relink         [2, 5, 1, 4, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'get_depending_order'_6]
		derefatom    [4, 1, 2]
		isstring       [4]
		isunary        [4]
		getfunc      [6, 4]
		derefatom    [3, 1, 1]
		isstring       [3]
		isunary        [3]
		getfunc      [5, 3]
		neqfunc        [5, 6]
		derefatom    [2, 1, 0]
		isint          [2]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [7, 0, 3]
		copyatom     [8, 0, 4]
		newatom      [9, 0, 'nothing'_1]
		relink         [9, 0, 1, 5, 0]
		relink         [7, 0, 1, 3, 0]
		relink         [8, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'get_depending_order'_6]
		derefatom    [4, 1, 2]
		isstring       [4]
		derefatom    [3, 1, 1]
		isstring       [3]
		samefunc       [4, 3]
		deref        [2, 1, 0, 0]
		func           [2, 0_1]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 0_1]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [5, 0, 3]
		copyatom     [6, 0, 4]
		newatom      [7, 0, 'nothing'_1]
		relink         [7, 0, 1, 5, 0]
		relink         [5, 0, 1, 3, 0]
		relink         [6, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'get_depending_order'_6]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [2, 0_1]
		ilt            [5, 2]
		derefatom    [4, 1, 2]
		isstring       [4]
		derefatom    [3, 1, 1]
		isstring       [3]
		samefunc       [4, 3]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [5, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [6, 0, 3]
		copyatom     [7, 0, 4]
		newatom      [8, 0, 'ascending'_1]
		relink         [8, 0, 1, 5, 0]
		relink         [6, 0, 1, 3, 0]
		relink         [7, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'get_depending_order'_6]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [2, 0_1]
		igt            [5, 2]
		derefatom    [4, 1, 2]
		isstring       [4]
		derefatom    [3, 1, 1]
		isstring       [3]
		samefunc       [4, 3]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [5, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [6, 0, 3]
		copyatom     [7, 0, 4]
		newatom      [8, 0, 'descending'_1]
		relink         [8, 0, 1, 5, 0]
		relink         [7, 0, 1, 4, 0]
		relink         [6, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [5]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_depending_order'_6]
		deref        [2, 1, 2, 1]
		func           [2, 'obj'_2]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'obj'_2]
		newatom      [3, 0, 'get_depending_order'_6]
		newatom      [4, 0, 'obj'_2]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 2, 0, 0]
		relink         [3, 3, 1, 3, 0]
		newlink        [3, 4, 4, 0, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 1, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'get_depending_order'_6]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [3, 1_1]
		iadd         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		deref        [2, 1, 2, 1]
		func           [2, 'deref'_2]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'deref'_2]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		newatom      [9, 0, 'get_depending_order'_6]
		newatom      [10, 0, 'deref'_2]
		newlink        [9, 0, 8, 0, 0]
		relink         [9, 1, 1, 1, 0]
		relink         [9, 2, 2, 0, 0]
		relink         [9, 3, 1, 3, 0]
		newlink        [9, 4, 10, 0, 0]
		relink         [9, 5, 1, 5, 0]
		relink         [10, 1, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_depending_order'_6]
		deref        [2, 1, 1, 1]
		func           [2, 'obj'_2]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'obj'_2]
		newatom      [3, 0, 'get_depending_order'_6]
		newatom      [4, 0, 'obj'_2]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 2, 0, 0]
		relink         [3, 2, 1, 2, 0]
		newlink        [3, 3, 4, 0, 0]
		relink         [3, 4, 1, 4, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 1, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'get_depending_order'_6]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [3, 1_1]
		isub         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		deref        [2, 1, 1, 1]
		func           [2, 'deref'_2]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'deref'_2]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		newatom      [9, 0, 'get_depending_order'_6]
		newatom      [10, 0, 'deref'_2]
		newlink        [9, 0, 8, 0, 0]
		relink         [9, 1, 2, 0, 0]
		relink         [9, 2, 1, 2, 0]
		newlink        [9, 3, 10, 0, 0]
		relink         [9, 4, 1, 4, 0]
		relink         [9, 5, 1, 5, 0]
		relink         [10, 1, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [7]
		freeatom       [5]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_depending_order'_6]
		deref        [2, 1, 1, 2]
		func           [2, 'coerce'_3]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'coerce'_3]
		newatom      [3, 0, 'get_depending_order'_6]
		newatom      [4, 0, 'coerce'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 2, 0, 0]
		relink         [3, 2, 1, 2, 0]
		newlink        [3, 3, 4, 0, 0]
		relink         [3, 4, 1, 4, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_depending_order'_6]
		deref        [2, 1, 2, 2]
		func           [2, 'coerce'_3]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'coerce'_3]
		newatom      [3, 0, 'get_depending_order'_6]
		newatom      [4, 0, 'coerce'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 2, 0, 0]
		relink         [3, 3, 1, 3, 0]
		newlink        [3, 4, 4, 0, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_depending_order'_6]
		deref        [2, 1, 1, 2]
		func           [2, 'member'_3]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'member'_3]
		newatom      [3, 0, 'get_depending_order'_6]
		newatom      [4, 0, 'member'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 2, 0, 0]
		relink         [3, 2, 1, 2, 0]
		newlink        [3, 3, 4, 0, 0]
		relink         [3, 4, 1, 4, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'get_depending_order'_6]
		deref        [2, 1, 2, 2]
		func           [2, 'member'_3]
		commit         ["_Rget", 0]
		removeatom     [1, 0, 'get_depending_order'_6]
		removeatom     [2, 0, 'member'_3]
		newatom      [3, 0, 'get_depending_order'_6]
		newatom      [4, 0, 'member'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 2, 0, 0]
		relink         [3, 3, 1, 3, 0]
		newlink        [3, 4, 4, 0, 0]
		relink         [3, 5, 1, 5, 0]
		relink         [4, 1, 2, 1, 0]
		relink         [4, 2, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'concat_scopes'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'concat_scopes'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'concat_scopes'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'scope'_4]
		commit         ["_Rcon", 0]
		removeatom     [1, 0, 'concat_scopes'_2]
		removeatom     [2, 0, 'scope'_4]
		unify          [1, 1, 2, 0, 0]
		newatom      [3, 0, 'concat_scopes'_2]
		relink         [3, 0, 2, 2, 0]
		relink         [3, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'introduce_parallelism'_2]
		findatom     [2, 0, 'parallelism'_1]
		deref        [3, 2, 0, 0]
		func           [3, 'false'_1]
		commit         ["_Rint", 0]
		removeatom     [1, 0, 'introduce_parallelism'_2]
		removeatom     [2, 0, 'parallelism'_1]
		removeatom     [3, 0, 'false'_1]
		unify          [1, 1, 1, 0, 0]
		newatom      [4, 0, 'parallelism'_1]
		newatom      [5, 0, 'false'_1]
		newlink        [4, 0, 5, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'introduce_parallelism'_2]
		findatom     [2, 0, 'parallelism'_1]
		deref        [3, 2, 0, 0]
		func           [3, 'true'_1]
		commit         ["_Rint", 0]
		removeatom     [1, 0, 'introduce_parallelism'_2]
		removeatom     [2, 0, 'parallelism'_1]
		removeatom     [3, 0, 'true'_1]
		newatom      [4, 0, 'parallelism'_1]
		newatom      [5, 0, 'true'_1]
		newatom      [6, 0, 'filter_invoke'_3]
		newatom      [7, 0, 'list'.'count'_3]
		newatom      [8, 0, 'introduce_parallelism_stmts'_4]
		newlink        [4, 0, 5, 0, 0]
		relink         [6, 0, 1, 0, 0]
		newlink        [6, 1, 7, 0, 0]
		newlink        [6, 2, 8, 2, 0]
		newlink        [7, 1, 8, 1, 0]
		newlink        [7, 2, 8, 0, 0]
		relink         [8, 3, 1, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'introduce_parallelism_stmts'_4]
		deref        [3, 1, 1, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 0, 0]
		func           [2, 0_1]
		commit         ["_Rint", 0]
		removeatom     [1, 0, 'introduce_parallelism_stmts'_4]
		removeatom     [3, 0, '[]'_1]
		removeatom     [2, 0, 0_1]
		unify          [1, 3, 1, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'introduce_parallelism_stmts'_4]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [5, 3, 1, 0]
		func           [5, '[]'_1]
		deref        [4, 3, 0, 2]
		func           [4, 'invoke'_3]
		deref        [2, 1, 0, 0]
		func           [2, 1_1]
		commit         ["_Rint", 0]
		removeatom     [1, 0, 'introduce_parallelism_stmts'_4]
		removeatom     [4, 0, 'invoke'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [5, 0, '[]'_1]
		removeatom     [2, 0, 1_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'invoke'_3]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 1, 2, 0]
		relink         [6, 2, 1, 3, 0]
		relink         [7, 0, 4, 0, 0]
		relink         [7, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [4]
		freeatom       [3]
		freeatom       [5]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 56]
		findatom     [1, 0, 'introduce_parallelism_stmts'_4]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [4, 1_1]
		igt            [6, 4]
		allocatom    [5, 1_1]
		isub         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_Rint", 0]
		removeatom     [1, 0, 'introduce_parallelism_stmts'_4]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		copyatom     [13, 0, 6]
		copyatom     [14, 0, 6]
		copyatom     [15, 0, 6]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'declare'_4]
		newatom      [18, 0, "pthread_t"_1]
		newatom      [19, 0, 'string'.'concat'_3]
		newatom      [20, 0, "th"_1]
		newatom      [21, 0, 'string'.'from'_2]
		newatom      [22, 0, 'none'_1]
		newatom      [23, 0, '.'_3]
		newatom      [24, 0, 'declare'_4]
		newatom      [25, 0, 'array_type'_2]
		newatom      [26, 0, 'pointer_type'_2]
		newatom      [27, 0, "port"_1]
		newatom      [28, 0, 'string'.'concat'_3]
		newatom      [29, 0, "fargs"_1]
		newatom      [30, 0, 'string'.'from'_2]
		newatom      [31, 0, 'init_list'_2]
		newatom      [32, 0, '.'_3]
		newatom      [33, 0, 'invoke'_3]
		newatom      [34, 0, "pthread_create"_1]
		newatom      [35, 0, '.'_3]
		newatom      [36, 0, 'ref'_2]
		newatom      [37, 0, 'string'.'concat'_3]
		newatom      [38, 0, "th"_1]
		newatom      [39, 0, 'string'.'from'_2]
		newatom      [40, 0, '.'_3]
		newatom      [41, 0, 'none'_1]
		newatom      [42, 0, '.'_3]
		newatom      [43, 0, 'string'.'concat'_3]
		newatom      [44, 0, "launch_"_1]
		newatom      [45, 0, '.'_3]
		newatom      [46, 0, 'string'.'concat'_3]
		newatom      [47, 0, "fargs"_1]
		newatom      [48, 0, 'string'.'from'_2]
		newatom      [49, 0, '[]'_1]
		newatom      [50, 0, '.'_3]
		newatom      [51, 0, 'thread_join'_2]
		newatom      [52, 0, 'string'.'concat'_3]
		newatom      [53, 0, "th"_1]
		newatom      [54, 0, 'string'.'from'_2]
		newatom      [55, 0, 'introduce_parallelism_stmts'_4]
		newlink        [16, 0, 17, 3, 0]
		newlink        [16, 1, 23, 2, 0]
		relink         [16, 2, 1, 3, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [17, 2, 22, 0, 0]
		newlink        [19, 0, 20, 0, 0]
		newlink        [19, 1, 21, 1, 0]
		newlink        [21, 0, 11, 0, 0]
		newlink        [23, 0, 24, 3, 0]
		newlink        [23, 1, 32, 2, 0]
		newlink        [24, 0, 25, 1, 0]
		newlink        [24, 1, 28, 2, 0]
		newlink        [24, 2, 31, 1, 0]
		newlink        [25, 0, 26, 1, 0]
		newlink        [26, 0, 27, 0, 0]
		newlink        [28, 0, 29, 0, 0]
		newlink        [28, 1, 30, 1, 0]
		newlink        [30, 0, 12, 0, 0]
		relink         [31, 0, 3, 1, 0]
		newlink        [32, 0, 33, 2, 0]
		newlink        [32, 1, 50, 2, 0]
		newlink        [33, 0, 34, 0, 0]
		newlink        [33, 1, 35, 2, 0]
		newlink        [35, 0, 36, 1, 0]
		newlink        [35, 1, 40, 2, 0]
		newlink        [36, 0, 37, 2, 0]
		newlink        [37, 0, 38, 0, 0]
		newlink        [37, 1, 39, 1, 0]
		newlink        [39, 0, 13, 0, 0]
		newlink        [40, 0, 41, 0, 0]
		newlink        [40, 1, 42, 2, 0]
		newlink        [42, 0, 43, 2, 0]
		newlink        [42, 1, 45, 2, 0]
		newlink        [43, 0, 44, 0, 0]
		relink         [43, 1, 3, 0, 0]
		newlink        [45, 0, 46, 2, 0]
		newlink        [45, 1, 49, 0, 0]
		newlink        [46, 0, 47, 0, 0]
		newlink        [46, 1, 48, 1, 0]
		newlink        [48, 0, 14, 0, 0]
		newlink        [50, 0, 51, 1, 0]
		newlink        [50, 1, 55, 3, 0]
		newlink        [51, 0, 52, 2, 0]
		newlink        [52, 0, 53, 0, 0]
		newlink        [52, 1, 54, 1, 0]
		newlink        [54, 0, 15, 0, 0]
		newlink        [55, 0, 10, 0, 0]
		relink         [55, 1, 2, 1, 0]
		relink         [55, 2, 1, 2, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [9]
		freeatom       [5]
		freeatom       [7]
		freeatom       [6]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'translate_alithmetic_stmts'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'translate_alithmetic_stmts'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [5, 0, 'translate_alithmetic_stmts1'_4]
		newatom      [6, 0, 'is_binary_int_operator'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'symbol'_2]
		newatom      [9, 0, 'translate_alithmetic_stmts'_3]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 2, 0]
		newlink        [5, 2, 9, 2, 0]
		relink         [5, 3, 1, 2, 0]
		relink         [6, 0, 4, 0, 0]
		newlink        [6, 1, 8, 0, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [7, 1, 3, 1, 0]
		relink         [9, 0, 2, 1, 0]
		relink         [9, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 43]
	--memmatch:
		spec           [1, 22]
		findatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 2]
		func           [7, '.'_3]
		deref        [11, 7, 1, 0]
		func           [11, '[]'_1]
		deref        [10, 7, 0, 3]
		func           [10, 'process_context'_4]
		deref        [13, 10, 2, 0]
		func           [13, 'none'_1]
		deref        [12, 10, 1, 0]
		func           [12, "int"_1]
		deref        [6, 5, 0, 3]
		func           [6, 'process_context'_4]
		deref        [9, 6, 2, 0]
		func           [9, 'none'_1]
		deref        [8, 6, 1, 0]
		func           [8, "int"_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		removeatom     [2, 0, 'true'_1]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [6, 0, 'process_context'_4]
		removeatom     [9, 0, 'none'_1]
		removeatom     [10, 0, 'process_context'_4]
		removeatom     [13, 0, 'none'_1]
		removeatom     [5, 0, '.'_3]
		removeatom     [8, 0, "int"_1]
		removeatom     [7, 0, '.'_3]
		removeatom     [12, 0, "int"_1]
		removeatom     [11, 0, '[]'_1]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'compare'_4]
		newatom      [16, 0, 'deref'_2]
		newatom      [17, 0, 'string'.'concat'_3]
		newatom      [18, 0, "p"_1]
		newatom      [19, 0, 'deref'_2]
		newatom      [20, 0, 'string'.'concat'_3]
		newatom      [21, 0, "p"_1]
		newlink        [14, 0, 15, 3, 0]
		relink         [14, 1, 1, 2, 0]
		relink         [14, 2, 1, 3, 0]
		relink         [15, 0, 4, 0, 0]
		newlink        [15, 1, 16, 1, 0]
		newlink        [15, 2, 19, 1, 0]
		newlink        [16, 0, 17, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		relink         [17, 1, 6, 0, 0]
		newlink        [19, 0, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		relink         [20, 1, 10, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [9]
		freeatom       [10]
		freeatom       [13]
		freeatom       [5]
		freeatom       [8]
		freeatom       [7]
		freeatom       [12]
		freeatom       [11]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 37]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 2]
		func           [7, '.'_3]
		deref        [9, 7, 1, 0]
		func           [9, '[]'_1]
		deref        [8, 7, 0, 3]
		func           [8, 'process_context'_4]
		deref        [11, 8, 2, 0]
		func           [11, 'none'_1]
		deref        [10, 8, 1, 0]
		func           [10, "int"_1]
		deref        [6, 5, 0, 1]
		func           [6, 'atom'_2]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		removeatom     [2, 0, 'true'_1]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [6, 0, 'atom'_2]
		removeatom     [8, 0, 'process_context'_4]
		removeatom     [11, 0, 'none'_1]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '.'_3]
		removeatom     [10, 0, "int"_1]
		removeatom     [9, 0, '[]'_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'compare'_4]
		newatom      [14, 0, 'deref'_2]
		newatom      [15, 0, 'string'.'concat'_3]
		newatom      [16, 0, "p"_1]
		newlink        [12, 0, 13, 3, 0]
		relink         [12, 1, 1, 2, 0]
		relink         [12, 2, 1, 3, 0]
		relink         [13, 0, 4, 0, 0]
		relink         [13, 1, 6, 0, 0]
		newlink        [13, 2, 14, 1, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		relink         [15, 1, 8, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [8]
		freeatom       [11]
		freeatom       [5]
		freeatom       [7]
		freeatom       [10]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 37]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 2]
		func           [7, '.'_3]
		deref        [11, 7, 1, 0]
		func           [11, '[]'_1]
		deref        [10, 7, 0, 1]
		func           [10, 'atom'_2]
		deref        [6, 5, 0, 3]
		func           [6, 'process_context'_4]
		deref        [9, 6, 2, 0]
		func           [9, 'none'_1]
		deref        [8, 6, 1, 0]
		func           [8, "int"_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		removeatom     [2, 0, 'true'_1]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [6, 0, 'process_context'_4]
		removeatom     [9, 0, 'none'_1]
		removeatom     [10, 0, 'atom'_2]
		removeatom     [5, 0, '.'_3]
		removeatom     [8, 0, "int"_1]
		removeatom     [7, 0, '.'_3]
		removeatom     [11, 0, '[]'_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'compare'_4]
		newatom      [14, 0, 'deref'_2]
		newatom      [15, 0, 'string'.'concat'_3]
		newatom      [16, 0, "p"_1]
		newlink        [12, 0, 13, 3, 0]
		relink         [12, 1, 1, 2, 0]
		relink         [12, 2, 1, 3, 0]
		relink         [13, 0, 4, 0, 0]
		newlink        [13, 1, 14, 1, 0]
		relink         [13, 2, 10, 0, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		relink         [15, 1, 6, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [9]
		freeatom       [10]
		freeatom       [5]
		freeatom       [8]
		freeatom       [7]
		freeatom       [11]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts1'_4]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		newatom      [5, 0, 'translate_alithmetic_stmts2'_4]
		newatom      [6, 0, 'is_alithmetic_operator'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'symbol'_2]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 7, 2, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [5, 3, 1, 3, 0]
		relink         [6, 0, 4, 0, 0]
		newlink        [6, 1, 8, 0, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [7, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'translate_alithmetic_stmts2'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts2'_4]
		removeatom     [2, 0, 'true'_1]
		removeatom     [3, 0, 'apply'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'translate_alithmetic_args'_2]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 2, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [6, 0, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'translate_alithmetic_stmts2'_4]
		deref        [3, 1, 1, 2]
		func           [3, 'apply'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_stmts2'_4]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, 'apply'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 2, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'translate_alithmetic_args'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_args'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'translate_alithmetic_args'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		deref        [4, 3, 0, 1]
		func           [4, 'number'_2]
		deref        [5, 4, 0, 1]
		func           [5, 'int'_2]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_args'_2]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [4, 0, 'number'_2]
		removeatom     [5, 0, 'int'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'number'_2]
		newatom      [8, 0, 'int'_2]
		newatom      [9, 0, 'translate_alithmetic_args'_2]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 9, 1, 0]
		relink         [6, 2, 1, 1, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [8, 0, 5, 0, 0]
		relink         [9, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'translate_alithmetic_args'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'process_context'_4]
		deref        [5, 3, 2, 0]
		func           [5, 'none'_1]
		deref        [4, 3, 1, 0]
		func           [4, "int"_1]
		commit         ["_Rtra", 0]
		removeatom     [1, 0, 'translate_alithmetic_args'_2]
		removeatom     [3, 0, 'process_context'_4]
		removeatom     [5, 0, 'none'_1]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, "int"_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'deref'_2]
		newatom      [8, 0, 'string'.'concat'_3]
		newatom      [9, 0, "p"_1]
		newatom      [10, 0, 'translate_alithmetic_args'_2]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 10, 1, 0]
		relink         [6, 2, 1, 1, 0]
		newlink        [7, 0, 8, 2, 0]
		newlink        [8, 0, 9, 0, 0]
		relink         [8, 1, 3, 0, 0]
		relink         [10, 0, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [5]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'is_alithmetic_operator'_3]
		deref        [2, 1, 0, 0]
		func           [2, "+"_1]
		commit         ["_Ris_", 0]
		removeatom     [1, 0, 'is_alithmetic_operator'_3]
		removeatom     [2, 0, "+"_1]
		newatom      [3, 0, 'true'_1]
		newatom      [4, 0, "+"_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'is_alithmetic_operator'_3]
		deref        [2, 1, 0, 0]
		func           [2, "-"_1]
		commit         ["_Ris_", 0]
		removeatom     [1, 0, 'is_alithmetic_operator'_3]
		removeatom     [2, 0, "-"_1]
		newatom      [3, 0, 'true'_1]
		newatom      [4, 0, "-"_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'is_alithmetic_operator'_3]
		deref        [2, 1, 0, 0]
		func           [2, "*"_1]
		commit         ["_Ris_", 0]
		removeatom     [1, 0, 'is_alithmetic_operator'_3]
		removeatom     [2, 0, "*"_1]
		newatom      [3, 0, 'true'_1]
		newatom      [4, 0, "*"_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'is_alithmetic_operator'_3]
		deref        [2, 1, 0, 0]
		func           [2, "/"_1]
		commit         ["_Ris_", 0]
		removeatom     [1, 0, 'is_alithmetic_operator'_3]
		removeatom     [2, 0, "/"_1]
		newatom      [3, 0, 'true'_1]
		newatom      [4, 0, "/"_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_connect'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_connect'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 75]
		findatom     [1, 0, 'expand_connect'_2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [7, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'connect'_3]
		getlink      [6, 3, 1]
		getlink      [5, 3, 0]
		newlist      [8]
		addtolist      [8, 5]
		newlist      [9]
		addtolist      [9, 4]
		addtolist      [9, 6]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 6]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 7]
		isground     [13, 11, 12]
		commit         ["_Rexp", 0]
		newlist      [14]
		getlink      [15, 3, 0]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 3, 1]
		addtolist      [16, 17]
		removeatom     [1, 0, 'expand_connect'_2]
		removeatom     [3, 0, 'connect'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [14, 0]
		removeground   [16, 0]
		getlink      [18, 3, 0]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 3, 1]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 3, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 3, 1]
		addtolist      [24, 25]
		copyground   [26, 22, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		copyground   [29, 22, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyground   [32, 24, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		copyground   [35, 24, 0]
		getfromlist  [36, 35, 0]
		getfromlist  [37, 35, 1]
		newatom      [38, 0, '.'_3]
		newatom      [39, 0, 'assign'_3]
		newatom      [40, 0, 'deref'_2]
		newatom      [41, 0, 'portref'_2]
		newatom      [42, 0, '.'_3]
		newatom      [43, 0, 'assign'_3]
		newatom      [44, 0, 'deref'_2]
		newatom      [45, 0, 'portref'_2]
		newatom      [46, 0, 'expand_connect'_2]
		alloclink    [47, 46, 0]
		alloclink    [48, 45, 0]
		alloclink    [49, 45, 1]
		alloclink    [50, 44, 0]
		alloclink    [51, 43, 1]
		alloclink    [52, 44, 1]
		alloclink    [53, 43, 0]
		alloclink    [54, 46, 1]
		alloclink    [55, 42, 1]
		alloclink    [56, 43, 2]
		alloclink    [57, 42, 0]
		alloclink    [58, 41, 0]
		alloclink    [59, 41, 1]
		alloclink    [60, 40, 0]
		alloclink    [61, 39, 1]
		alloclink    [62, 40, 1]
		alloclink    [63, 39, 0]
		alloclink    [64, 38, 2]
		alloclink    [65, 42, 2]
		alloclink    [66, 38, 1]
		alloclink    [67, 39, 2]
		alloclink    [68, 38, 0]
		getfromlist  [69, 36, 0]
		getfromlist  [70, 30, 0]
		getfromlist  [71, 27, 0]
		getfromlist  [72, 33, 0]
		unifylinks     [68, 67, 0]
		unifylinks     [66, 65, 0]
		getlink      [73, 1, 1]
		unifylinks     [64, 73, 0]
		unifylinks     [63, 62, 0]
		unifylinks     [61, 72, 0]
		unifylinks     [60, 59, 0]
		unifylinks     [58, 71, 0]
		unifylinks     [57, 56, 0]
		unifylinks     [55, 54, 0]
		unifylinks     [53, 52, 0]
		unifylinks     [51, 70, 0]
		unifylinks     [50, 49, 0]
		unifylinks     [48, 69, 0]
		getlink      [74, 2, 1]
		unifylinks     [47, 74, 0]
		deleteconnectors[19, 28]
		deleteconnectors[19, 31]
		deleteconnectors[21, 34]
		deleteconnectors[21, 37]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [22]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'expand_connect'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_connect'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'expand_connect'_2]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 1]
		func           [2, 'ref'_2]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'ref'_2]
		newatom      [3, 0, 'ref'_2]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 1]
		func           [2, 'deref'_2]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'deref'_2]
		newatom      [3, 0, 'deref'_2]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 1]
		func           [2, 'obj'_2]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'obj'_2]
		newatom      [3, 0, 'obj'_2]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 1]
		func           [2, 'portref'_2]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'portref'_2]
		newatom      [3, 0, 'portref'_2]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 2]
		func           [2, 'coerce'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'coerce'_3]
		newatom      [3, 0, 'coerce'_3]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 2]
		func           [2, 'member'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'member'_3]
		newatom      [3, 0, 'member'_3]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 2]
		func           [2, 'link'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'link'_3]
		newatom      [3, 0, 'link'_3]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newatom      [5, 0, 'eliminate_variable_expr'_4]
		newlink        [3, 0, 4, 3, 0]
		newlink        [3, 1, 5, 3, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		newlink        [4, 2, 5, 0, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 46]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		derefatom    [10, 1, 1]
		isstring       [10]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 3]
		func           [2, 'declare'_4]
		derefatom    [11, 2, 1]
		samefunc       [10, 11]
		derefatom    [9, 2, 0]
		isstring       [9]
		getlink      [8, 2, 2]
		getlink      [7, 2, 1]
		getlink      [6, 2, 0]
		newlist      [12]
		addtolist      [12, 8]
		newlist      [13]
		addtolist      [13, 3]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		isground     [14, 12, 13]
		commit         ["_Reli", 0]
		newlist      [15]
		getlink      [16, 2, 2]
		addtolist      [15, 16]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'declare'_4]
		removeground   [15, 0]
		removeatom     [9, 0]
		removeatom     [10, 0]
		removeatom     [11, 0]
		getlink      [17, 2, 2]
		insertconnectorsinnull[18, [17]]
		newlist      [19]
		getlink      [20, 2, 2]
		addtolist      [19, 20]
		copyground   [21, 19, 0]
		getfromlist  [22, 21, 0]
		getfromlist  [23, 21, 1]
		copyground   [24, 19, 0]
		getfromlist  [25, 24, 0]
		getfromlist  [26, 24, 1]
		copyatom     [27, 0, 9]
		copyatom     [28, 0, 9]
		copyatom     [29, 0, 11]
		newatom      [30, 0, 'coerce'_3]
		newatom      [31, 0, 'declare'_4]
		alloclink    [32, 31, 3]
		alloclink    [33, 31, 2]
		alloclink    [34, 29, 0]
		alloclink    [35, 31, 1]
		alloclink    [36, 28, 0]
		alloclink    [37, 31, 0]
		alloclink    [38, 30, 2]
		alloclink    [39, 27, 0]
		alloclink    [40, 30, 1]
		alloclink    [41, 30, 0]
		getfromlist  [42, 25, 0]
		getfromlist  [43, 22, 0]
		unifylinks     [41, 43, 0]
		unifylinks     [40, 39, 0]
		getlink      [44, 1, 3]
		unifylinks     [38, 44, 0]
		unifylinks     [37, 36, 0]
		unifylinks     [35, 34, 0]
		unifylinks     [33, 42, 0]
		getlink      [45, 1, 2]
		unifylinks     [32, 45, 0]
		deleteconnectors[18, 23]
		deleteconnectors[18, 26]
		freeatom       [1]
		freeatom       [2]
		freeground     [19]
		freeatom       [9]
		freeatom       [10]
		freeatom       [11]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		derefatom    [3, 1, 1]
		isstring       [3]
		isunary        [3]
		getfunc      [5, 3]
		deref        [2, 1, 0, 3]
		func           [2, 'declare'_4]
		derefatom    [4, 2, 1]
		isunary        [4]
		getfunc      [6, 4]
		neqfunc        [5, 6]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'declare'_4]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [7, 0, 3]
		copyatom     [8, 0, 4]
		newatom      [9, 0, 'declare'_4]
		relink         [9, 0, 2, 0, 0]
		newlink        [9, 1, 8, 0, 0]
		relink         [9, 2, 2, 2, 0]
		relink         [9, 3, 1, 2, 0]
		relink         [7, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 0]
		func           [2, 'none'_1]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'none'_1]
		newatom      [3, 0, 'none'_1]
		unify          [1, 2, 1, 0, 0]
		relink         [3, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'eliminate_variable_expr'_4]
		deref        [2, 1, 1, 1]
		func           [2, 'number'_2]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_expr'_4]
		removeatom     [2, 0, 'number'_2]
		newatom      [3, 0, 'number'_2]
		unify          [1, 2, 1, 0, 0]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 15]
		findatom     [1, 0, 'eliminate_variable'_3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 0]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		newlist      [5]
		addtolist      [5, 3]
		newlist      [6]
		addtolist      [6, 4]
		isground     [7, 5, 6]
		commit         ["_Reli", 0]
		newlist      [8]
		getlink      [9, 1, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [2, 0, '[]'_1]
		removeground   [8, 0]
		getlink      [10, 1, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 1, 0]
		addtolist      [12, 13]
		newatom      [14, 0, '[]'_1]
		relink         [14, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'match'_3]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 0, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'locate'_4]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 0, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'alloc'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'alloc'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'alloc'_3]
		newatom      [6, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'free'_3]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 0, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'declare'_4]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		newlink        [5, 2, 6, 3, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 2, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'set_tag'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'set_tag'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'set_tag'_3]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 0, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'invoke'_3]
		newatom      [6, 0, 'eliminate_variable_in_args'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 3, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 1, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'assign'_3]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable_expr'_4]
		newatom      [8, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 8, 2, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 3, 0]
		newlink        [5, 1, 7, 3, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 0, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 3, 1, 0]
		newlink        [7, 2, 8, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'compare'_4]
		newatom      [6, 0, 'eliminate_variable_expr'_4]
		newatom      [7, 0, 'eliminate_variable_expr'_4]
		newatom      [8, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 8, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 3, 0]
		newlink        [5, 2, 7, 3, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 1, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 3, 2, 0]
		newlink        [7, 2, 8, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'eliminate_variable'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'eliminate_variable_in_args'_4]
		newatom      [7, 0, 'eliminate_variable'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 3, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 3, 1, 0]
		newlink        [6, 2, 7, 0, 0]
		relink         [7, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'eliminate_variable_in_args'_4]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_in_args'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		unify          [1, 2, 1, 0, 0]
		relink         [3, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'eliminate_variable_in_args'_4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variable_in_args'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'eliminate_variable_expr'_4]
		newatom      [5, 0, 'eliminate_variable_in_args'_4]
		newlink        [3, 0, 4, 3, 0]
		newlink        [3, 1, 5, 3, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 0, 0]
		newlink        [4, 2, 5, 0, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'eliminate_variables'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variables'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'eliminate_variables'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variables'_2]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'eliminate_variables'_2]
		newatom      [5, 0, 'eliminate_variable'_3]
		newatom      [6, 0, 'declare'_4]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [5, 0, 6, 3, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [6, 2, 3, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'eliminate_variables'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Reli", 0]
		removeatom     [1, 0, 'eliminate_variables'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'eliminate_variables'_2]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'expand_member_access_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'deref'_2]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access_expr'_2]
		removeatom     [2, 0, 'deref'_2]
		newatom      [3, 0, 'deref'_2]
		newatom      [4, 0, 'expand_member_access_expr'_2]
		newlink        [3, 0, 4, 1, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [4, 0, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'expand_member_access_expr'_2]
		getlink      [6, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'portref'_2]
		deref        [3, 2, 0, 2]
		func           [3, 'coerce'_3]
		deref        [5, 3, 1, 0]
		func           [5, "port"_1]
		deref        [4, 3, 0, 2]
		func           [4, 'link'_3]
		getlink      [8, 4, 1]
		getlink      [7, 4, 0]
		newlist      [9]
		addtolist      [9, 7]
		newlist      [10]
		addtolist      [10, 6]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		commit         ["_Rexp", 0]
		newlist      [12]
		getlink      [13, 4, 0]
		addtolist      [12, 13]
		removeatom     [1, 0, 'expand_member_access_expr'_2]
		removeatom     [2, 0, 'portref'_2]
		removeatom     [3, 0, 'coerce'_3]
		removeatom     [4, 0, 'link'_3]
		removeatom     [5, 0, "port"_1]
		removeground   [12, 0]
		getlink      [14, 4, 0]
		insertconnectorsinnull[15, [14]]
		newlist      [16]
		getlink      [17, 4, 0]
		addtolist      [16, 17]
		unify          [1, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeground     [16]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 2]
		findatom     [1, 0, 'expand_member_access_expr'_2]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access_expr'_2]
		unify          [1, 1, 1, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'match'_3]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'locate'_4]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 7, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'alloc'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'alloc'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'alloc'_3]
		newatom      [6, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'free'_3]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'declare'_4]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 7, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		newlink        [5, 2, 6, 1, 0]
		relink         [6, 0, 3, 2, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'set_tag'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'set_tag'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'set_tag'_3]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'invoke'_3]
		newatom      [6, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'assign'_3]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access_expr'_2]
		newatom      [8, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 8, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 7, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 3, 1, 0]
		relink         [8, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'expand_member_access'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		commit         ["_Rexp", 0]
		removeatom     [1, 0, 'expand_member_access'_2]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'compare'_4]
		newatom      [6, 0, 'expand_member_access_expr'_2]
		newatom      [7, 0, 'expand_member_access_expr'_2]
		newatom      [8, 0, 'expand_member_access'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 8, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 1, 0]
		newlink        [5, 2, 7, 1, 0]
		relink         [6, 0, 3, 1, 0]
		relink         [7, 0, 3, 2, 0]
		relink         [8, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'match'_3]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'locate'_4]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'alloc'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'alloc'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'alloc'_3]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'free'_3]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'declare'_4]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'set_tag'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'set_tag'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'set_tag'_3]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'invoke'_3]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		getlink      [6, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [8, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		getlink      [7, 3, 1]
		deref        [4, 3, 0, 1]
		func           [4, 'deref'_2]
		deref        [5, 4, 0, 0]
		func           [5, 'none'_1]
		newlist      [9]
		addtolist      [9, 7]
		newlist      [10]
		addtolist      [10, 6]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		commit         ["_Rred", 0]
		newlist      [12]
		getlink      [13, 3, 1]
		addtolist      [12, 13]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [4, 0, 'deref'_2]
		removeatom     [5, 0, 'none'_1]
		removeatom     [2, 0, '.'_3]
		removeground   [12, 0]
		getlink      [14, 3, 1]
		insertconnectorsinnull[15, [14]]
		newlist      [16]
		getlink      [17, 3, 1]
		addtolist      [16, 17]
		newatom      [18, 0, 'reduce_null_assignment'_2]
		relink         [18, 0, 2, 1, 0]
		relink         [18, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		freeground     [16]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'deref'_2]
		derefatom    [5, 4, 0]
		isstring       [5]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [4, 0, 'deref'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [6, 0, 5]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'assign'_3]
		newatom      [9, 0, 'deref'_2]
		newatom      [10, 0, 'reduce_null_assignment'_2]
		newlink        [7, 0, 8, 2, 0]
		newlink        [7, 1, 10, 1, 0]
		relink         [7, 2, 1, 1, 0]
		newlink        [8, 0, 9, 1, 0]
		relink         [8, 1, 3, 1, 0]
		newlink        [9, 0, 6, 0, 0]
		relink         [10, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'member'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [4, 0, 'member'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'assign'_3]
		newatom      [7, 0, 'member'_3]
		newatom      [8, 0, 'reduce_null_assignment'_2]
		newlink        [5, 0, 6, 2, 0]
		newlink        [5, 1, 8, 1, 0]
		relink         [5, 2, 1, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 3, 1, 0]
		relink         [7, 0, 4, 0, 0]
		relink         [7, 1, 4, 1, 0]
		relink         [8, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		deref        [4, 3, 0, 1]
		func           [4, 'deref'_2]
		deref        [5, 4, 0, 1]
		func           [5, 'portref'_2]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [4, 0, 'deref'_2]
		removeatom     [5, 0, 'portref'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'assign'_3]
		newatom      [8, 0, 'deref'_2]
		newatom      [9, 0, 'portref'_2]
		newatom      [10, 0, 'reduce_null_assignment'_2]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 10, 1, 0]
		relink         [6, 2, 1, 1, 0]
		newlink        [7, 0, 8, 1, 0]
		relink         [7, 1, 3, 1, 0]
		newlink        [8, 0, 9, 1, 0]
		relink         [9, 0, 5, 0, 0]
		relink         [10, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'reduce_null_assignment'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_null_assignment'_2]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'compare'_4]
		newatom      [6, 0, 'reduce_null_assignment'_2]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'reduce_deref_ref_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'deref'_2]
		deref        [3, 2, 0, 1]
		func           [3, 'ref'_2]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_deref_ref_expr'_2]
		removeatom     [2, 0, 'deref'_2]
		removeatom     [3, 0, 'ref'_2]
		newatom      [4, 0, 'reduce_deref_ref_expr'_2]
		relink         [4, 0, 3, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 2]
		findatom     [1, 0, 'reduce_deref_ref_expr'_2]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_deref_ref_expr'_2]
		unify          [1, 1, 1, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'reduce_deref_ref'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_deref_ref'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'reduce_deref_ref'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_deref_ref'_2]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'assign'_3]
		newatom      [6, 0, 'reduce_deref_ref_expr'_2]
		newatom      [7, 0, 'reduce_deref_ref_expr'_2]
		newatom      [8, 0, 'reduce_deref_ref'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 8, 1, 0]
		relink         [4, 2, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 7, 1, 0]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 3, 1, 0]
		relink         [8, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'reduce_deref_ref'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rred", 0]
		removeatom     [1, 0, 'reduce_deref_ref'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'reduce_deref_ref'_2]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @601                                                                             
Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generator'.'generate_source'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'type_db'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generator'.'generate_source'_3]
		removeatom     [2, 0, 'type_db'_2]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, "struct port { void *obj; struct port *ref; };\ntypedef struct port port;\n"_1]
		newatom      [5, 0, 'generate_source_types'_3]
		newlink        [3, 0, 4, 0, 0]
		newlink        [3, 1, 5, 2, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 1, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_types'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, ""_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'generate_source_types'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, 'generate_source_types'_3]
		newatom      [5, 0, 'generate_source_types'_3]
		newatom      [6, 0, '.'_3]
		newlink        [3, 0, 4, 2, 0]
		newlink        [3, 1, 5, 2, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 2, 0, 0]
		newlink        [4, 1, 6, 0, 0]
		relink         [5, 0, 2, 1, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [6, 2, 1, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 45]
		findatom     [1, 0, 'generate_source_types'_3]
		deref        [2, 1, 0, 3]
		func           [2, 'type'_4]
		derefatom    [3, 2, 0]
		isstring       [3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types'_3]
		removeatom     [2, 0, 'type'_4]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		copyatom     [6, 0, 3]
		copyatom     [7, 0, 3]
		newatom      [8, 0, 'string'.'concat'_2]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, "struct "_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, " {\n"_1]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, 1_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, "int _tag;\n"_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, 'generate_source_types_roots'_3]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, 'tabs'_2]
		newatom      [23, 0, 1_1]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, "union {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_types_constructors'_5]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, 1_1]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, "};\n"_1]
		newatom      [33, 0, '.'_3]
		newatom      [34, 0, "};\n"_1]
		newatom      [35, 0, '.'_3]
		newatom      [36, 0, "typedef struct "_1]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, '.'_3]
		newatom      [39, 0, " "_1]
		newatom      [40, 0, '.'_3]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, ";\n"_1]
		newatom      [43, 0, '[]'_1]
		newatom      [44, 0, 'type'_4]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 1, 1, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 2, 0]
		newlink        [11, 0, 4, 0, 0]
		newlink        [11, 1, 12, 2, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [12, 1, 14, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 17, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 20, 2, 0]
		newlink        [19, 1, 21, 2, 0]
		relink         [20, 0, 2, 1, 0]
		newlink        [20, 1, 27, 0, 0]
		newlink        [21, 0, 22, 1, 0]
		newlink        [21, 1, 24, 2, 0]
		newlink        [22, 0, 23, 0, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 4, 0]
		newlink        [26, 1, 28, 2, 0]
		relink         [27, 1, 2, 2, 0]
		newlink        [27, 2, 44, 1, 0]
		newlink        [27, 3, 44, 2, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 31, 2, 0]
		newlink        [29, 0, 30, 0, 0]
		newlink        [31, 0, 32, 0, 0]
		newlink        [31, 1, 33, 2, 0]
		newlink        [33, 0, 34, 0, 0]
		newlink        [33, 1, 35, 2, 0]
		newlink        [35, 0, 36, 0, 0]
		newlink        [35, 1, 37, 2, 0]
		newlink        [37, 0, 5, 0, 0]
		newlink        [37, 1, 38, 2, 0]
		newlink        [38, 0, 39, 0, 0]
		newlink        [38, 1, 40, 2, 0]
		newlink        [40, 0, 6, 0, 0]
		newlink        [40, 1, 41, 2, 0]
		newlink        [41, 0, 42, 0, 0]
		newlink        [41, 1, 43, 0, 0]
		newlink        [44, 0, 7, 0, 0]
		relink         [44, 3, 1, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_types_roots'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_roots'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, ""_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'generate_source_types_roots'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [4, 3, 1]
		isstring       [4]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_roots'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		newatom      [7, 0, 'string'.'concat'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'tabs'_2]
		newatom      [10, 0, 1_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, "port "_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, ";\n"_1]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'generate_source_types_roots'_3]
		newatom      [18, 0, '[]'_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, 'variable'_3]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 2, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [8, 1, 11, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [13, 0, 5, 0, 0]
		newlink        [13, 1, 14, 2, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [16, 0, 17, 2, 0]
		newlink        [16, 1, 18, 0, 0]
		relink         [17, 0, 2, 1, 0]
		newlink        [17, 1, 19, 1, 0]
		newlink        [19, 0, 20, 2, 0]
		relink         [19, 2, 1, 1, 0]
		relink         [20, 0, 3, 0, 0]
		newlink        [20, 1, 6, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_types_constructors'_5]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_constructors'_5]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, ""_1]
		newatom      [4, 0, '[]'_1]
		unify          [1, 2, 1, 0, 0]
		relink         [3, 0, 1, 4, 0]
		relink         [4, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 28]
		findatom     [1, 0, 'generate_source_types_constructors'_5]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		derefatom    [4, 3, 0]
		isstring       [4]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_constructors'_5]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		newatom      [7, 0, 'string'.'concat'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'tabs'_2]
		newatom      [10, 0, 2_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, "struct {\n"_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'generate_source_types_constructor'_7]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'tabs'_2]
		newatom      [17, 0, 2_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, "} /* "_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, " */ ;\n"_1]
		newatom      [23, 0, '.'_3]
		newatom      [24, 0, 'generate_source_types_constructors'_5]
		newatom      [25, 0, '[]'_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'constructor'_4]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 4, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [8, 1, 11, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [13, 0, 14, 6, 0]
		newlink        [13, 1, 15, 2, 0]
		relink         [14, 0, 1, 0, 0]
		relink         [14, 1, 3, 1, 0]
		relink         [14, 2, 3, 2, 0]
		newlink        [14, 3, 24, 0, 0]
		newlink        [14, 4, 27, 1, 0]
		newlink        [14, 5, 27, 2, 0]
		newlink        [15, 0, 16, 1, 0]
		newlink        [15, 1, 18, 2, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [20, 0, 5, 0, 0]
		newlink        [20, 1, 21, 2, 0]
		newlink        [21, 0, 22, 0, 0]
		newlink        [21, 1, 23, 2, 0]
		newlink        [23, 0, 24, 4, 0]
		newlink        [23, 1, 25, 0, 0]
		relink         [24, 1, 2, 1, 0]
		relink         [24, 2, 1, 2, 0]
		newlink        [24, 3, 26, 1, 0]
		newlink        [26, 0, 27, 3, 0]
		relink         [26, 2, 1, 3, 0]
		newlink        [27, 0, 6, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_types_constructor'_7]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_constructor'_7]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, ""_1]
		newatom      [4, 0, '[]'_1]
		unify          [1, 5, 1, 2, 0]
		unify          [1, 3, 1, 0, 0]
		relink         [3, 0, 1, 6, 0]
		relink         [4, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'generate_source_types_constructor'_7]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [4, 3, 1]
		isstring       [4]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_constructor'_7]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		newatom      [6, 0, 'generate_source_types_constructor'_8]
		newatom      [7, 0, 'has_var'_5]
		newatom      [8, 0, 'variable'_3]
		newatom      [9, 0, '.'_3]
		newlink        [6, 0, 7, 4, 0]
		newlink        [6, 1, 7, 3, 0]
		newlink        [6, 2, 9, 2, 0]
		relink         [6, 3, 1, 2, 0]
		relink         [6, 4, 1, 3, 0]
		relink         [6, 5, 1, 4, 0]
		relink         [6, 6, 1, 5, 0]
		relink         [6, 7, 1, 6, 0]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 0, 0]
		newlink        [7, 2, 9, 0, 0]
		relink         [8, 0, 3, 0, 0]
		newlink        [8, 1, 5, 0, 0]
		relink         [9, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 22]
		findatom     [1, 0, 'generate_source_types_constructor'_8]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'variable'_3]
		derefatom    [5, 4, 1]
		isstring       [5]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_constructor'_8]
		removeatom     [2, 0, 'false'_1]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 5]
		newatom      [8, 0, 'string'.'concat'_2]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'tabs'_2]
		newatom      [11, 0, 3_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, "port "_1]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, ";\n"_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'generate_source_types_constructor'_7]
		newatom      [19, 0, '[]'_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'variable'_3]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 1, 1, 7, 0]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [12, 1, 14, 2, 0]
		newlink        [14, 0, 6, 0, 0]
		newlink        [14, 1, 15, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 6, 0]
		newlink        [17, 1, 19, 0, 0]
		relink         [18, 0, 1, 1, 0]
		relink         [18, 1, 3, 1, 0]
		relink         [18, 2, 1, 3, 0]
		relink         [18, 3, 1, 4, 0]
		newlink        [18, 4, 20, 1, 0]
		relink         [18, 5, 1, 6, 0]
		newlink        [20, 0, 21, 2, 0]
		relink         [20, 2, 1, 5, 0]
		relink         [21, 0, 4, 0, 0]
		newlink        [21, 1, 7, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'generate_source_types_constructor'_8]
		deref        [3, 1, 2, 2]
		func           [3, '.'_3]
		deref        [4, 3, 0, 2]
		func           [4, 'variable'_3]
		derefatom    [5, 4, 1]
		isstring       [5]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_types_constructor'_8]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'variable'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [6, 0, 5]
		newatom      [7, 0, 'generate_source_types_constructor'_7]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'variable'_3]
		relink         [7, 0, 1, 1, 0]
		relink         [7, 1, 3, 1, 0]
		relink         [7, 2, 1, 3, 0]
		relink         [7, 3, 1, 4, 0]
		newlink        [7, 4, 8, 1, 0]
		relink         [7, 5, 1, 6, 0]
		relink         [7, 6, 1, 7, 0]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 2, 1, 5, 0]
		relink         [9, 0, 4, 0, 0]
		newlink        [9, 1, 6, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'generator'.'generate_source'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'program'_2]
		deref        [3, 2, 0, 2]
		func           [3, '.'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generator'.'generate_source'_2]
		removeatom     [2, 0, 'program'_2]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, 'string'.'concat'_3]
		newatom      [5, 0, 'generator'.'generate_source'_2]
		newatom      [6, 0, 'generator'.'generate_source'_2]
		newatom      [7, 0, 'program'_2]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [6, 0, 7, 1, 0]
		relink         [7, 0, 3, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "generator"]
		loadmodule     [0, "generator"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generator'.'generate_source'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'program'_2]
		deref        [3, 2, 0, 0]
		func           [3, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generator'.'generate_source'_2]
		removeatom     [2, 0, 'program'_2]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, ""_1]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 25]
		findatom     [1, 0, 'generator'.'generate_source'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'function'_4]
		findatom     [3, 0, 'parallelism'_1]
		deref        [4, 3, 0, 0]
		func           [4, 'false'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generator'.'generate_source'_2]
		removeatom     [2, 0, 'function'_4]
		removeatom     [3, 0, 'parallelism'_1]
		removeatom     [4, 0, 'false'_1]
		newatom      [5, 0, 'string'.'concat'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, "void "_1]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, "("_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'generate_source_sig'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, ")"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, " {\n"_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'generate_source_rules'_3]
		newatom      [19, 0, 1_1]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, "}\n"_1]
		newatom      [22, 0, '[]'_1]
		newatom      [23, 0, 'parallelism'_1]
		newatom      [24, 0, 'false'_1]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 1, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [8, 0, 2, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 2, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 13, 2, 0]
		relink         [12, 0, 2, 1, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [17, 1, 20, 2, 0]
		newlink        [18, 0, 19, 0, 0]
		relink         [18, 1, 2, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 0, 0]
		newlink        [23, 0, 24, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 41]
		findatom     [1, 0, 'generator'.'generate_source'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'function'_4]
		derefatom    [5, 2, 0]
		isstring       [5]
		findatom     [3, 0, 'parallelism'_1]
		deref        [4, 3, 0, 0]
		func           [4, 'true'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generator'.'generate_source'_2]
		removeatom     [2, 0, 'function'_4]
		removeatom     [3, 0, 'parallelism'_1]
		removeatom     [4, 0, 'true'_1]
		removeatom     [5, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 5]
		newatom      [8, 0, 'list'.'count'_3]
		newatom      [9, 0, 'string'.'concat'_2]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, "void "_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, "("_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'generate_source_sig'_2]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, ")"_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, " {\n"_1]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, 'tabs'_2]
		newatom      [23, 0, 1_1]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, "while (1) {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_rules'_3]
		newatom      [28, 0, 2_1]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, 'tabs'_2]
		newatom      [31, 0, 1_1]
		newatom      [32, 0, '.'_3]
		newatom      [33, 0, "}\n"_1]
		newatom      [34, 0, '.'_3]
		newatom      [35, 0, "}\n"_1]
		newatom      [36, 0, '.'_3]
		newatom      [37, 0, 'generate_source_process_call'_3]
		newatom      [38, 0, '[]'_1]
		newatom      [39, 0, 'parallelism'_1]
		newatom      [40, 0, 'true'_1]
		relink         [8, 0, 2, 1, 0]
		newlink        [8, 1, 16, 0, 0]
		newlink        [8, 2, 37, 1, 0]
		newlink        [9, 0, 10, 2, 0]
		relink         [9, 1, 1, 1, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [10, 1, 12, 2, 0]
		newlink        [12, 0, 6, 0, 0]
		newlink        [12, 1, 13, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 16, 1, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 20, 0, 0]
		newlink        [19, 1, 21, 2, 0]
		newlink        [21, 0, 22, 1, 0]
		newlink        [21, 1, 24, 2, 0]
		newlink        [22, 0, 23, 0, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 29, 2, 0]
		newlink        [27, 0, 28, 0, 0]
		relink         [27, 1, 2, 2, 0]
		newlink        [29, 0, 30, 1, 0]
		newlink        [29, 1, 32, 2, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [32, 0, 33, 0, 0]
		newlink        [32, 1, 34, 2, 0]
		newlink        [34, 0, 35, 0, 0]
		newlink        [34, 1, 36, 2, 0]
		newlink        [36, 0, 37, 2, 0]
		newlink        [36, 1, 38, 0, 0]
		newlink        [37, 0, 7, 0, 0]
		newlink        [39, 0, 40, 0, 0]
		loadmodule     [0, "list"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_sig'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_sig'_2]
		newatom      [2, 0, 'generate_source_sig'_3]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'generate_source_sig'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		derefatom    [4, 2, 0]
		isunary        [4]
		deref        [3, 2, 1, 0]
		func           [3, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_sig'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '[]'_1]
		removeatom     [4, 0]
		newatom      [5, 0, 'string'.'concat'_3]
		newatom      [6, 0, "port *arg"_1]
		newatom      [7, 0, 'string'.'from'_2]
		newlink        [5, 0, 6, 0, 0]
		newlink        [5, 1, 7, 1, 0]
		relink         [5, 2, 1, 2, 0]
		relink         [7, 0, 1, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'generate_source_sig'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [4, 1_1]
		iadd         [7, 6, 4]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		derefatom    [5, 2, 0]
		isunary        [5]
		deref        [3, 2, 1, 2]
		func           [3, '.'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_sig'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		newatom      [12, 0, 'string'.'concat'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, "port *arg"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'string'.'from'_2]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, ", "_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, 'generate_source_sig'_3]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, '[]'_1]
		newlink        [12, 0, 13, 2, 0]
		relink         [12, 1, 1, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 16, 1, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [16, 0, 11, 0, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 20, 2, 0]
		newlink        [19, 1, 22, 0, 0]
		newlink        [20, 0, 10, 0, 0]
		newlink        [20, 1, 21, 2, 0]
		relink         [21, 0, 3, 0, 0]
		relink         [21, 1, 3, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [9]
		freeatom       [6]
		freeatom       [4]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 34]
		findatom     [1, 0, 'generate_source_process_call'_3]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_process_call'_3]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		copyatom     [4, 0, 2]
		newatom      [5, 0, 'string'.'concat'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, "void *launch_"_1]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, "(void *args_) {\n"_1]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'tabs'_2]
		newatom      [13, 0, 1_1]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, "port *args = args_;\n"_1]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'tabs'_2]
		newatom      [18, 0, 1_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, "("_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_process_call_args'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ");\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'tabs'_2]
		newatom      [28, 0, 1_1]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, "return NULL;\n"_1]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, "}\n"_1]
		newatom      [33, 0, '[]'_1]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 2, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 8, 2, 0]
		newlink        [8, 0, 3, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 2, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 14, 2, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [16, 0, 17, 1, 0]
		newlink        [16, 1, 19, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [19, 0, 4, 0, 0]
		newlink        [19, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 1, 1, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 1, 0]
		newlink        [26, 1, 29, 2, 0]
		newlink        [27, 0, 28, 0, 0]
		newlink        [29, 0, 30, 0, 0]
		newlink        [29, 1, 31, 2, 0]
		newlink        [31, 0, 32, 0, 0]
		newlink        [31, 1, 33, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_process_call_args'_2]
		deref        [2, 1, 0, 0]
		func           [2, 0_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_process_call_args'_2]
		removeatom     [2, 0, 0_1]
		newatom      [3, 0, ""_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_process_call_args'_2]
		deref        [2, 1, 0, 0]
		func           [2, 1_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_process_call_args'_2]
		removeatom     [2, 0, 1_1]
		newatom      [3, 0, "&args[0]"_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'generate_source_process_call_args'_2]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [2, 1_1]
		igt            [4, 2]
		allocatom    [3, 1_1]
		isub         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_process_call_args'_2]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		copyatom     [9, 0, 7]
		newatom      [10, 0, 'string'.'concat'_2]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'generate_source_process_call_args'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, ", &args["_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'string'.'from'_2]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, "]"_1]
		newatom      [19, 0, '[]'_1]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 1, 1, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [12, 0, 8, 0, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 16, 1, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [16, 0, 9, 0, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [7]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_rules'_3]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_rules'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, ""_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'generate_source_rules'_3]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_rules'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'string'.'concat'_3]
		newatom      [7, 0, 'generate_source_rule'_3]
		newatom      [8, 0, 'generate_source_rules'_3]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [6, 2, 1, 2, 0]
		newlink        [7, 0, 4, 0, 0]
		relink         [7, 1, 2, 0, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 22]
		findatom     [1, 0, 'generate_source_rule'_3]
		derefatom    [3, 1, 0]
		isint          [3]
		allocatom    [2, 1_1]
		iadd         [4, 3, 2]
		getfunc      [5, 4]
		allocatomindirect[6, 5]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_rule'_3]
		removeatom     [3, 0]
		copyatom     [7, 0, 6]
		copyatom     [8, 0, 3]
		copyatom     [9, 0, 3]
		newatom      [10, 0, 'string'.'concat'_2]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'tabs'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, "{\n"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'generate_source_codes'_3]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'tabs'_2]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, "}\n"_1]
		newatom      [21, 0, '[]'_1]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 1, 2, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [12, 0, 8, 0, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 16, 2, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [16, 0, 7, 0, 0]
		relink         [16, 1, 1, 1, 0]
		newlink        [17, 0, 18, 1, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [18, 0, 9, 0, 0]
		newlink        [19, 0, 20, 0, 0]
		newlink        [19, 1, 21, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [6]
		freeatom       [4]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generate_source_codes'_3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, 'tabs'_2]
		newatom      [5, 0, "return;\n"_1]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 5, 0, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 25]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'alloc'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'alloc'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		removeatom     [5, 0]
		copyatom     [6, 0, 4]
		copyatom     [7, 0, 4]
		copyatom     [8, 0, 5]
		copyatom     [9, 0, 5]
		newatom      [10, 0, 'string'.'concat'_2]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'tabs'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, " *"_1]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, " = malloc(sizeof("_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, "));\n"_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_codes'_3]
		newatom      [24, 0, '[]'_1]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 1, 2, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [12, 0, 6, 0, 0]
		newlink        [13, 0, 8, 0, 0]
		newlink        [13, 1, 14, 2, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 2, 0]
		relink         [16, 0, 3, 0, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 9, 0, 0]
		newlink        [19, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 2, 0]
		newlink        [22, 1, 24, 0, 0]
		newlink        [23, 0, 7, 0, 0]
		relink         [23, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 31]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'alloc'_4]
		derefatom    [6, 3, 1]
		isstring       [6]
		derefatom    [5, 3, 2]
		isint          [5]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'alloc'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [7, 0, 4]
		copyatom     [8, 0, 4]
		copyatom     [9, 0, 5]
		copyatom     [10, 0, 6]
		copyatom     [11, 0, 6]
		newatom      [12, 0, 'string'.'concat'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'tabs'_2]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, " *"_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, " = malloc(sizeof("_1]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, ") * "_1]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'string'.'from'_2]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, ");\n"_1]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'generate_source_codes'_3]
		newatom      [30, 0, '[]'_1]
		newlink        [12, 0, 13, 2, 0]
		relink         [12, 1, 1, 2, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [14, 0, 7, 0, 0]
		newlink        [15, 0, 10, 0, 0]
		newlink        [15, 1, 16, 2, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		relink         [18, 0, 3, 0, 0]
		newlink        [18, 1, 19, 2, 0]
		newlink        [19, 0, 20, 0, 0]
		newlink        [19, 1, 21, 2, 0]
		newlink        [21, 0, 11, 0, 0]
		newlink        [21, 1, 22, 2, 0]
		newlink        [22, 0, 23, 0, 0]
		newlink        [22, 1, 24, 2, 0]
		newlink        [24, 0, 25, 1, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [25, 0, 9, 0, 0]
		newlink        [26, 0, 27, 0, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [28, 0, 29, 2, 0]
		newlink        [28, 1, 30, 0, 0]
		newlink        [29, 0, 8, 0, 0]
		relink         [29, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 24]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'free'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'free'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		removeatom     [5, 0]
		copyatom     [6, 0, 4]
		copyatom     [7, 0, 4]
		copyatom     [8, 0, 5]
		newatom      [9, 0, 'string'.'concat'_2]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'tabs'_2]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, "free("_1]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'generate_source_expr'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "); /* "_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, " */\n"_1]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, 'generate_source_codes'_3]
		newatom      [23, 0, '[]'_1]
		newlink        [9, 0, 10, 2, 0]
		relink         [9, 1, 1, 2, 0]
		newlink        [10, 0, 11, 1, 0]
		newlink        [10, 1, 12, 2, 0]
		newlink        [11, 0, 6, 0, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [12, 1, 14, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		relink         [15, 0, 3, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 8, 0, 0]
		newlink        [18, 1, 19, 2, 0]
		newlink        [19, 0, 20, 0, 0]
		newlink        [19, 1, 21, 2, 0]
		newlink        [21, 0, 22, 2, 0]
		newlink        [21, 1, 23, 0, 0]
		newlink        [22, 0, 7, 0, 0]
		relink         [22, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 29]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [4, 1_1]
		iadd         [6, 5, 4]
		getfunc      [7, 6]
		allocatomindirect[8, 7]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'match'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'match'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [9, 0, 8]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		newatom      [12, 0, 'string'.'concat'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'tabs'_2]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, "if ("_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'generate_source_codes_matching'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, ") {\n"_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_codes'_3]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'tabs'_2]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, "}\n"_1]
		newatom      [28, 0, '[]'_1]
		newlink        [12, 0, 13, 2, 0]
		relink         [12, 1, 1, 2, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [14, 0, 10, 0, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [17, 1, 20, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		relink         [18, 1, 3, 1, 0]
		relink         [19, 0, 3, 0, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 2, 0]
		newlink        [22, 1, 24, 2, 0]
		newlink        [23, 0, 9, 0, 0]
		relink         [23, 1, 2, 1, 0]
		newlink        [24, 0, 25, 1, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [25, 0, 11, 0, 0]
		newlink        [26, 0, 27, 0, 0]
		newlink        [26, 1, 28, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [8]
		freeatom       [5]
		freeatom       [6]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 119]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [9, 1, 0]
		isint          [9]
		getlink      [5, 1, 2]
		getlink      [4, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [8, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'connect'_3]
		getlink      [7, 3, 1]
		getlink      [6, 3, 0]
		newlist      [10]
		addtolist      [10, 6]
		newlist      [11]
		addtolist      [11, 4]
		addtolist      [11, 5]
		addtolist      [11, 7]
		addtolist      [11, 8]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 7]
		newlist      [14]
		addtolist      [14, 4]
		addtolist      [14, 5]
		addtolist      [14, 6]
		addtolist      [14, 8]
		isground     [15, 13, 14]
		commit         ["_Rgen", 0]
		newlist      [16]
		getlink      [17, 3, 0]
		addtolist      [16, 17]
		newlist      [18]
		getlink      [19, 3, 1]
		addtolist      [18, 19]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'connect'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [18, 0]
		removeatom     [9, 0]
		removeground   [16, 0]
		getlink      [20, 3, 1]
		insertconnectorsinnull[21, [20]]
		getlink      [22, 3, 0]
		insertconnectorsinnull[23, [22]]
		newlist      [24]
		getlink      [25, 3, 0]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 3, 1]
		addtolist      [26, 27]
		copyground   [28, 26, 0]
		getfromlist  [29, 28, 0]
		getfromlist  [30, 28, 1]
		copyground   [31, 26, 0]
		getfromlist  [32, 31, 0]
		getfromlist  [33, 31, 1]
		copyatom     [34, 0, 9]
		copyatom     [35, 0, 9]
		copyatom     [36, 0, 9]
		copyground   [37, 24, 0]
		getfromlist  [38, 37, 0]
		getfromlist  [39, 37, 1]
		copyground   [40, 24, 0]
		getfromlist  [41, 40, 0]
		getfromlist  [42, 40, 1]
		newatom      [43, 0, 'string'.'concat'_2]
		newatom      [44, 0, '.'_3]
		newatom      [45, 0, 'tabs'_2]
		newatom      [46, 0, '.'_3]
		newatom      [47, 0, 'generate_source_codes_connect'_3]
		newatom      [48, 0, 'generate_source_expr'_2]
		newatom      [49, 0, 'generate_source_expr'_2]
		newatom      [50, 0, '.'_3]
		newatom      [51, 0, "\n"_1]
		newatom      [52, 0, '.'_3]
		newatom      [53, 0, 'tabs'_2]
		newatom      [54, 0, '.'_3]
		newatom      [55, 0, 'generate_source_codes_connect'_3]
		newatom      [56, 0, 'generate_source_expr'_2]
		newatom      [57, 0, 'generate_source_expr'_2]
		newatom      [58, 0, '.'_3]
		newatom      [59, 0, "\n"_1]
		newatom      [60, 0, '.'_3]
		newatom      [61, 0, 'generate_source_codes'_3]
		newatom      [62, 0, '[]'_1]
		alloclink    [63, 61, 1]
		alloclink    [64, 36, 0]
		alloclink    [65, 61, 0]
		alloclink    [66, 62, 0]
		alloclink    [67, 60, 1]
		alloclink    [68, 61, 2]
		alloclink    [69, 60, 0]
		alloclink    [70, 60, 2]
		alloclink    [71, 58, 1]
		alloclink    [72, 59, 0]
		alloclink    [73, 58, 0]
		alloclink    [74, 57, 0]
		alloclink    [75, 56, 0]
		alloclink    [76, 57, 1]
		alloclink    [77, 55, 1]
		alloclink    [78, 56, 1]
		alloclink    [79, 55, 0]
		alloclink    [80, 58, 2]
		alloclink    [81, 54, 1]
		alloclink    [82, 55, 2]
		alloclink    [83, 54, 0]
		alloclink    [84, 35, 0]
		alloclink    [85, 53, 0]
		alloclink    [86, 54, 2]
		alloclink    [87, 52, 1]
		alloclink    [88, 53, 1]
		alloclink    [89, 52, 0]
		alloclink    [90, 52, 2]
		alloclink    [91, 50, 1]
		alloclink    [92, 51, 0]
		alloclink    [93, 50, 0]
		alloclink    [94, 49, 0]
		alloclink    [95, 48, 0]
		alloclink    [96, 49, 1]
		alloclink    [97, 47, 1]
		alloclink    [98, 48, 1]
		alloclink    [99, 47, 0]
		alloclink    [100, 50, 2]
		alloclink    [101, 46, 1]
		alloclink    [102, 47, 2]
		alloclink    [103, 46, 0]
		alloclink    [104, 34, 0]
		alloclink    [105, 45, 0]
		alloclink    [106, 46, 2]
		alloclink    [107, 44, 1]
		alloclink    [108, 45, 1]
		alloclink    [109, 44, 0]
		alloclink    [110, 43, 1]
		alloclink    [111, 44, 2]
		alloclink    [112, 43, 0]
		getfromlist  [113, 29, 0]
		getfromlist  [114, 38, 0]
		getfromlist  [115, 32, 0]
		getfromlist  [116, 41, 0]
		unifylinks     [112, 111, 0]
		getlink      [117, 1, 2]
		unifylinks     [110, 117, 0]
		unifylinks     [109, 108, 0]
		unifylinks     [107, 106, 0]
		unifylinks     [105, 104, 0]
		unifylinks     [103, 102, 0]
		unifylinks     [101, 100, 0]
		unifylinks     [99, 98, 0]
		unifylinks     [97, 96, 0]
		unifylinks     [95, 114, 0]
		unifylinks     [94, 113, 0]
		unifylinks     [93, 92, 0]
		unifylinks     [91, 90, 0]
		unifylinks     [89, 88, 0]
		unifylinks     [87, 86, 0]
		unifylinks     [85, 84, 0]
		unifylinks     [83, 82, 0]
		unifylinks     [81, 80, 0]
		unifylinks     [79, 78, 0]
		unifylinks     [77, 76, 0]
		unifylinks     [75, 115, 0]
		unifylinks     [74, 116, 0]
		unifylinks     [73, 72, 0]
		unifylinks     [71, 70, 0]
		unifylinks     [69, 68, 0]
		unifylinks     [67, 66, 0]
		unifylinks     [65, 64, 0]
		getlink      [118, 2, 1]
		unifylinks     [63, 118, 0]
		deleteconnectors[21, 30]
		deleteconnectors[21, 33]
		deleteconnectors[23, 39]
		deleteconnectors[23, 42]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [26]
		freeatom       [9]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 76]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [9, 1, 0]
		isint          [9]
		getlink      [5, 1, 2]
		getlink      [4, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [8, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'assign'_3]
		getlink      [7, 3, 1]
		getlink      [6, 3, 0]
		newlist      [10]
		addtolist      [10, 7]
		newlist      [11]
		addtolist      [11, 4]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 8]
		isground     [12, 10, 11]
		commit         ["_Rgen", 0]
		newlist      [13]
		getlink      [14, 3, 1]
		addtolist      [13, 14]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'assign'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [9, 0]
		removeground   [13, 0]
		getlink      [15, 3, 1]
		insertconnectorsinnull[16, [15]]
		newlist      [17]
		getlink      [18, 3, 1]
		addtolist      [17, 18]
		copyatom     [19, 0, 9]
		copyatom     [20, 0, 9]
		copyground   [21, 17, 0]
		getfromlist  [22, 21, 0]
		getfromlist  [23, 21, 1]
		newatom      [24, 0, 'string'.'concat'_2]
		newatom      [25, 0, '.'_3]
		newatom      [26, 0, 'tabs'_2]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, 'generate_source_expr'_2]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, " = "_1]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, 'generate_source_expr'_2]
		newatom      [33, 0, '.'_3]
		newatom      [34, 0, ";\n"_1]
		newatom      [35, 0, '.'_3]
		newatom      [36, 0, 'generate_source_codes'_3]
		newatom      [37, 0, '[]'_1]
		alloclink    [38, 36, 1]
		alloclink    [39, 20, 0]
		alloclink    [40, 36, 0]
		alloclink    [41, 37, 0]
		alloclink    [42, 35, 1]
		alloclink    [43, 36, 2]
		alloclink    [44, 35, 0]
		alloclink    [45, 35, 2]
		alloclink    [46, 33, 1]
		alloclink    [47, 34, 0]
		alloclink    [48, 33, 0]
		alloclink    [49, 32, 0]
		alloclink    [50, 33, 2]
		alloclink    [51, 31, 1]
		alloclink    [52, 32, 1]
		alloclink    [53, 31, 0]
		alloclink    [54, 31, 2]
		alloclink    [55, 29, 1]
		alloclink    [56, 30, 0]
		alloclink    [57, 29, 0]
		alloclink    [58, 28, 0]
		alloclink    [59, 29, 2]
		alloclink    [60, 27, 1]
		alloclink    [61, 28, 1]
		alloclink    [62, 27, 0]
		alloclink    [63, 19, 0]
		alloclink    [64, 26, 0]
		alloclink    [65, 27, 2]
		alloclink    [66, 25, 1]
		alloclink    [67, 26, 1]
		alloclink    [68, 25, 0]
		alloclink    [69, 24, 1]
		alloclink    [70, 25, 2]
		alloclink    [71, 24, 0]
		getfromlist  [72, 22, 0]
		unifylinks     [71, 70, 0]
		getlink      [73, 1, 2]
		unifylinks     [69, 73, 0]
		unifylinks     [68, 67, 0]
		unifylinks     [66, 65, 0]
		unifylinks     [64, 63, 0]
		unifylinks     [62, 61, 0]
		unifylinks     [60, 59, 0]
		getlink      [74, 3, 0]
		unifylinks     [58, 74, 0]
		unifylinks     [57, 56, 0]
		unifylinks     [55, 54, 0]
		unifylinks     [53, 52, 0]
		unifylinks     [51, 50, 0]
		unifylinks     [49, 72, 0]
		unifylinks     [48, 47, 0]
		unifylinks     [46, 45, 0]
		unifylinks     [44, 43, 0]
		unifylinks     [42, 41, 0]
		unifylinks     [40, 39, 0]
		getlink      [75, 2, 1]
		unifylinks     [38, 75, 0]
		deleteconnectors[16, 23]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [9]
		freeground     [17]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 29]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [5, 1, 0]
		isint          [5]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'set_tag'_3]
		derefatom    [6, 3, 1]
		isstring       [6]
		findatom     [4, 0, 'type_db'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'set_tag'_3]
		removeatom     [4, 0, 'type_db'_1]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [7, 0, 5]
		copyatom     [8, 0, 5]
		copyatom     [9, 0, 6]
		copyatom     [10, 0, 6]
		newatom      [11, 0, 'string'.'concat'_2]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'tabs'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, "->_tag = "_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'string'.'from'_2]
		newatom      [19, 0, 'types'.'get_tag_with_constructor'_4]
		newatom      [20, 0, 'type_db'_1]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, "; /* "_1]
		newatom      [23, 0, '.'_3]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, " */\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '[]'_1]
		newlink        [11, 0, 12, 2, 0]
		relink         [11, 1, 1, 2, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 14, 2, 0]
		newlink        [13, 0, 7, 0, 0]
		relink         [14, 0, 3, 0, 0]
		newlink        [14, 1, 15, 2, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 1, 0]
		newlink        [17, 1, 21, 2, 0]
		newlink        [18, 0, 19, 3, 0]
		relink         [19, 0, 4, 0, 0]
		newlink        [19, 1, 9, 0, 0]
		newlink        [19, 2, 20, 0, 0]
		newlink        [21, 0, 22, 0, 0]
		newlink        [21, 1, 23, 2, 0]
		newlink        [23, 0, 10, 0, 0]
		newlink        [23, 1, 24, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 0, 0]
		newlink        [27, 0, 8, 0, 0]
		relink         [27, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'invoke'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'invoke'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		newatom      [7, 0, 'string'.'concat'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'tabs'_2]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, "("_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'generate_source_args'_2]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, ");\n"_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'generate_source_codes'_3]
		newatom      [19, 0, '[]'_1]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 2, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [8, 1, 10, 2, 0]
		newlink        [9, 0, 5, 0, 0]
		relink         [10, 0, 3, 0, 0]
		newlink        [10, 1, 11, 2, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 13, 2, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 15, 2, 0]
		relink         [14, 0, 3, 1, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 2, 0]
		newlink        [17, 1, 19, 0, 0]
		newlink        [18, 0, 6, 0, 0]
		relink         [18, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 29]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [4, 1_1]
		iadd         [6, 5, 4]
		getfunc      [7, 6]
		allocatomindirect[8, 7]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'locate'_4]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'locate'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [9, 0, 8]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		newatom      [12, 0, 'string'.'concat'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'tabs'_2]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, "if ("_1]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'generate_source_codes_location'_4]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, ") {\n"_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_codes'_3]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, 'tabs'_2]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, "}\n"_1]
		newatom      [28, 0, '[]'_1]
		newlink        [12, 0, 13, 2, 0]
		relink         [12, 1, 1, 2, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [14, 0, 10, 0, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 2, 0]
		newlink        [17, 0, 18, 3, 0]
		newlink        [17, 1, 20, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		relink         [18, 1, 3, 1, 0]
		relink         [18, 2, 3, 2, 0]
		relink         [19, 0, 3, 0, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 2, 0]
		newlink        [22, 1, 24, 2, 0]
		newlink        [23, 0, 9, 0, 0]
		relink         [23, 1, 2, 1, 0]
		newlink        [24, 0, 25, 1, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [25, 0, 11, 0, 0]
		newlink        [26, 0, 27, 0, 0]
		newlink        [26, 1, 28, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [4]
		freeatom       [8]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'declare'_4]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'declare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		newatom      [7, 0, 'string'.'concat'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'tabs'_2]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'generate_source_codes_declare'_5]
		newatom      [12, 0, 'none'_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, ";\n"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'generate_source_codes'_3]
		newatom      [17, 0, '[]'_1]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 2, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [8, 1, 10, 2, 0]
		newlink        [9, 0, 5, 0, 0]
		newlink        [10, 0, 11, 4, 0]
		newlink        [10, 1, 13, 2, 0]
		newlink        [11, 0, 12, 0, 0]
		relink         [11, 1, 3, 0, 0]
		relink         [11, 2, 3, 1, 0]
		relink         [11, 3, 3, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [15, 0, 16, 2, 0]
		newlink        [15, 1, 17, 0, 0]
		newlink        [16, 0, 6, 0, 0]
		relink         [16, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [4, 1, 0]
		isint          [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'thread_join'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'thread_join'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		newatom      [7, 0, 'string'.'concat'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'tabs'_2]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, "pthread_join("_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'generate_source_expr'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, ", NULL);\n"_1]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'generate_source_codes'_3]
		newatom      [18, 0, '[]'_1]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 1, 2, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [8, 1, 10, 2, 0]
		newlink        [9, 0, 5, 0, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [10, 1, 12, 2, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 14, 2, 0]
		relink         [13, 0, 3, 0, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [16, 0, 17, 2, 0]
		newlink        [16, 1, 18, 0, 0]
		newlink        [17, 0, 6, 0, 0]
		relink         [17, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 69]
		findatom     [1, 0, 'generate_source_codes_declare'_5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		getlink      [2, 1, 0]
		newlist      [7]
		addtolist      [7, 2]
		newlist      [8]
		addtolist      [8, 3]
		addtolist      [8, 4]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		newlist      [10]
		addtolist      [10, 5]
		neqground      [7, 10]
		newlist      [11]
		addtolist      [11, 2]
		addtolist      [11, 3]
		addtolist      [11, 4]
		addtolist      [11, 6]
		isground     [12, 10, 11]
		commit         ["_Rgen", 0]
		newlist      [13]
		getlink      [14, 1, 0]
		addtolist      [13, 14]
		newlist      [15]
		getlink      [16, 1, 3]
		addtolist      [15, 16]
		removeatom     [1, 0, 'generate_source_codes_declare'_5]
		removeground   [13, 0]
		removeground   [15, 0]
		getlink      [17, 1, 0]
		insertconnectorsinnull[18, [17]]
		getlink      [19, 1, 3]
		insertconnectorsinnull[20, [19]]
		newlist      [21]
		getlink      [22, 1, 0]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 1, 3]
		addtolist      [23, 24]
		copyground   [25, 23, 0]
		getfromlist  [26, 25, 0]
		getfromlist  [27, 25, 1]
		newatom      [28, 0, 'generate_source_declare_lhs'_4]
		newatom      [29, 0, 'string'.'concat'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, '.'_3]
		newatom      [32, 0, " "_1]
		newatom      [33, 0, '.'_3]
		newatom      [34, 0, '.'_3]
		newatom      [35, 0, " = "_1]
		newatom      [36, 0, '.'_3]
		newatom      [37, 0, 'generate_source_expr'_2]
		newatom      [38, 0, '[]'_1]
		alloclink    [39, 37, 0]
		alloclink    [40, 38, 0]
		alloclink    [41, 36, 1]
		alloclink    [42, 37, 1]
		alloclink    [43, 36, 0]
		alloclink    [44, 36, 2]
		alloclink    [45, 34, 1]
		alloclink    [46, 35, 0]
		alloclink    [47, 34, 0]
		alloclink    [48, 34, 2]
		alloclink    [49, 33, 1]
		alloclink    [50, 33, 2]
		alloclink    [51, 31, 1]
		alloclink    [52, 32, 0]
		alloclink    [53, 31, 0]
		alloclink    [54, 31, 2]
		alloclink    [55, 30, 1]
		alloclink    [56, 29, 1]
		alloclink    [57, 30, 2]
		alloclink    [58, 29, 0]
		alloclink    [59, 33, 0]
		alloclink    [60, 28, 3]
		alloclink    [61, 30, 0]
		alloclink    [62, 28, 2]
		alloclink    [63, 28, 1]
		alloclink    [64, 28, 0]
		getfromlist  [65, 26, 0]
		getlink      [66, 1, 1]
		unifylinks     [64, 66, 0]
		getlink      [67, 1, 2]
		unifylinks     [63, 67, 0]
		unifylinks     [62, 61, 0]
		unifylinks     [60, 59, 0]
		unifylinks     [58, 57, 0]
		getlink      [68, 1, 4]
		unifylinks     [56, 68, 0]
		unifylinks     [55, 54, 0]
		unifylinks     [53, 52, 0]
		unifylinks     [51, 50, 0]
		unifylinks     [49, 48, 0]
		unifylinks     [47, 46, 0]
		unifylinks     [45, 44, 0]
		unifylinks     [43, 42, 0]
		unifylinks     [41, 40, 0]
		unifylinks     [39, 65, 0]
		deleteconnectors[20, 27]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeground     [21]
		freeground     [23]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 32]
		findatom     [1, 0, 'generate_source_codes_declare'_5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		getlink      [2, 1, 0]
		newlist      [7]
		addtolist      [7, 2]
		newlist      [8]
		addtolist      [8, 3]
		addtolist      [8, 4]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		newlist      [10]
		addtolist      [10, 5]
		eqground       [7, 10]
		newlist      [11]
		addtolist      [11, 2]
		addtolist      [11, 3]
		addtolist      [11, 4]
		addtolist      [11, 6]
		isground     [12, 10, 11]
		commit         ["_Rgen", 0]
		newlist      [13]
		getlink      [14, 1, 3]
		addtolist      [13, 14]
		newlist      [15]
		getlink      [16, 1, 0]
		addtolist      [15, 16]
		removeatom     [1, 0, 'generate_source_codes_declare'_5]
		removeground   [15, 0]
		removeground   [13, 0]
		getlink      [17, 1, 0]
		insertconnectorsinnull[18, [17]]
		getlink      [19, 1, 3]
		insertconnectorsinnull[20, [19]]
		newlist      [21]
		getlink      [22, 1, 3]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 1, 0]
		addtolist      [23, 24]
		newatom      [25, 0, 'string'.'concat'_2]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, " "_1]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, '[]'_1]
		newatom      [31, 0, 'generate_source_declare_lhs'_4]
		newlink        [25, 0, 26, 2, 0]
		relink         [25, 1, 1, 4, 0]
		newlink        [26, 0, 31, 2, 0]
		newlink        [26, 1, 27, 2, 0]
		newlink        [27, 0, 28, 0, 0]
		newlink        [27, 1, 29, 2, 0]
		newlink        [29, 0, 31, 3, 0]
		newlink        [29, 1, 30, 0, 0]
		relink         [31, 0, 1, 1, 0]
		relink         [31, 1, 1, 2, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeground     [23]
		freeground     [21]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generate_source_declare_lhs'_4]
		deref        [2, 1, 0, 1]
		func           [2, 'pointer_type'_2]
		commit         ["_gene", 0]
		removeatom     [1, 0, 'generate_source_declare_lhs'_4]
		removeatom     [2, 0, 'pointer_type'_2]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, "*"_1]
		newatom      [5, 0, 'generate_source_declare_lhs'_4]
		newlink        [3, 0, 4, 0, 0]
		newlink        [3, 1, 5, 3, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 1, 1, 0]
		relink         [5, 2, 1, 2, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generate_source_declare_lhs'_4]
		deref        [2, 1, 0, 1]
		func           [2, 'array_type'_2]
		commit         ["_gene", 0]
		removeatom     [1, 0, 'generate_source_declare_lhs'_4]
		removeatom     [2, 0, 'array_type'_2]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, "[]"_1]
		newatom      [5, 0, 'generate_source_declare_lhs'_4]
		newlink        [3, 0, 5, 3, 0]
		newlink        [3, 1, 4, 0, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 1, 1, 0]
		relink         [5, 2, 1, 2, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_declare_lhs'_4]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_gene", 0]
		removeatom     [1, 0, 'generate_source_declare_lhs'_4]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		unify          [1, 3, 1, 1, 0]
		relink         [3, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 25]
		findatom     [1, 0, 'generate_source_codes_matching'_3]
		derefatom    [4, 1, 0]
		isstring       [4]
		derefatom    [3, 1, 1]
		isstring       [3]
		findatom     [2, 0, 'type_db'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes_matching'_3]
		removeatom     [2, 0, 'type_db'_1]
		removeatom     [4, 0]
		removeatom     [3, 0]
		copyatom     [5, 0, 4]
		copyatom     [6, 0, 4]
		copyatom     [7, 0, 3]
		copyatom     [8, 0, 3]
		newatom      [9, 0, 'types'.'get_typename_with_constructor'_4]
		newatom      [10, 0, 'types'.'get_tag_with_constructor'_4]
		newatom      [11, 0, 'type_db'_1]
		newatom      [12, 0, 'string'.'concat'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, ".obj && (("_1]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, " *)"_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, ".obj)->_tag == "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'string'.'from'_2]
		newatom      [24, 0, '[]'_1]
		relink         [9, 0, 2, 0, 0]
		newlink        [9, 1, 7, 0, 0]
		newlink        [9, 2, 10, 0, 0]
		newlink        [9, 3, 16, 0, 0]
		newlink        [10, 1, 8, 0, 0]
		newlink        [10, 2, 11, 0, 0]
		newlink        [10, 3, 23, 0, 0]
		newlink        [12, 0, 13, 2, 0]
		relink         [12, 1, 1, 2, 0]
		newlink        [13, 0, 5, 0, 0]
		newlink        [13, 1, 14, 2, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 6, 0, 0]
		newlink        [19, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 0, 0]
		loadmodule     [0, "types"]
		loadmodule     [0, "types"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'generate_source_codes_location'_4]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes_location'_4]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		copyatom     [4, 0, 2]
		newatom      [5, 0, 'string'.'concat'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, ".ref == &(("_1]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, " *)"_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, ".obj)->"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, '[]'_1]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 3, 0]
		newlink        [6, 0, 3, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 9, 2, 0]
		relink         [9, 0, 1, 1, 0]
		newlink        [9, 1, 10, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [10, 1, 12, 2, 0]
		newlink        [12, 0, 4, 0, 0]
		newlink        [12, 1, 13, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 15, 2, 0]
		relink         [15, 0, 1, 2, 0]
		newlink        [15, 1, 16, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'generate_source_codes_connect'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes_connect'_3]
		newatom      [2, 0, 'generate_source_codes_connect_ref'_5]
		newatom      [3, 0, 'list'.'contains'_5]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, "p0_0"_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, "p1_0"_1]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, "p2_0"_1]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, "p3_0"_1]
		newatom      [12, 0, '[]'_1]
		newlink        [2, 0, 3, 4, 0]
		newlink        [2, 1, 3, 2, 0]
		newlink        [2, 2, 3, 3, 0]
		relink         [2, 3, 1, 1, 0]
		relink         [2, 4, 1, 2, 0]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 0, 0]
		newlink        [4, 0, 5, 0, 0]
		newlink        [4, 1, 6, 2, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 8, 2, 0]
		newlink        [8, 0, 9, 0, 0]
		newlink        [8, 1, 10, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [10, 1, 12, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'generate_source_codes_connect_ref'_5]
		derefatom    [8, 1, 3]
		isstring       [8]
		derefatom    [7, 1, 2]
		isstring       [7]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [9]
		addtolist      [9, 3]
		newlist      [10]
		addtolist      [10, 4]
		addtolist      [10, 5]
		addtolist      [10, 6]
		isground     [11, 9, 10]
		commit         ["_Rgen", 0]
		newlist      [12]
		getlink      [13, 1, 1]
		addtolist      [12, 13]
		removeatom     [1, 0, 'generate_source_codes_connect_ref'_5]
		removeatom     [2, 0, 'true'_1]
		removeatom     [8, 0]
		removeground   [12, 0]
		removeatom     [7, 0]
		getlink      [14, 1, 1]
		insertconnectorsinnull[15, [14]]
		newlist      [16]
		getlink      [17, 1, 1]
		addtolist      [16, 17]
		newatom      [18, 0, ""_1]
		relink         [18, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [8]
		freeground     [16]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 26]
		findatom     [1, 0, 'generate_source_codes_connect_ref'_5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		newlist      [7]
		addtolist      [7, 3]
		newlist      [8]
		addtolist      [8, 4]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		commit         ["_Rgen", 0]
		newlist      [10]
		getlink      [11, 1, 1]
		addtolist      [10, 11]
		removeatom     [1, 0, 'generate_source_codes_connect_ref'_5]
		removeatom     [2, 0, 'false'_1]
		removeground   [10, 0]
		getlink      [12, 1, 1]
		insertconnectorsinnull[13, [12]]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newatom      [16, 0, 'string'.'concat'_2]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, "*"_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, ".ref = "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, '.'_3]
		newatom      [24, 0, ";"_1]
		newatom      [25, 0, '[]'_1]
		newlink        [16, 0, 17, 2, 0]
		relink         [16, 1, 1, 4, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		relink         [19, 0, 1, 2, 0]
		newlink        [19, 1, 20, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		relink         [22, 0, 1, 3, 0]
		newlink        [22, 1, 23, 2, 0]
		newlink        [23, 0, 24, 0, 0]
		newlink        [23, 1, 25, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [5, 1_1]
		iadd         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		deref        [4, 3, 0, 0]
		func           [4, "=:="_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, "=:="_1]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		newatom      [13, 0, 'string'.'concat'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "if ("_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, " == "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_expr'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ") {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, "}\n"_1]
		newatom      [32, 0, '[]'_1]
		newlink        [13, 0, 14, 2, 0]
		relink         [13, 1, 1, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		relink         [19, 0, 3, 1, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 3, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [27, 0, 10, 0, 0]
		relink         [27, 1, 2, 1, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [29, 0, 12, 0, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [30, 1, 32, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [9]
		freeatom       [6]
		freeatom       [7]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [5, 1_1]
		iadd         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		deref        [4, 3, 0, 0]
		func           [4, "=\\="_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, "=\\="_1]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		newatom      [13, 0, 'string'.'concat'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "if ("_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, " != "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_expr'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ") {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, "}\n"_1]
		newatom      [32, 0, '[]'_1]
		newlink        [13, 0, 14, 2, 0]
		relink         [13, 1, 1, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		relink         [19, 0, 3, 1, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 3, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [27, 0, 10, 0, 0]
		relink         [27, 1, 2, 1, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [29, 0, 12, 0, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [30, 1, 32, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		freeatom       [9]
		freeatom       [7]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [5, 1_1]
		iadd         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		deref        [4, 3, 0, 0]
		func           [4, ">"_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, ">"_1]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		newatom      [13, 0, 'string'.'concat'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "if ("_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, " > "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_expr'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ") {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, "}\n"_1]
		newatom      [32, 0, '[]'_1]
		newlink        [13, 0, 14, 2, 0]
		relink         [13, 1, 1, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		relink         [19, 0, 3, 1, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 3, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [27, 0, 10, 0, 0]
		relink         [27, 1, 2, 1, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [29, 0, 12, 0, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [30, 1, 32, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [7]
		freeatom       [9]
		freeatom       [6]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [5, 1_1]
		iadd         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		deref        [4, 3, 0, 0]
		func           [4, "<"_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, "<"_1]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		newatom      [13, 0, 'string'.'concat'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "if ("_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, " < "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_expr'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ") {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, "}\n"_1]
		newatom      [32, 0, '[]'_1]
		newlink        [13, 0, 14, 2, 0]
		relink         [13, 1, 1, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		relink         [19, 0, 3, 1, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 3, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [27, 0, 10, 0, 0]
		relink         [27, 1, 2, 1, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [29, 0, 12, 0, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [30, 1, 32, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [9]
		freeatom       [6]
		freeatom       [7]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [5, 1_1]
		iadd         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		deref        [4, 3, 0, 0]
		func           [4, ">="_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, ">="_1]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		newatom      [13, 0, 'string'.'concat'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "if ("_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, " >= "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_expr'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ") {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, "}\n"_1]
		newatom      [32, 0, '[]'_1]
		newlink        [13, 0, 14, 2, 0]
		relink         [13, 1, 1, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		relink         [19, 0, 3, 1, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 3, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [27, 0, 10, 0, 0]
		relink         [27, 1, 2, 1, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [29, 0, 12, 0, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [30, 1, 32, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [7]
		freeatom       [5]
		freeatom       [9]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [6, 1, 0]
		isint          [6]
		allocatom    [5, 1_1]
		iadd         [7, 6, 5]
		getfunc      [8, 7]
		allocatomindirect[9, 8]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'compare'_4]
		deref        [4, 3, 0, 0]
		func           [4, "=<"_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'compare'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, "=<"_1]
		removeatom     [6, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 6]
		copyatom     [12, 0, 6]
		newatom      [13, 0, 'string'.'concat'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'tabs'_2]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, "if ("_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'generate_source_expr'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, " <= "_1]
		newatom      [22, 0, '.'_3]
		newatom      [23, 0, 'generate_source_expr'_2]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, ") {\n"_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_codes'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'tabs'_2]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, "}\n"_1]
		newatom      [32, 0, '[]'_1]
		newlink        [13, 0, 14, 2, 0]
		relink         [13, 1, 1, 2, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [14, 1, 16, 2, 0]
		newlink        [15, 0, 11, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 2, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		relink         [19, 0, 3, 1, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 22, 2, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [22, 1, 24, 2, 0]
		relink         [23, 0, 3, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 2, 0]
		newlink        [26, 1, 28, 2, 0]
		newlink        [27, 0, 10, 0, 0]
		relink         [27, 1, 2, 1, 0]
		newlink        [28, 0, 29, 1, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [29, 0, 12, 0, 0]
		newlink        [30, 0, 31, 0, 0]
		newlink        [30, 1, 32, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [9]
		freeatom       [6]
		freeatom       [5]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 30]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'generate_source_codes'_3]
		derefatom    [9, 1, 0]
		isint          [9]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		deref        [6, 5, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 2]
		func           [7, '.'_3]
		deref        [8, 7, 1, 0]
		func           [8, '[]'_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_codes'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		removeatom     [9, 0]
		copyatom     [10, 0, 9]
		copyatom     [11, 0, 9]
		newatom      [12, 0, 'string'.'concat'_2]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'tabs'_2]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'generate_source_expr'_2]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, " = "_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, 'generate_source_expr'_2]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, " "_1]
		newatom      [23, 0, '.'_3]
		newatom      [24, 0, '.'_3]
		newatom      [25, 0, " "_1]
		newatom      [26, 0, '.'_3]
		newatom      [27, 0, 'generate_source_expr'_2]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, ";\n"_1]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, 'generate_source_codes'_3]
		newatom      [32, 0, '[]'_1]
		newlink        [12, 0, 13, 2, 0]
		relink         [12, 1, 1, 2, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 15, 2, 0]
		newlink        [14, 0, 10, 0, 0]
		newlink        [15, 0, 16, 1, 0]
		newlink        [15, 1, 17, 2, 0]
		relink         [16, 0, 7, 0, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [17, 1, 19, 2, 0]
		newlink        [19, 0, 20, 1, 0]
		newlink        [19, 1, 21, 2, 0]
		relink         [20, 0, 5, 0, 0]
		newlink        [21, 0, 22, 0, 0]
		newlink        [21, 1, 23, 2, 0]
		relink         [23, 0, 4, 0, 0]
		newlink        [23, 1, 24, 2, 0]
		newlink        [24, 0, 25, 0, 0]
		newlink        [24, 1, 26, 2, 0]
		newlink        [26, 0, 27, 1, 0]
		newlink        [26, 1, 28, 2, 0]
		relink         [27, 0, 6, 0, 0]
		newlink        [28, 0, 29, 0, 0]
		newlink        [28, 1, 30, 2, 0]
		newlink        [30, 0, 31, 2, 0]
		newlink        [30, 1, 32, 0, 0]
		newlink        [31, 0, 11, 0, 0]
		relink         [31, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		freeatom       [8]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_args'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 1, 0]
		func           [3, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_args'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, 'generate_source_expr'_2]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'generate_source_args'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 1, 2]
		func           [3, '.'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_args'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, 'string'.'concat'_2]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'generate_source_expr'_2]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, ", "_1]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'generate_source_args'_2]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, '[]'_1]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 7, 2, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 9, 2, 0]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 0, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [11, 0, 3, 0, 0]
		relink         [11, 1, 3, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'link'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'link'_3]
		newatom      [3, 0, 'generate_source_link'_4]
		newatom      [4, 0, 'none'_1]
		newlink        [3, 0, 4, 0, 0]
		relink         [3, 1, 2, 0, 0]
		relink         [3, 2, 2, 1, 0]
		relink         [3, 3, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 62]
		findatom     [1, 0, 'generate_source_link'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		getlink      [2, 1, 0]
		newlist      [6]
		addtolist      [6, 2]
		newlist      [7]
		addtolist      [7, 3]
		addtolist      [7, 4]
		addtolist      [7, 5]
		isground     [8, 6, 7]
		newlist      [9]
		addtolist      [9, 4]
		neqground      [6, 9]
		newlist      [10]
		addtolist      [10, 2]
		addtolist      [10, 3]
		addtolist      [10, 5]
		isground     [11, 9, 10]
		newlist      [12]
		addtolist      [12, 3]
		eqground       [6, 12]
		newlist      [13]
		addtolist      [13, 2]
		addtolist      [13, 4]
		addtolist      [13, 5]
		isground     [14, 12, 13]
		commit         ["_Rgen", 0]
		newlist      [15]
		getlink      [16, 1, 1]
		addtolist      [15, 16]
		newlist      [17]
		getlink      [18, 1, 0]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 1, 2]
		addtolist      [19, 20]
		removeatom     [1, 0, 'generate_source_link'_4]
		removeground   [17, 0]
		removeground   [15, 0]
		removeground   [19, 0]
		getlink      [21, 1, 0]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 1]
		insertconnectorsinnull[24, [23]]
		getlink      [25, 1, 2]
		insertconnectorsinnull[26, [25]]
		newlist      [27]
		getlink      [28, 1, 1]
		addtolist      [27, 28]
		newlist      [29]
		getlink      [30, 1, 0]
		addtolist      [29, 30]
		newlist      [31]
		getlink      [32, 1, 2]
		addtolist      [31, 32]
		copyground   [33, 31, 0]
		getfromlist  [34, 33, 0]
		getfromlist  [35, 33, 1]
		newatom      [36, 0, 'string'.'concat'_2]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, "{ .ref = "_1]
		newatom      [39, 0, '.'_3]
		newatom      [40, 0, 'generate_source_expr'_2]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, " }"_1]
		newatom      [43, 0, '[]'_1]
		alloclink    [44, 43, 0]
		alloclink    [45, 41, 1]
		alloclink    [46, 42, 0]
		alloclink    [47, 41, 0]
		alloclink    [48, 40, 0]
		alloclink    [49, 41, 2]
		alloclink    [50, 39, 1]
		alloclink    [51, 40, 1]
		alloclink    [52, 39, 0]
		alloclink    [53, 39, 2]
		alloclink    [54, 37, 1]
		alloclink    [55, 38, 0]
		alloclink    [56, 37, 0]
		alloclink    [57, 36, 1]
		alloclink    [58, 37, 2]
		alloclink    [59, 36, 0]
		getfromlist  [60, 34, 0]
		unifylinks     [59, 58, 0]
		getlink      [61, 1, 3]
		unifylinks     [57, 61, 0]
		unifylinks     [56, 55, 0]
		unifylinks     [54, 53, 0]
		unifylinks     [52, 51, 0]
		unifylinks     [50, 49, 0]
		unifylinks     [48, 60, 0]
		unifylinks     [47, 46, 0]
		unifylinks     [45, 44, 0]
		deleteconnectors[26, 35]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeground     [29]
		freeground     [27]
		freeground     [31]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 62]
		findatom     [1, 0, 'generate_source_link'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		getlink      [2, 1, 0]
		newlist      [6]
		addtolist      [6, 2]
		newlist      [7]
		addtolist      [7, 3]
		addtolist      [7, 4]
		addtolist      [7, 5]
		isground     [8, 6, 7]
		newlist      [9]
		addtolist      [9, 3]
		neqground      [6, 9]
		newlist      [10]
		addtolist      [10, 2]
		addtolist      [10, 4]
		addtolist      [10, 5]
		isground     [11, 9, 10]
		newlist      [12]
		addtolist      [12, 4]
		eqground       [6, 12]
		newlist      [13]
		addtolist      [13, 2]
		addtolist      [13, 3]
		addtolist      [13, 5]
		isground     [14, 12, 13]
		commit         ["_Rgen", 0]
		newlist      [15]
		getlink      [16, 1, 0]
		addtolist      [15, 16]
		newlist      [17]
		getlink      [18, 1, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 1, 2]
		addtolist      [19, 20]
		removeatom     [1, 0, 'generate_source_link'_4]
		removeground   [15, 0]
		removeground   [17, 0]
		removeground   [19, 0]
		getlink      [21, 1, 0]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 1]
		insertconnectorsinnull[24, [23]]
		getlink      [25, 1, 2]
		insertconnectorsinnull[26, [25]]
		newlist      [27]
		getlink      [28, 1, 0]
		addtolist      [27, 28]
		newlist      [29]
		getlink      [30, 1, 1]
		addtolist      [29, 30]
		newlist      [31]
		getlink      [32, 1, 2]
		addtolist      [31, 32]
		copyground   [33, 29, 0]
		getfromlist  [34, 33, 0]
		getfromlist  [35, 33, 1]
		newatom      [36, 0, 'string'.'concat'_2]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, "{ .obj = "_1]
		newatom      [39, 0, '.'_3]
		newatom      [40, 0, 'generate_source_expr'_2]
		newatom      [41, 0, '.'_3]
		newatom      [42, 0, " }"_1]
		newatom      [43, 0, '[]'_1]
		alloclink    [44, 43, 0]
		alloclink    [45, 41, 1]
		alloclink    [46, 42, 0]
		alloclink    [47, 41, 0]
		alloclink    [48, 40, 0]
		alloclink    [49, 41, 2]
		alloclink    [50, 39, 1]
		alloclink    [51, 40, 1]
		alloclink    [52, 39, 0]
		alloclink    [53, 39, 2]
		alloclink    [54, 37, 1]
		alloclink    [55, 38, 0]
		alloclink    [56, 37, 0]
		alloclink    [57, 36, 1]
		alloclink    [58, 37, 2]
		alloclink    [59, 36, 0]
		getfromlist  [60, 34, 0]
		unifylinks     [59, 58, 0]
		getlink      [61, 1, 3]
		unifylinks     [57, 61, 0]
		unifylinks     [56, 55, 0]
		unifylinks     [54, 53, 0]
		unifylinks     [52, 51, 0]
		unifylinks     [50, 49, 0]
		unifylinks     [48, 60, 0]
		unifylinks     [47, 46, 0]
		unifylinks     [45, 44, 0]
		deleteconnectors[24, 35]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeground     [27]
		freeground     [29]
		freeground     [31]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 85]
		findatom     [1, 0, 'generate_source_link'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		getlink      [2, 1, 0]
		newlist      [6]
		addtolist      [6, 2]
		newlist      [7]
		addtolist      [7, 3]
		addtolist      [7, 4]
		addtolist      [7, 5]
		isground     [8, 6, 7]
		newlist      [9]
		addtolist      [9, 3]
		neqground      [6, 9]
		newlist      [10]
		addtolist      [10, 2]
		addtolist      [10, 4]
		addtolist      [10, 5]
		isground     [11, 9, 10]
		newlist      [12]
		addtolist      [12, 4]
		neqground      [6, 12]
		newlist      [13]
		addtolist      [13, 2]
		addtolist      [13, 3]
		addtolist      [13, 5]
		isground     [14, 12, 13]
		commit         ["_Rgen", 0]
		newlist      [15]
		getlink      [16, 1, 1]
		addtolist      [15, 16]
		newlist      [17]
		getlink      [18, 1, 2]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 1, 0]
		addtolist      [19, 20]
		removeatom     [1, 0, 'generate_source_link'_4]
		removeground   [19, 0]
		removeground   [15, 0]
		removeground   [17, 0]
		getlink      [21, 1, 0]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 1]
		insertconnectorsinnull[24, [23]]
		getlink      [25, 1, 2]
		insertconnectorsinnull[26, [25]]
		newlist      [27]
		getlink      [28, 1, 1]
		addtolist      [27, 28]
		newlist      [29]
		getlink      [30, 1, 2]
		addtolist      [29, 30]
		newlist      [31]
		getlink      [32, 1, 0]
		addtolist      [31, 32]
		copyground   [33, 27, 0]
		getfromlist  [34, 33, 0]
		getfromlist  [35, 33, 1]
		copyground   [36, 29, 0]
		getfromlist  [37, 36, 0]
		getfromlist  [38, 36, 1]
		newatom      [39, 0, 'string'.'concat'_2]
		newatom      [40, 0, '.'_3]
		newatom      [41, 0, "{ .obj = "_1]
		newatom      [42, 0, '.'_3]
		newatom      [43, 0, 'generate_source_expr'_2]
		newatom      [44, 0, '.'_3]
		newatom      [45, 0, ", "_1]
		newatom      [46, 0, '.'_3]
		newatom      [47, 0, ".ref = "_1]
		newatom      [48, 0, '.'_3]
		newatom      [49, 0, 'generate_source_expr'_2]
		newatom      [50, 0, '.'_3]
		newatom      [51, 0, " }"_1]
		newatom      [52, 0, '[]'_1]
		alloclink    [53, 52, 0]
		alloclink    [54, 50, 1]
		alloclink    [55, 51, 0]
		alloclink    [56, 50, 0]
		alloclink    [57, 49, 0]
		alloclink    [58, 50, 2]
		alloclink    [59, 48, 1]
		alloclink    [60, 49, 1]
		alloclink    [61, 48, 0]
		alloclink    [62, 48, 2]
		alloclink    [63, 46, 1]
		alloclink    [64, 47, 0]
		alloclink    [65, 46, 0]
		alloclink    [66, 46, 2]
		alloclink    [67, 44, 1]
		alloclink    [68, 45, 0]
		alloclink    [69, 44, 0]
		alloclink    [70, 43, 0]
		alloclink    [71, 44, 2]
		alloclink    [72, 42, 1]
		alloclink    [73, 43, 1]
		alloclink    [74, 42, 0]
		alloclink    [75, 42, 2]
		alloclink    [76, 40, 1]
		alloclink    [77, 41, 0]
		alloclink    [78, 40, 0]
		alloclink    [79, 39, 1]
		alloclink    [80, 40, 2]
		alloclink    [81, 39, 0]
		getfromlist  [82, 34, 0]
		getfromlist  [83, 37, 0]
		unifylinks     [81, 80, 0]
		getlink      [84, 1, 3]
		unifylinks     [79, 84, 0]
		unifylinks     [78, 77, 0]
		unifylinks     [76, 75, 0]
		unifylinks     [74, 73, 0]
		unifylinks     [72, 71, 0]
		unifylinks     [70, 82, 0]
		unifylinks     [69, 68, 0]
		unifylinks     [67, 66, 0]
		unifylinks     [65, 64, 0]
		unifylinks     [63, 62, 0]
		unifylinks     [61, 60, 0]
		unifylinks     [59, 58, 0]
		unifylinks     [57, 83, 0]
		unifylinks     [56, 55, 0]
		unifylinks     [54, 53, 0]
		deleteconnectors[24, 35]
		deleteconnectors[26, 38]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeground     [31]
		freeground     [27]
		freeground     [29]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'obj'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'obj'_2]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, 'generate_source_expr'_2]
		newatom      [5, 0, ".obj"_1]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 5, 0, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'portref'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'portref'_2]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, 'generate_source_expr'_2]
		newatom      [5, 0, ".ref"_1]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 5, 0, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'member'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'member'_3]
		newatom      [3, 0, 'string'.'concat'_2]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'generate_source_expr'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, "->"_1]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '[]'_1]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [5, 0, 2, 0, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [8, 0, 2, 1, 0]
		newlink        [8, 1, 9, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_expr'_2]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 0]
		func           [2, 'none'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'none'_1]
		newatom      [3, 0, "NULL"_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'ref'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'ref'_2]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, "&"_1]
		newatom      [5, 0, 'generate_source_expr'_2]
		newlink        [3, 0, 4, 0, 0]
		newlink        [3, 1, 5, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [5, 0, 2, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'deref'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'deref'_2]
		newatom      [3, 0, 'string'.'concat'_2]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, "(*"_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'generate_source_expr'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, ")"_1]
		newatom      [10, 0, '[]'_1]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [4, 0, 5, 0, 0]
		newlink        [4, 1, 6, 2, 0]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [7, 0, 2, 0, 0]
		newlink        [8, 0, 9, 0, 0]
		newlink        [8, 1, 10, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 15]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'coerce'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'coerce'_3]
		newatom      [3, 0, 'string'.'concat'_2]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, "(("_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'generate_source_expr'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, ")"_1]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'generate_source_expr'_2]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, ")"_1]
		newatom      [14, 0, '[]'_1]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [4, 0, 5, 0, 0]
		newlink        [4, 1, 6, 2, 0]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [7, 0, 2, 1, 0]
		newlink        [8, 0, 9, 0, 0]
		newlink        [8, 1, 10, 2, 0]
		newlink        [10, 0, 11, 1, 0]
		newlink        [10, 1, 12, 2, 0]
		relink         [11, 0, 2, 0, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [12, 1, 14, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'pointer_type'_2]
		derefatom    [3, 2, 0]
		isstring       [3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'pointer_type'_2]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		newatom      [5, 0, 'string'.'concat'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, " *"_1]
		newatom      [9, 0, '[]'_1]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 1, 1, 0]
		newlink        [6, 0, 4, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 9, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'init_list'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'init_list'_2]
		newatom      [3, 0, 'string'.'concat'_2]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, "{"_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'generate_source_init_list'_2]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, "}"_1]
		newatom      [10, 0, '[]'_1]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [4, 0, 5, 0, 0]
		newlink        [4, 1, 6, 2, 0]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [7, 0, 2, 0, 0]
		newlink        [8, 0, 9, 0, 0]
		newlink        [8, 1, 10, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_expr'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'number'_2]
		deref        [3, 2, 0, 1]
		func           [3, 'int'_2]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_expr'_2]
		removeatom     [2, 0, 'number'_2]
		removeatom     [3, 0, 'int'_2]
		newatom      [4, 0, 'string'.'from'_2]
		relink         [4, 0, 3, 0, 0]
		relink         [4, 1, 1, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'generate_source_init_list'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_init_list'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, ""_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'generate_source_init_list'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 1, 0]
		func           [3, '[]'_1]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_init_list'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, 'generate_source_expr'_2]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'generate_source_init_list'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 1, 2]
		func           [3, '.'_3]
		commit         ["_Rgen", 0]
		removeatom     [1, 0, 'generate_source_init_list'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, 'string'.'concat'_2]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'generate_source_expr'_2]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, ", "_1]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'generate_source_init_list'_2]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, '[]'_1]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 7, 2, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 9, 2, 0]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 0, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [11, 0, 3, 0, 0]
		relink         [11, 1, 3, 1, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'tabs'_2]
		deref        [2, 1, 0, 0]
		func           [2, 0_1]
		commit         ["_Rtab", 0]
		removeatom     [1, 0, 'tabs'_2]
		removeatom     [2, 0, 0_1]
		newatom      [3, 0, ""_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 12]
		findatom     [1, 0, 'tabs'_2]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [2, 0_1]
		igt            [4, 2]
		allocatom    [3, 1_1]
		isub         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		commit         ["_Rtab", 0]
		removeatom     [1, 0, 'tabs'_2]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		newatom      [9, 0, 'string'.'concat'_3]
		newatom      [10, 0, "\t"_1]
		newatom      [11, 0, 'tabs'_2]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 11, 1, 0]
		relink         [9, 2, 1, 1, 0]
		newlink        [11, 0, 8, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		proceed        []


Compiled Ruleset @602                                     
Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'types'.'get_type_named'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_type_named'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'error_notfound'_2]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 68]
		findatom     [1, 0, 'types'.'get_type_named'_4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'type'_3]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		newlist      [10]
		addtolist      [10, 7]
		newlist      [11]
		addtolist      [11, 4]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 8]
		addtolist      [11, 9]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 4]
		eqground       [10, 13]
		newlist      [14]
		addtolist      [14, 5]
		addtolist      [14, 6]
		addtolist      [14, 7]
		addtolist      [14, 8]
		addtolist      [14, 9]
		isground     [15, 13, 14]
		newlist      [16]
		addtolist      [16, 8]
		newlist      [17]
		addtolist      [17, 4]
		addtolist      [17, 5]
		addtolist      [17, 6]
		addtolist      [17, 7]
		addtolist      [17, 9]
		isground     [18, 16, 17]
		commit         ["_Rtyp", 0]
		newlist      [19]
		getlink      [20, 3, 1]
		addtolist      [19, 20]
		newlist      [21]
		getlink      [22, 1, 1]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 3, 0]
		addtolist      [23, 24]
		removeatom     [1, 0, 'types'.'get_type_named'_4]
		removeatom     [3, 0, 'type'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [23, 0]
		removeground   [19, 0]
		removeground   [21, 0]
		getlink      [25, 3, 0]
		insertconnectorsinnull[26, [25]]
		getlink      [27, 3, 1]
		insertconnectorsinnull[28, [27]]
		getlink      [29, 1, 1]
		insertconnectorsinnull[30, [29]]
		newlist      [31]
		getlink      [32, 3, 1]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 1, 1]
		addtolist      [33, 34]
		newlist      [35]
		getlink      [36, 3, 0]
		addtolist      [35, 36]
		copyground   [37, 35, 0]
		getfromlist  [38, 37, 0]
		getfromlist  [39, 37, 1]
		copyground   [40, 31, 0]
		getfromlist  [41, 40, 0]
		getfromlist  [42, 40, 1]
		copyground   [43, 31, 0]
		getfromlist  [44, 43, 0]
		getfromlist  [45, 43, 1]
		copyground   [46, 33, 0]
		getfromlist  [47, 46, 0]
		getfromlist  [48, 46, 1]
		newatom      [49, 0, 'type'_3]
		newatom      [50, 0, '.'_3]
		newatom      [51, 0, 'type'_3]
		alloclink    [52, 51, 1]
		alloclink    [53, 51, 0]
		alloclink    [54, 50, 2]
		alloclink    [55, 50, 1]
		alloclink    [56, 51, 2]
		alloclink    [57, 50, 0]
		alloclink    [58, 49, 2]
		alloclink    [59, 49, 1]
		alloclink    [60, 49, 0]
		getfromlist  [61, 41, 0]
		getfromlist  [62, 44, 0]
		getfromlist  [63, 38, 0]
		getfromlist  [64, 47, 0]
		unifylinks     [60, 64, 0]
		unifylinks     [59, 61, 0]
		getlink      [65, 1, 3]
		unifylinks     [58, 65, 0]
		unifylinks     [57, 56, 0]
		getlink      [66, 2, 1]
		unifylinks     [55, 66, 0]
		getlink      [67, 1, 2]
		unifylinks     [54, 67, 0]
		unifylinks     [53, 63, 0]
		unifylinks     [52, 62, 0]
		deleteconnectors[26, 39]
		deleteconnectors[28, 42]
		deleteconnectors[28, 45]
		deleteconnectors[30, 48]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [35]
		freeground     [31]
		freeground     [33]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 65]
		findatom     [1, 0, 'types'.'get_type_named'_4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'type'_3]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		newlist      [10]
		addtolist      [10, 7]
		newlist      [11]
		addtolist      [11, 4]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 8]
		addtolist      [11, 9]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 4]
		neqground      [10, 13]
		newlist      [14]
		addtolist      [14, 5]
		addtolist      [14, 6]
		addtolist      [14, 7]
		addtolist      [14, 8]
		addtolist      [14, 9]
		isground     [15, 13, 14]
		newlist      [16]
		addtolist      [16, 8]
		newlist      [17]
		addtolist      [17, 4]
		addtolist      [17, 5]
		addtolist      [17, 6]
		addtolist      [17, 7]
		addtolist      [17, 9]
		isground     [18, 16, 17]
		commit         ["_Rtyp", 0]
		newlist      [19]
		getlink      [20, 1, 1]
		addtolist      [19, 20]
		newlist      [21]
		getlink      [22, 3, 0]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 3, 1]
		addtolist      [23, 24]
		removeatom     [1, 0, 'types'.'get_type_named'_4]
		removeatom     [3, 0, 'type'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [21, 0]
		removeground   [23, 0]
		removeground   [19, 0]
		getlink      [25, 3, 0]
		insertconnectorsinnull[26, [25]]
		getlink      [27, 3, 1]
		insertconnectorsinnull[28, [27]]
		getlink      [29, 1, 1]
		insertconnectorsinnull[30, [29]]
		newlist      [31]
		getlink      [32, 1, 1]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 3, 0]
		addtolist      [33, 34]
		newlist      [35]
		getlink      [36, 3, 1]
		addtolist      [35, 36]
		copyground   [37, 33, 0]
		getfromlist  [38, 37, 0]
		getfromlist  [39, 37, 1]
		copyground   [40, 35, 0]
		getfromlist  [41, 40, 0]
		getfromlist  [42, 40, 1]
		copyground   [43, 31, 0]
		getfromlist  [44, 43, 0]
		getfromlist  [45, 43, 1]
		newatom      [46, 0, 'types'.'get_type_named'_4]
		newatom      [47, 0, '.'_3]
		newatom      [48, 0, 'type'_3]
		alloclink    [49, 48, 1]
		alloclink    [50, 48, 0]
		alloclink    [51, 47, 2]
		alloclink    [52, 48, 2]
		alloclink    [53, 47, 0]
		alloclink    [54, 46, 3]
		alloclink    [55, 47, 1]
		alloclink    [56, 46, 2]
		alloclink    [57, 46, 1]
		alloclink    [58, 46, 0]
		getfromlist  [59, 38, 0]
		getfromlist  [60, 44, 0]
		getfromlist  [61, 41, 0]
		getlink      [62, 2, 1]
		unifylinks     [58, 62, 0]
		unifylinks     [57, 60, 0]
		unifylinks     [56, 55, 0]
		getlink      [63, 1, 3]
		unifylinks     [54, 63, 0]
		unifylinks     [53, 52, 0]
		getlink      [64, 1, 2]
		unifylinks     [51, 64, 0]
		unifylinks     [50, 59, 0]
		unifylinks     [49, 61, 0]
		deleteconnectors[26, 39]
		deleteconnectors[28, 42]
		deleteconnectors[30, 45]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [33]
		freeground     [35]
		freeground     [31]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'types'.'get_type_with_constructor'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_type_with_constructor'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'error_notfound'_2]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'types'.'get_type_with_constructor'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'type'_4]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_type_with_constructor'_4]
		removeatom     [3, 0, 'type'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'types_'.'has_constructor_named'_5]
		newatom      [5, 0, 'types_'.'get_type_with_constructor_inner'_5]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'type'_4]
		relink         [4, 0, 3, 2, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 7, 2, 0]
		newlink        [4, 3, 5, 2, 0]
		newlink        [4, 4, 5, 0, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [5, 3, 1, 2, 0]
		relink         [5, 4, 1, 3, 0]
		newlink        [6, 0, 7, 3, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		loadmodule     [0, "types_"]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 69]
		findatom     [1, 0, 'types_'.'get_type_with_constructor_inner'_5]
		derefatom    [13, 1, 2]
		isstring       [13]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		getlink      [11, 3, 1]
		deref        [4, 3, 0, 3]
		func           [4, 'type'_4]
		derefatom    [12, 4, 0]
		isstring       [12]
		getlink      [10, 4, 2]
		getlink      [9, 4, 1]
		getlink      [8, 4, 0]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [14]
		addtolist      [14, 10]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 11]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 9]
		newlist      [18]
		addtolist      [18, 5]
		addtolist      [18, 6]
		addtolist      [18, 7]
		addtolist      [18, 8]
		addtolist      [18, 10]
		addtolist      [18, 11]
		isground     [19, 17, 18]
		commit         ["_Rtyp", 0]
		newlist      [20]
		getlink      [21, 4, 1]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 4, 2]
		addtolist      [22, 23]
		removeatom     [1, 0, 'types_'.'get_type_with_constructor_inner'_5]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'type'_4]
		removeatom     [3, 0, '.'_3]
		removeground   [22, 0]
		removeatom     [12, 0]
		removeground   [20, 0]
		removeatom     [13, 0]
		getlink      [24, 4, 2]
		insertconnectorsinnull[25, [24]]
		getlink      [26, 4, 1]
		insertconnectorsinnull[27, [26]]
		newlist      [28]
		getlink      [29, 4, 1]
		addtolist      [28, 29]
		newlist      [30]
		getlink      [31, 4, 2]
		addtolist      [30, 31]
		copyground   [32, 30, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		copyground   [35, 30, 0]
		getfromlist  [36, 35, 0]
		getfromlist  [37, 35, 1]
		copyatom     [38, 0, 12]
		copyatom     [39, 0, 12]
		copyground   [40, 28, 0]
		getfromlist  [41, 40, 0]
		getfromlist  [42, 40, 1]
		copyground   [43, 28, 0]
		getfromlist  [44, 43, 0]
		getfromlist  [45, 43, 1]
		newatom      [46, 0, 'type'_4]
		newatom      [47, 0, '.'_3]
		newatom      [48, 0, 'type'_4]
		alloclink    [49, 48, 2]
		alloclink    [50, 48, 1]
		alloclink    [51, 39, 0]
		alloclink    [52, 48, 0]
		alloclink    [53, 47, 2]
		alloclink    [54, 47, 1]
		alloclink    [55, 48, 3]
		alloclink    [56, 47, 0]
		alloclink    [57, 46, 3]
		alloclink    [58, 46, 2]
		alloclink    [59, 46, 1]
		alloclink    [60, 38, 0]
		alloclink    [61, 46, 0]
		getfromlist  [62, 33, 0]
		getfromlist  [63, 44, 0]
		getfromlist  [64, 36, 0]
		getfromlist  [65, 41, 0]
		unifylinks     [61, 60, 0]
		unifylinks     [59, 65, 0]
		unifylinks     [58, 62, 0]
		getlink      [66, 1, 4]
		unifylinks     [57, 66, 0]
		unifylinks     [56, 55, 0]
		getlink      [67, 3, 1]
		unifylinks     [54, 67, 0]
		getlink      [68, 1, 3]
		unifylinks     [53, 68, 0]
		unifylinks     [52, 51, 0]
		unifylinks     [50, 63, 0]
		unifylinks     [49, 64, 0]
		deleteconnectors[25, 34]
		deleteconnectors[25, 37]
		deleteconnectors[27, 42]
		deleteconnectors[27, 45]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeground     [30]
		freeatom       [12]
		freeground     [28]
		freeatom       [13]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'types_'.'get_type_with_constructor_inner'_5]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'get_type_with_constructor_inner'_5]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, 'types'.'get_type_with_constructor'_4]
		newatom      [5, 0, '.'_3]
		relink         [4, 0, 3, 1, 0]
		relink         [4, 1, 1, 2, 0]
		newlink        [4, 2, 5, 1, 0]
		relink         [4, 3, 1, 4, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 2, 1, 3, 0]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'types'.'get_constructor_named'_4]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_constructor_named'_4]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'error_notfound'_2]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [3, 1, 1, 3, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'types'.'get_constructor_named'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'type'_4]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_constructor_named'_4]
		removeatom     [3, 0, 'type'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'types_'.'has_constructor_named'_5]
		newatom      [5, 0, 'types_'.'get_constructor_named_inner'_5]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'type'_4]
		relink         [4, 0, 3, 2, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 7, 2, 0]
		newlink        [4, 3, 5, 2, 0]
		newlink        [4, 4, 5, 0, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [5, 3, 1, 2, 0]
		relink         [5, 4, 1, 3, 0]
		newlink        [6, 0, 7, 3, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		loadmodule     [0, "types_"]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 60]
		findatom     [1, 0, 'types_'.'get_constructor_named_inner'_5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		getlink      [11, 3, 1]
		deref        [4, 3, 0, 3]
		func           [4, 'type'_4]
		getlink      [10, 4, 2]
		getlink      [9, 4, 1]
		getlink      [8, 4, 0]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [12]
		addtolist      [12, 10]
		newlist      [13]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 8]
		addtolist      [13, 9]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 9]
		newlist      [16]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 10]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		commit         ["_Rtyp", 0]
		newlist      [18]
		getlink      [19, 4, 2]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 4, 1]
		addtolist      [20, 21]
		removeatom     [1, 0, 'types_'.'get_constructor_named_inner'_5]
		removeatom     [2, 0, 'true'_1]
		removeatom     [4, 0, 'type'_4]
		removeatom     [3, 0, '.'_3]
		removeground   [18, 0]
		removeground   [20, 0]
		getlink      [22, 4, 2]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 4, 1]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 4, 2]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 4, 1]
		addtolist      [28, 29]
		copyground   [30, 26, 0]
		getfromlist  [31, 30, 0]
		getfromlist  [32, 30, 1]
		copyground   [33, 26, 0]
		getfromlist  [34, 33, 0]
		getfromlist  [35, 33, 1]
		copyground   [36, 28, 0]
		getfromlist  [37, 36, 0]
		getfromlist  [38, 36, 1]
		newatom      [39, 0, 'types_'.'get_constructor_named_inner2'_3]
		newatom      [40, 0, '.'_3]
		newatom      [41, 0, 'type'_4]
		alloclink    [42, 41, 2]
		alloclink    [43, 41, 1]
		alloclink    [44, 41, 0]
		alloclink    [45, 40, 2]
		alloclink    [46, 40, 1]
		alloclink    [47, 41, 3]
		alloclink    [48, 40, 0]
		alloclink    [49, 39, 2]
		alloclink    [50, 39, 1]
		alloclink    [51, 39, 0]
		getfromlist  [52, 37, 0]
		getfromlist  [53, 31, 0]
		getfromlist  [54, 34, 0]
		unifylinks     [51, 53, 0]
		getlink      [55, 1, 2]
		unifylinks     [50, 55, 0]
		getlink      [56, 1, 4]
		unifylinks     [49, 56, 0]
		unifylinks     [48, 47, 0]
		getlink      [57, 3, 1]
		unifylinks     [46, 57, 0]
		getlink      [58, 1, 3]
		unifylinks     [45, 58, 0]
		getlink      [59, 4, 0]
		unifylinks     [44, 59, 0]
		unifylinks     [43, 52, 0]
		unifylinks     [42, 54, 0]
		deleteconnectors[23, 32]
		deleteconnectors[23, 35]
		deleteconnectors[25, 38]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		freeground     [26]
		freeground     [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'types_'.'get_constructor_named_inner'_5]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'get_constructor_named_inner'_5]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, 'types'.'get_constructor_named'_4]
		newatom      [5, 0, '.'_3]
		relink         [4, 0, 3, 1, 0]
		relink         [4, 1, 1, 2, 0]
		newlink        [4, 2, 5, 1, 0]
		relink         [4, 3, 1, 4, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 2, 1, 3, 0]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 49]
		findatom     [1, 0, 'types_'.'get_constructor_named_inner2'_3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		getlink      [8, 3, 2]
		getlink      [7, 3, 1]
		getlink      [6, 3, 0]
		newlist      [10]
		addtolist      [10, 4]
		newlist      [11]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 7]
		addtolist      [11, 8]
		addtolist      [11, 9]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 6]
		eqground       [10, 13]
		newlist      [14]
		addtolist      [14, 4]
		addtolist      [14, 5]
		addtolist      [14, 7]
		addtolist      [14, 8]
		addtolist      [14, 9]
		isground     [15, 13, 14]
		newlist      [16]
		addtolist      [16, 9]
		newlist      [17]
		addtolist      [17, 4]
		addtolist      [17, 5]
		addtolist      [17, 6]
		addtolist      [17, 7]
		addtolist      [17, 8]
		isground     [18, 16, 17]
		commit         ["_Rtyp", 0]
		newlist      [19]
		getlink      [20, 3, 0]
		addtolist      [19, 20]
		newlist      [21]
		getlink      [22, 2, 1]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 1, 1]
		addtolist      [23, 24]
		removeatom     [1, 0, 'types_'.'get_constructor_named_inner2'_3]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [21, 0]
		removeground   [23, 0]
		removeground   [19, 0]
		getlink      [25, 2, 1]
		insertconnectorsinnull[26, [25]]
		getlink      [27, 1, 1]
		insertconnectorsinnull[28, [27]]
		getlink      [29, 3, 0]
		insertconnectorsinnull[30, [29]]
		newlist      [31]
		getlink      [32, 3, 0]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 2, 1]
		addtolist      [33, 34]
		newlist      [35]
		getlink      [36, 1, 1]
		addtolist      [35, 36]
		copyground   [37, 31, 0]
		getfromlist  [38, 37, 0]
		getfromlist  [39, 37, 1]
		newatom      [40, 0, 'constructor'_4]
		alloclink    [41, 40, 3]
		alloclink    [42, 40, 2]
		alloclink    [43, 40, 1]
		alloclink    [44, 40, 0]
		getfromlist  [45, 38, 0]
		unifylinks     [44, 45, 0]
		getlink      [46, 3, 1]
		unifylinks     [43, 46, 0]
		getlink      [47, 3, 2]
		unifylinks     [42, 47, 0]
		getlink      [48, 1, 2]
		unifylinks     [41, 48, 0]
		deleteconnectors[30, 39]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [33]
		freeground     [35]
		freeground     [31]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 56]
		findatom     [1, 0, 'types_'.'get_constructor_named_inner2'_3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		getlink      [8, 3, 2]
		getlink      [7, 3, 1]
		getlink      [6, 3, 0]
		newlist      [10]
		addtolist      [10, 4]
		newlist      [11]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 7]
		addtolist      [11, 8]
		addtolist      [11, 9]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 6]
		neqground      [10, 13]
		newlist      [14]
		addtolist      [14, 4]
		addtolist      [14, 5]
		addtolist      [14, 7]
		addtolist      [14, 8]
		addtolist      [14, 9]
		isground     [15, 13, 14]
		newlist      [16]
		addtolist      [16, 7]
		newlist      [17]
		addtolist      [17, 4]
		addtolist      [17, 5]
		addtolist      [17, 6]
		addtolist      [17, 8]
		addtolist      [17, 9]
		isground     [18, 16, 17]
		newlist      [19]
		addtolist      [19, 8]
		newlist      [20]
		addtolist      [20, 4]
		addtolist      [20, 5]
		addtolist      [20, 6]
		addtolist      [20, 7]
		addtolist      [20, 9]
		isground     [21, 19, 20]
		commit         ["_Rtyp", 0]
		newlist      [22]
		getlink      [23, 3, 2]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 1, 1]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 3, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 3, 0]
		addtolist      [28, 29]
		removeatom     [1, 0, 'types_'.'get_constructor_named_inner2'_3]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [22, 0]
		removeground   [24, 0]
		removeground   [26, 0]
		removeground   [28, 0]
		getlink      [30, 3, 2]
		insertconnectorsinnull[31, [30]]
		getlink      [32, 1, 1]
		insertconnectorsinnull[33, [32]]
		getlink      [34, 3, 1]
		insertconnectorsinnull[35, [34]]
		getlink      [36, 3, 0]
		insertconnectorsinnull[37, [36]]
		newlist      [38]
		getlink      [39, 3, 2]
		addtolist      [38, 39]
		newlist      [40]
		getlink      [41, 1, 1]
		addtolist      [40, 41]
		newlist      [42]
		getlink      [43, 3, 1]
		addtolist      [42, 43]
		newlist      [44]
		getlink      [45, 3, 0]
		addtolist      [44, 45]
		copyground   [46, 40, 0]
		getfromlist  [47, 46, 0]
		getfromlist  [48, 46, 1]
		newatom      [49, 0, 'types_'.'get_constructor_named_inner2'_3]
		alloclink    [50, 49, 2]
		alloclink    [51, 49, 1]
		alloclink    [52, 49, 0]
		getfromlist  [53, 47, 0]
		getlink      [54, 2, 1]
		unifylinks     [52, 54, 0]
		unifylinks     [51, 53, 0]
		getlink      [55, 1, 2]
		unifylinks     [50, 55, 0]
		deleteconnectors[33, 48]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [38]
		freeground     [40]
		freeground     [42]
		freeground     [44]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'types'.'get_tag_with_constructor'_4]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor'_4]
		newatom      [2, 0, 'types'.'get_tag_with_constructor_t'_5]
		newatom      [3, 0, 1_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		relink         [2, 4, 1, 3, 0]
		loadmodule     [0, "types"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'types'.'get_tag_with_constructor_t'_5]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'type'_4]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor_t'_5]
		removeatom     [3, 0, 'type'_4]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'type'_4]
		newatom      [6, 0, 'types'.'get_tag_with_constructor_f'_6]
		newatom      [7, 0, 'types'.'get_tag_with_constructor_c'_7]
		newlink        [4, 0, 5, 3, 0]
		newlink        [4, 1, 6, 4, 0]
		relink         [4, 2, 1, 3, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		newlink        [5, 2, 7, 5, 0]
		newlink        [6, 0, 7, 6, 0]
		newlink        [6, 1, 7, 4, 0]
		relink         [6, 2, 2, 1, 0]
		newlink        [6, 3, 7, 3, 0]
		relink         [6, 5, 1, 4, 0]
		relink         [7, 0, 1, 0, 0]
		relink         [7, 1, 3, 2, 0]
		relink         [7, 2, 1, 2, 0]
		loadmodule     [0, "types"]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'types'.'get_tag_with_constructor_c'_7]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor_c'_7]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 0_1]
		unify          [1, 4, 1, 0, 0]
		unify          [1, 3, 1, 2, 0]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 6, 0]
		relink         [4, 0, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'types'.'get_tag_with_constructor_c'_7]
		derefatom    [7, 1, 0]
		isint          [7]
		allocatom    [4, 1_1]
		iadd         [8, 7, 4]
		getfunc      [9, 8]
		allocatomindirect[10, 9]
		derefatom    [6, 1, 2]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		derefatom    [5, 3, 0]
		isstring       [5]
		samefunc       [5, 6]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor_c'_7]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [7, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [11, 0, 10]
		copyatom     [12, 0, 7]
		copyatom     [13, 0, 5]
		copyatom     [14, 0, 6]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'constructor'_4]
		newlink        [15, 0, 16, 3, 0]
		relink         [15, 1, 2, 1, 0]
		relink         [15, 2, 1, 5, 0]
		newlink        [16, 0, 13, 0, 0]
		relink         [16, 1, 3, 1, 0]
		relink         [16, 2, 3, 2, 0]
		relink         [12, 0, 1, 6, 0]
		relink         [11, 0, 1, 4, 0]
		relink         [14, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [10]
		freeatom       [7]
		freeatom       [5]
		freeatom       [8]
		freeatom       [4]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 19]
		findatom     [1, 0, 'types'.'get_tag_with_constructor_c'_7]
		derefatom    [9, 1, 0]
		isint          [9]
		allocatom    [4, 1_1]
		iadd         [10, 9, 4]
		getfunc      [11, 10]
		allocatomindirect[12, 11]
		derefatom    [6, 1, 2]
		isunary        [6]
		getfunc      [8, 6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		derefatom    [5, 3, 0]
		isstring       [5]
		isunary        [5]
		getfunc      [7, 5]
		neqfunc        [7, 8]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor_c'_7]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [9, 0]
		removeatom     [5, 0]
		removeatom     [6, 0]
		copyatom     [13, 0, 12]
		copyatom     [14, 0, 5]
		copyatom     [15, 0, 6]
		newatom      [16, 0, 'types'.'get_tag_with_constructor_c'_7]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'constructor'_4]
		newlink        [16, 0, 13, 0, 0]
		relink         [16, 1, 2, 1, 0]
		newlink        [16, 2, 15, 0, 0]
		relink         [16, 3, 1, 3, 0]
		relink         [16, 4, 1, 4, 0]
		newlink        [16, 5, 17, 1, 0]
		relink         [16, 6, 1, 6, 0]
		newlink        [17, 0, 18, 3, 0]
		relink         [17, 2, 1, 5, 0]
		newlink        [18, 0, 14, 0, 0]
		relink         [18, 1, 3, 1, 0]
		relink         [18, 2, 3, 2, 0]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [12]
		freeatom       [9]
		freeatom       [10]
		freeatom       [5]
		freeatom       [4]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'types'.'get_tag_with_constructor_f'_6]
		deref        [2, 1, 0, 0]
		func           [2, 0_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor_f'_6]
		removeatom     [2, 0, 0_1]
		newatom      [3, 0, 'types'.'get_tag_with_constructor_t'_5]
		relink         [3, 0, 1, 1, 0]
		relink         [3, 1, 1, 2, 0]
		relink         [3, 2, 1, 3, 0]
		relink         [3, 3, 1, 4, 0]
		relink         [3, 4, 1, 5, 0]
		loadmodule     [0, "types"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'types'.'get_tag_with_constructor_f'_6]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [2, 0_1]
		igt            [5, 2]
		derefatom    [4, 1, 3]
		isstring       [4]
		derefatom    [3, 1, 1]
		isint          [3]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor_f'_6]
		removeatom     [5, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [6, 0, 5]
		unify          [1, 4, 1, 2, 0]
		relink         [6, 0, 1, 5, 0]
		freeatom       [1]
		freeatom       [5]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'types'.'get_tag_with_constructor'_4]
		derefatom    [2, 1, 1]
		isstring       [2]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_tag_with_constructor'_4]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		copyatom     [4, 0, 2]
		newatom      [5, 0, 'types'.'get_type_with_constructor'_4]
		newatom      [6, 0, 'types_'.'get_tag_with_constructor0'_3]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 1, 3, 0, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [5, 3, 6, 0, 0]
		newlink        [6, 1, 4, 0, 0]
		relink         [6, 2, 1, 3, 0]
		loadmodule     [0, "types"]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'types_'.'get_tag_with_constructor0'_3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 3]
		func           [2, 'type'_4]
		derefatom    [8, 2, 0]
		isstring       [8]
		getlink      [7, 2, 2]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		newlist      [9]
		addtolist      [9, 6]
		newlist      [10]
		addtolist      [10, 3]
		addtolist      [10, 4]
		addtolist      [10, 5]
		addtolist      [10, 7]
		isground     [11, 9, 10]
		commit         ["_Rtyp", 0]
		newlist      [12]
		getlink      [13, 2, 1]
		addtolist      [12, 13]
		removeatom     [1, 0, 'types_'.'get_tag_with_constructor0'_3]
		removeatom     [2, 0, 'type'_4]
		removeground   [12, 0]
		removeatom     [8, 0]
		getlink      [14, 2, 1]
		insertconnectorsinnull[15, [14]]
		newlist      [16]
		getlink      [17, 2, 1]
		addtolist      [16, 17]
		newatom      [18, 0, 'types_'.'get_tag_with_constructor1'_4]
		newatom      [19, 0, 1_1]
		newlink        [18, 0, 19, 0, 0]
		relink         [18, 1, 2, 2, 0]
		relink         [18, 2, 1, 1, 0]
		relink         [18, 3, 1, 2, 0]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [2]
		freeground     [16]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 56]
		findatom     [1, 0, 'types_'.'get_tag_with_constructor1'_4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		getlink      [9, 3, 2]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		newlist      [11]
		addtolist      [11, 7]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 8]
		addtolist      [12, 9]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 5]
		eqground       [11, 14]
		newlist      [15]
		addtolist      [15, 4]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 8]
		newlist      [18]
		addtolist      [18, 4]
		addtolist      [18, 5]
		addtolist      [18, 6]
		addtolist      [18, 7]
		addtolist      [18, 9]
		addtolist      [18, 10]
		isground     [19, 17, 18]
		newlist      [20]
		addtolist      [20, 9]
		newlist      [21]
		addtolist      [21, 4]
		addtolist      [21, 5]
		addtolist      [21, 6]
		addtolist      [21, 7]
		addtolist      [21, 8]
		addtolist      [21, 10]
		isground     [22, 20, 21]
		newlist      [23]
		addtolist      [23, 10]
		newlist      [24]
		addtolist      [24, 4]
		addtolist      [24, 5]
		addtolist      [24, 6]
		addtolist      [24, 7]
		addtolist      [24, 8]
		addtolist      [24, 9]
		isground     [25, 23, 24]
		commit         ["_Rtyp", 0]
		newlist      [26]
		getlink      [27, 3, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 2, 1]
		addtolist      [28, 29]
		newlist      [30]
		getlink      [31, 3, 0]
		addtolist      [30, 31]
		newlist      [32]
		getlink      [33, 1, 2]
		addtolist      [32, 33]
		newlist      [34]
		getlink      [35, 3, 2]
		addtolist      [34, 35]
		removeatom     [1, 0, 'types_'.'get_tag_with_constructor1'_4]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [34, 0]
		removeground   [28, 0]
		removeground   [30, 0]
		removeground   [26, 0]
		removeground   [32, 0]
		getlink      [36, 3, 2]
		insertconnectorsinnull[37, [36]]
		getlink      [38, 2, 1]
		insertconnectorsinnull[39, [38]]
		getlink      [40, 3, 0]
		insertconnectorsinnull[41, [40]]
		getlink      [42, 3, 1]
		insertconnectorsinnull[43, [42]]
		getlink      [44, 1, 2]
		insertconnectorsinnull[45, [44]]
		newlist      [46]
		getlink      [47, 3, 1]
		addtolist      [46, 47]
		newlist      [48]
		getlink      [49, 2, 1]
		addtolist      [48, 49]
		newlist      [50]
		getlink      [51, 3, 0]
		addtolist      [50, 51]
		newlist      [52]
		getlink      [53, 1, 2]
		addtolist      [52, 53]
		newlist      [54]
		getlink      [55, 3, 2]
		addtolist      [54, 55]
		unify          [1, 3, 1, 0, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [54]
		freeground     [48]
		freeground     [50]
		freeground     [46]
		freeground     [52]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 77]
		findatom     [1, 0, 'types_'.'get_tag_with_constructor1'_4]
		derefatom    [27, 1, 0]
		isint          [27]
		allocatom    [17, 1_1]
		iadd         [28, 27, 17]
		getfunc      [29, 28]
		allocatomindirect[30, 29]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		getlink      [9, 3, 2]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		newlist      [11]
		addtolist      [11, 7]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 8]
		addtolist      [12, 9]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 5]
		neqground      [11, 14]
		newlist      [15]
		addtolist      [15, 4]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		newlist      [18]
		addtolist      [18, 8]
		newlist      [19]
		addtolist      [19, 4]
		addtolist      [19, 5]
		addtolist      [19, 6]
		addtolist      [19, 7]
		addtolist      [19, 9]
		addtolist      [19, 10]
		isground     [20, 18, 19]
		newlist      [21]
		addtolist      [21, 9]
		newlist      [22]
		addtolist      [22, 4]
		addtolist      [22, 5]
		addtolist      [22, 6]
		addtolist      [22, 7]
		addtolist      [22, 8]
		addtolist      [22, 10]
		isground     [23, 21, 22]
		newlist      [24]
		addtolist      [24, 10]
		newlist      [25]
		addtolist      [25, 4]
		addtolist      [25, 5]
		addtolist      [25, 6]
		addtolist      [25, 7]
		addtolist      [25, 8]
		addtolist      [25, 9]
		isground     [26, 24, 25]
		commit         ["_Rtyp", 0]
		newlist      [31]
		getlink      [32, 1, 2]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 3, 1]
		addtolist      [33, 34]
		newlist      [35]
		getlink      [36, 2, 1]
		addtolist      [35, 36]
		newlist      [37]
		getlink      [38, 3, 2]
		addtolist      [37, 38]
		newlist      [39]
		getlink      [40, 3, 0]
		addtolist      [39, 40]
		removeatom     [1, 0, 'types_'.'get_tag_with_constructor1'_4]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [37, 0]
		removeground   [35, 0]
		removeatom     [27, 0]
		removeground   [39, 0]
		removeground   [33, 0]
		removeground   [31, 0]
		getlink      [41, 3, 2]
		insertconnectorsinnull[42, [41]]
		getlink      [43, 2, 1]
		insertconnectorsinnull[44, [43]]
		getlink      [45, 3, 0]
		insertconnectorsinnull[46, [45]]
		getlink      [47, 3, 1]
		insertconnectorsinnull[48, [47]]
		getlink      [49, 1, 2]
		insertconnectorsinnull[50, [49]]
		newlist      [51]
		getlink      [52, 1, 2]
		addtolist      [51, 52]
		newlist      [53]
		getlink      [54, 3, 1]
		addtolist      [53, 54]
		newlist      [55]
		getlink      [56, 2, 1]
		addtolist      [55, 56]
		newlist      [57]
		getlink      [58, 3, 2]
		addtolist      [57, 58]
		newlist      [59]
		getlink      [60, 3, 0]
		addtolist      [59, 60]
		copyatom     [61, 0, 30]
		copyground   [62, 55, 0]
		getfromlist  [63, 62, 0]
		getfromlist  [64, 62, 1]
		copyground   [65, 51, 0]
		getfromlist  [66, 65, 0]
		getfromlist  [67, 65, 1]
		newatom      [68, 0, 'types_'.'get_tag_with_constructor1'_4]
		alloclink    [69, 68, 3]
		alloclink    [70, 68, 2]
		alloclink    [71, 68, 1]
		alloclink    [72, 61, 0]
		alloclink    [73, 68, 0]
		getfromlist  [74, 63, 0]
		getfromlist  [75, 66, 0]
		unifylinks     [73, 72, 0]
		unifylinks     [71, 74, 0]
		unifylinks     [70, 75, 0]
		getlink      [76, 1, 3]
		unifylinks     [69, 76, 0]
		deleteconnectors[44, 64]
		deleteconnectors[50, 67]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [30]
		freeground     [57]
		freeground     [55]
		freeatom       [27]
		freeground     [59]
		freeground     [53]
		freeatom       [17]
		freeground     [51]
		freeatom       [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'types_'.'get_tag_with_constructor1'_4]
		derefatom    [4, 1, 2]
		isstring       [4]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'get_tag_with_constructor1'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		removeatom     [4, 0]
		newatom      [5, 0, 'cannot_be_here'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'types'.'get_typename_with_constructor'_4]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types'.'get_typename_with_constructor'_4]
		newatom      [2, 0, 'types'.'get_typename_with_type'_2]
		newatom      [3, 0, 'types'.'get_type_with_constructor'_4]
		newlink        [2, 0, 3, 3, 0]
		relink         [2, 1, 1, 3, 0]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 2, 1, 2, 0]
		loadmodule     [0, "types"]
		loadmodule     [0, "types"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 25]
		findatom     [1, 0, 'types'.'get_typename_with_type'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 3]
		func           [2, 'type'_4]
		getlink      [6, 2, 2]
		getlink      [5, 2, 1]
		getlink      [4, 2, 0]
		newlist      [7]
		addtolist      [7, 5]
		newlist      [8]
		addtolist      [8, 3]
		addtolist      [8, 4]
		addtolist      [8, 6]
		isground     [9, 7, 8]
		newlist      [10]
		addtolist      [10, 6]
		newlist      [11]
		addtolist      [11, 3]
		addtolist      [11, 4]
		addtolist      [11, 5]
		isground     [12, 10, 11]
		commit         ["_Rtyp", 0]
		newlist      [13]
		getlink      [14, 2, 2]
		addtolist      [13, 14]
		newlist      [15]
		getlink      [16, 2, 1]
		addtolist      [15, 16]
		removeatom     [1, 0, 'types'.'get_typename_with_type'_2]
		removeatom     [2, 0, 'type'_4]
		removeground   [13, 0]
		removeground   [15, 0]
		getlink      [17, 2, 2]
		insertconnectorsinnull[18, [17]]
		getlink      [19, 2, 1]
		insertconnectorsinnull[20, [19]]
		newlist      [21]
		getlink      [22, 2, 2]
		addtolist      [21, 22]
		newlist      [23]
		getlink      [24, 2, 1]
		addtolist      [23, 24]
		unify          [1, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [21]
		freeground     [23]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'types_'.'has_constructor_named'_5]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'has_constructor_named'_5]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'false'_1]
		newatom      [4, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		relink         [3, 0, 1, 4, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 55]
		findatom     [1, 0, 'types_'.'has_constructor_named'_5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [11, 2, 1]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		getlink      [10, 3, 2]
		getlink      [9, 3, 1]
		getlink      [8, 3, 0]
		newlist      [12]
		addtolist      [12, 8]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 9]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 4]
		eqground       [12, 15]
		newlist      [16]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 10]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		commit         ["_Rtyp", 0]
		newlist      [18]
		getlink      [19, 1, 1]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 3, 0]
		addtolist      [20, 21]
		removeatom     [1, 0, 'types_'.'has_constructor_named'_5]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [18, 0]
		removeground   [20, 0]
		getlink      [22, 1, 1]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 3, 0]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 1, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 3, 0]
		addtolist      [28, 29]
		copyground   [30, 26, 0]
		getfromlist  [31, 30, 0]
		getfromlist  [32, 30, 1]
		copyground   [33, 28, 0]
		getfromlist  [34, 33, 0]
		getfromlist  [35, 33, 1]
		newatom      [36, 0, 'true'_1]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, 'constructor'_4]
		alloclink    [39, 38, 2]
		alloclink    [40, 38, 1]
		alloclink    [41, 38, 0]
		alloclink    [42, 37, 2]
		alloclink    [43, 37, 1]
		alloclink    [44, 38, 3]
		alloclink    [45, 37, 0]
		alloclink    [46, 36, 0]
		getfromlist  [47, 31, 0]
		getfromlist  [48, 34, 0]
		getlink      [49, 1, 4]
		unifylinks     [46, 49, 0]
		unifylinks     [45, 44, 0]
		getlink      [50, 2, 1]
		unifylinks     [43, 50, 0]
		getlink      [51, 1, 2]
		unifylinks     [42, 51, 0]
		unifylinks     [41, 48, 0]
		getlink      [52, 3, 1]
		unifylinks     [40, 52, 0]
		getlink      [53, 3, 2]
		unifylinks     [39, 53, 0]
		getlink      [54, 1, 3]
		unifylinks     [47, 54, 0]
		deleteconnectors[23, 32]
		deleteconnectors[25, 35]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [26]
		freeground     [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 59]
		findatom     [1, 0, 'types_'.'has_constructor_named'_5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [11, 2, 1]
		deref        [3, 2, 0, 3]
		func           [3, 'constructor'_4]
		getlink      [10, 3, 2]
		getlink      [9, 3, 1]
		getlink      [8, 3, 0]
		newlist      [12]
		addtolist      [12, 8]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 9]
		addtolist      [13, 10]
		addtolist      [13, 11]
		isground     [14, 12, 13]
		newlist      [15]
		addtolist      [15, 4]
		neqground      [12, 15]
		newlist      [16]
		addtolist      [16, 5]
		addtolist      [16, 6]
		addtolist      [16, 7]
		addtolist      [16, 8]
		addtolist      [16, 9]
		addtolist      [16, 10]
		addtolist      [16, 11]
		isground     [17, 15, 16]
		commit         ["_Rtyp", 0]
		newlist      [18]
		getlink      [19, 1, 1]
		addtolist      [18, 19]
		newlist      [20]
		getlink      [21, 3, 0]
		addtolist      [20, 21]
		removeatom     [1, 0, 'types_'.'has_constructor_named'_5]
		removeatom     [3, 0, 'constructor'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [18, 0]
		removeground   [20, 0]
		getlink      [22, 1, 1]
		insertconnectorsinnull[23, [22]]
		getlink      [24, 3, 0]
		insertconnectorsinnull[25, [24]]
		newlist      [26]
		getlink      [27, 1, 1]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 3, 0]
		addtolist      [28, 29]
		copyground   [30, 26, 0]
		getfromlist  [31, 30, 0]
		getfromlist  [32, 30, 1]
		copyground   [33, 28, 0]
		getfromlist  [34, 33, 0]
		getfromlist  [35, 33, 1]
		newatom      [36, 0, 'types_'.'has_constructor_named'_5]
		newatom      [37, 0, '.'_3]
		newatom      [38, 0, 'constructor'_4]
		alloclink    [39, 38, 2]
		alloclink    [40, 38, 1]
		alloclink    [41, 38, 0]
		alloclink    [42, 37, 2]
		alloclink    [43, 38, 3]
		alloclink    [44, 37, 0]
		alloclink    [45, 36, 4]
		alloclink    [46, 36, 3]
		alloclink    [47, 37, 1]
		alloclink    [48, 36, 2]
		alloclink    [49, 36, 1]
		alloclink    [50, 36, 0]
		getfromlist  [51, 34, 0]
		getfromlist  [52, 31, 0]
		getlink      [53, 2, 1]
		unifylinks     [50, 53, 0]
		unifylinks     [49, 52, 0]
		unifylinks     [48, 47, 0]
		getlink      [54, 1, 3]
		unifylinks     [46, 54, 0]
		getlink      [55, 1, 4]
		unifylinks     [45, 55, 0]
		unifylinks     [44, 43, 0]
		getlink      [56, 1, 2]
		unifylinks     [42, 56, 0]
		unifylinks     [41, 51, 0]
		getlink      [57, 3, 1]
		unifylinks     [40, 57, 0]
		getlink      [58, 3, 2]
		unifylinks     [39, 58, 0]
		deleteconnectors[23, 32]
		deleteconnectors[25, 35]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [26]
		freeground     [28]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'types_'.'get_constraint'_4]
		derefatom    [3, 1, 1]
		isstring       [3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'get_constraint'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, 'none'_1]
		newatom      [5, 0, '[]'_1]
		relink         [4, 0, 1, 3, 0]
		relink         [5, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 14]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'types_'.'get_constraint'_4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'get_constraint'_4]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'types_'.'get_constraint'_5]
		newatom      [5, 0, 'types_'.'has_variable_named'_5]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newlink        [4, 0, 5, 4, 0]
		newlink        [4, 1, 6, 2, 0]
		newlink        [4, 2, 5, 3, 0]
		relink         [4, 3, 1, 2, 0]
		relink         [4, 4, 1, 3, 0]
		relink         [5, 0, 3, 1, 0]
		relink         [5, 1, 1, 1, 0]
		newlink        [5, 2, 7, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [7, 0, 3, 0, 0]
		loadmodule     [0, "types_"]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 34]
		findatom     [1, 0, 'types_'.'get_constraint'_5]
		derefatom    [9, 1, 2]
		isstring       [9]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		deref        [2, 1, 0, 0]
		func           [2, 'true'_1]
		newlist      [10]
		addtolist      [10, 7]
		newlist      [11]
		addtolist      [11, 4]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 8]
		isground     [12, 10, 11]
		commit         ["_Rtyp", 0]
		newlist      [13]
		getlink      [14, 3, 0]
		addtolist      [13, 14]
		removeatom     [1, 0, 'types_'.'get_constraint'_5]
		removeatom     [2, 0, 'true'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [13, 0]
		removeatom     [9, 0]
		getlink      [15, 3, 0]
		insertconnectorsinnull[16, [15]]
		newlist      [17]
		getlink      [18, 3, 0]
		addtolist      [17, 18]
		copyground   [19, 17, 0]
		getfromlist  [20, 19, 0]
		getfromlist  [21, 19, 1]
		copyground   [22, 17, 0]
		getfromlist  [23, 22, 0]
		getfromlist  [24, 22, 1]
		newatom      [25, 0, '.'_3]
		alloclink    [26, 25, 2]
		alloclink    [27, 25, 1]
		alloclink    [28, 25, 0]
		getfromlist  [29, 20, 0]
		getfromlist  [30, 23, 0]
		unifylinks     [28, 30, 0]
		getlink      [31, 3, 1]
		unifylinks     [27, 31, 0]
		getlink      [32, 1, 3]
		unifylinks     [26, 32, 0]
		getlink      [33, 1, 4]
		unifylinks     [29, 33, 0]
		deleteconnectors[16, 21]
		deleteconnectors[16, 24]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [17]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 37]
		findatom     [1, 0, 'types_'.'get_constraint'_5]
		derefatom    [9, 1, 2]
		isstring       [9]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		deref        [2, 1, 0, 0]
		func           [2, 'false'_1]
		newlist      [10]
		addtolist      [10, 7]
		newlist      [11]
		addtolist      [11, 4]
		addtolist      [11, 5]
		addtolist      [11, 6]
		addtolist      [11, 8]
		isground     [12, 10, 11]
		commit         ["_Rtyp", 0]
		newlist      [13]
		getlink      [14, 3, 0]
		addtolist      [13, 14]
		removeatom     [1, 0, 'types_'.'get_constraint'_5]
		removeatom     [2, 0, 'false'_1]
		removeatom     [3, 0, '.'_3]
		removeground   [13, 0]
		removeatom     [9, 0]
		getlink      [15, 3, 0]
		insertconnectorsinnull[16, [15]]
		newlist      [17]
		getlink      [18, 3, 0]
		addtolist      [17, 18]
		copyground   [19, 17, 0]
		getfromlist  [20, 19, 0]
		getfromlist  [21, 19, 1]
		copyatom     [22, 0, 9]
		newatom      [23, 0, 'types_'.'get_constraint'_4]
		newatom      [24, 0, '.'_3]
		alloclink    [25, 24, 2]
		alloclink    [26, 24, 0]
		alloclink    [27, 23, 3]
		alloclink    [28, 24, 1]
		alloclink    [29, 23, 2]
		alloclink    [30, 22, 0]
		alloclink    [31, 23, 1]
		alloclink    [32, 23, 0]
		getfromlist  [33, 20, 0]
		getlink      [34, 3, 1]
		unifylinks     [32, 34, 0]
		unifylinks     [31, 30, 0]
		unifylinks     [29, 28, 0]
		getlink      [35, 1, 4]
		unifylinks     [27, 35, 0]
		unifylinks     [26, 33, 0]
		getlink      [36, 1, 3]
		unifylinks     [25, 36, 0]
		deleteconnectors[16, 21]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [17]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 52]
		findatom     [1, 0, 'types_'.'has_variable_named'_5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		getlink      [9, 3, 1]
		getlink      [8, 3, 0]
		newlist      [11]
		addtolist      [11, 9]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 4]
		eqground       [11, 14]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		commit         ["_Rtyp", 0]
		newlist      [17]
		getlink      [18, 3, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 1, 1]
		addtolist      [19, 20]
		removeatom     [1, 0, 'types_'.'has_variable_named'_5]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [17, 0]
		removeground   [19, 0]
		getlink      [21, 3, 1]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 1]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 3, 1]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 1, 1]
		addtolist      [27, 28]
		copyground   [29, 25, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyground   [32, 27, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		newatom      [35, 0, 'true'_1]
		newatom      [36, 0, '.'_3]
		newatom      [37, 0, 'variable'_3]
		alloclink    [38, 37, 1]
		alloclink    [39, 37, 0]
		alloclink    [40, 36, 2]
		alloclink    [41, 36, 1]
		alloclink    [42, 37, 2]
		alloclink    [43, 36, 0]
		alloclink    [44, 35, 0]
		getfromlist  [45, 33, 0]
		getfromlist  [46, 30, 0]
		getlink      [47, 1, 4]
		unifylinks     [44, 47, 0]
		unifylinks     [43, 42, 0]
		getlink      [48, 2, 1]
		unifylinks     [41, 48, 0]
		getlink      [49, 1, 2]
		unifylinks     [40, 49, 0]
		getlink      [50, 3, 0]
		unifylinks     [39, 50, 0]
		unifylinks     [38, 46, 0]
		getlink      [51, 1, 3]
		unifylinks     [45, 51, 0]
		deleteconnectors[22, 31]
		deleteconnectors[24, 34]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [25]
		freeground     [27]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 56]
		findatom     [1, 0, 'types_'.'has_variable_named'_5]
		getlink      [7, 1, 4]
		getlink      [6, 1, 3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [10, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		getlink      [9, 3, 1]
		getlink      [8, 3, 0]
		newlist      [11]
		addtolist      [11, 9]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 4]
		neqground      [11, 14]
		newlist      [15]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		commit         ["_Rtyp", 0]
		newlist      [17]
		getlink      [18, 1, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 3, 1]
		addtolist      [19, 20]
		removeatom     [1, 0, 'types_'.'has_variable_named'_5]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [19, 0]
		removeground   [17, 0]
		getlink      [21, 3, 1]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 1, 1]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 1, 1]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 3, 1]
		addtolist      [27, 28]
		copyground   [29, 27, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyground   [32, 25, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		newatom      [35, 0, 'types_'.'has_variable_named'_5]
		newatom      [36, 0, '.'_3]
		newatom      [37, 0, 'variable'_3]
		alloclink    [38, 37, 1]
		alloclink    [39, 37, 0]
		alloclink    [40, 36, 2]
		alloclink    [41, 37, 2]
		alloclink    [42, 36, 0]
		alloclink    [43, 35, 4]
		alloclink    [44, 35, 3]
		alloclink    [45, 36, 1]
		alloclink    [46, 35, 2]
		alloclink    [47, 35, 1]
		alloclink    [48, 35, 0]
		getfromlist  [49, 30, 0]
		getfromlist  [50, 33, 0]
		getlink      [51, 2, 1]
		unifylinks     [48, 51, 0]
		unifylinks     [47, 50, 0]
		unifylinks     [46, 45, 0]
		getlink      [52, 1, 3]
		unifylinks     [44, 52, 0]
		getlink      [53, 1, 4]
		unifylinks     [43, 53, 0]
		unifylinks     [42, 41, 0]
		getlink      [54, 1, 2]
		unifylinks     [40, 54, 0]
		getlink      [55, 3, 0]
		unifylinks     [39, 55, 0]
		unifylinks     [38, 49, 0]
		deleteconnectors[22, 31]
		deleteconnectors[24, 34]
		loadmodule     [0, "types_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeground     [27]
		freeground     [25]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'types_'.'has_variable_named'_5]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rtyp", 0]
		removeatom     [1, 0, 'types_'.'has_variable_named'_5]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'false'_1]
		newatom      [4, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		relink         [3, 0, 1, 4, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @603                                              
Compiled Rule 
	--atommatch:
		spec           [2, 42]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'syntax'.'rule_from_ast'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 6, 0, 2]
		func           [7, 'apply'_3]
		deref        [10, 7, 1, 2]
		func           [10, '.'_3]
		deref        [12, 10, 1, 2]
		func           [12, '.'_3]
		deref        [13, 12, 1, 0]
		func           [13, '[]'_1]
		deref        [9, 7, 0, 1]
		func           [9, 'symbol'_2]
		deref        [11, 9, 0, 0]
		func           [11, "|"_1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, ":-"_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'rule_from_ast'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [7, 0, 'apply'_3]
		removeatom     [9, 0, 'symbol'_2]
		removeatom     [5, 0, ":-"_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [11, 0, "|"_1]
		removeatom     [10, 0, '.'_3]
		removeatom     [12, 0, '.'_3]
		removeatom     [13, 0, '[]'_1]
		removeatom     [8, 0, '[]'_1]
		newatom      [14, 0, 'rule'_4]
		newatom      [15, 0, 'syntax_'.'linearise'_3]
		newatom      [16, 0, ","_1]
		newatom      [17, 0, 'syntax_'.'linearise'_3]
		newatom      [18, 0, ","_1]
		newatom      [19, 0, 'syntax_'.'linearise'_3]
		newatom      [20, 0, ","_1]
		newlink        [14, 0, 15, 2, 0]
		newlink        [14, 1, 17, 2, 0]
		newlink        [14, 2, 19, 2, 0]
		relink         [14, 3, 1, 1, 0]
		newlink        [15, 0, 16, 0, 0]
		relink         [15, 1, 4, 0, 0]
		newlink        [17, 0, 18, 0, 0]
		relink         [17, 1, 10, 0, 0]
		newlink        [19, 0, 20, 0, 0]
		relink         [19, 1, 12, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [7]
		freeatom       [9]
		freeatom       [5]
		freeatom       [4]
		freeatom       [6]
		freeatom       [11]
		freeatom       [10]
		freeatom       [12]
		freeatom       [13]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 23]
	--memmatch:
		spec           [1, 14]
		findatom     [1, 0, 'syntax'.'rule_from_ast'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 0]
		func           [7, '[]'_1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, ":-"_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'rule_from_ast'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [5, 0, ":-"_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		newatom      [8, 0, 'rule'_4]
		newatom      [9, 0, 'syntax_'.'linearise'_3]
		newatom      [10, 0, ","_1]
		newatom      [11, 0, '[]'_1]
		newatom      [12, 0, 'syntax_'.'linearise'_3]
		newatom      [13, 0, ","_1]
		newlink        [8, 0, 9, 2, 0]
		newlink        [8, 1, 11, 0, 0]
		newlink        [8, 2, 12, 2, 0]
		relink         [8, 3, 1, 1, 0]
		newlink        [9, 0, 10, 0, 0]
		relink         [9, 1, 4, 0, 0]
		newlink        [12, 0, 13, 0, 0]
		relink         [12, 1, 6, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		freeatom       [6]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 12]
		findatom     [1, 0, 'syntax'.'rule_from_ast'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [6, 4, 1, 0]
		func           [6, '[]'_1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, ":-"_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'rule_from_ast'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [5, 0, ":-"_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [6, 0, '[]'_1]
		newatom      [7, 0, 'rule'_4]
		newatom      [8, 0, 'syntax_'.'linearise'_3]
		newatom      [9, 0, ","_1]
		newatom      [10, 0, '[]'_1]
		newatom      [11, 0, '[]'_1]
		newlink        [7, 0, 8, 2, 0]
		newlink        [7, 1, 10, 0, 0]
		newlink        [7, 2, 11, 0, 0]
		relink         [7, 3, 1, 1, 0]
		newlink        [8, 0, 9, 0, 0]
		relink         [8, 1, 4, 0, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		freeatom       [6]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 45]
		findatom     [1, 0, 'syntax_'.'linearise'_3]
		getlink      [5, 1, 2]
		getlink      [4, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		getlink      [6, 2, 1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		getlink      [7, 3, 0]
		newlist      [8]
		addtolist      [8, 4]
		newlist      [9]
		addtolist      [9, 5]
		addtolist      [9, 6]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 7]
		neqground      [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		isground     [13, 11, 12]
		commit         ["_Rsyn", 0]
		newlist      [14]
		getlink      [15, 3, 0]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 1, 0]
		addtolist      [16, 17]
		removeatom     [1, 0, 'syntax_'.'linearise'_3]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeground   [16, 0]
		removeground   [14, 0]
		getlink      [18, 1, 0]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 3, 0]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 3, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 1, 0]
		addtolist      [24, 25]
		copyground   [26, 22, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		newatom      [29, 0, '.'_3]
		newatom      [30, 0, 'apply'_3]
		newatom      [31, 0, 'symbol'_2]
		newatom      [32, 0, '[]'_1]
		alloclink    [33, 31, 0]
		alloclink    [34, 30, 1]
		alloclink    [35, 31, 1]
		alloclink    [36, 30, 0]
		alloclink    [37, 29, 2]
		alloclink    [38, 32, 0]
		alloclink    [39, 29, 1]
		alloclink    [40, 30, 2]
		alloclink    [41, 29, 0]
		getfromlist  [42, 27, 0]
		unifylinks     [41, 40, 0]
		unifylinks     [39, 38, 0]
		getlink      [43, 1, 2]
		unifylinks     [37, 43, 0]
		unifylinks     [36, 35, 0]
		getlink      [44, 2, 1]
		unifylinks     [34, 44, 0]
		unifylinks     [33, 42, 0]
		deleteconnectors[21, 28]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [24]
		freeground     [22]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 29]
	--memmatch:
		spec           [1, 66]
		findatom     [1, 0, 'syntax_'.'linearise'_3]
		getlink      [10, 1, 2]
		getlink      [9, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		getlink      [14, 4, 0]
		deref        [5, 4, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 5, 0, 2]
		func           [6, 'apply'_3]
		getlink      [12, 6, 1]
		deref        [8, 6, 0, 1]
		func           [8, 'symbol'_2]
		getlink      [13, 8, 0]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		getlink      [11, 3, 0]
		newlist      [15]
		addtolist      [15, 9]
		newlist      [16]
		addtolist      [16, 10]
		addtolist      [16, 11]
		addtolist      [16, 12]
		addtolist      [16, 13]
		addtolist      [16, 14]
		isground     [17, 15, 16]
		newlist      [18]
		addtolist      [18, 13]
		neqground      [15, 18]
		newlist      [19]
		addtolist      [19, 9]
		addtolist      [19, 10]
		addtolist      [19, 11]
		addtolist      [19, 12]
		addtolist      [19, 14]
		isground     [20, 18, 19]
		newlist      [21]
		addtolist      [21, 11]
		eqground       [15, 21]
		newlist      [22]
		addtolist      [22, 9]
		addtolist      [22, 10]
		addtolist      [22, 12]
		addtolist      [22, 13]
		addtolist      [22, 14]
		isground     [23, 21, 22]
		commit         ["_Rsyn", 0]
		newlist      [24]
		getlink      [25, 3, 0]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 8, 0]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 1, 0]
		addtolist      [28, 29]
		removeatom     [1, 0, 'syntax_'.'linearise'_3]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [6, 0, 'apply'_3]
		removeatom     [8, 0, 'symbol'_2]
		removeatom     [4, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeground   [26, 0]
		removeground   [28, 0]
		removeground   [24, 0]
		getlink      [30, 8, 0]
		insertconnectorsinnull[31, [30]]
		getlink      [32, 1, 0]
		insertconnectorsinnull[33, [32]]
		getlink      [34, 3, 0]
		insertconnectorsinnull[35, [34]]
		newlist      [36]
		getlink      [37, 3, 0]
		addtolist      [36, 37]
		newlist      [38]
		getlink      [39, 8, 0]
		addtolist      [38, 39]
		newlist      [40]
		getlink      [41, 1, 0]
		addtolist      [40, 41]
		copyground   [42, 38, 0]
		getfromlist  [43, 42, 0]
		getfromlist  [44, 42, 1]
		newatom      [45, 0, '.'_3]
		newatom      [46, 0, '.'_3]
		newatom      [47, 0, 'apply'_3]
		newatom      [48, 0, 'symbol'_2]
		newatom      [49, 0, '[]'_1]
		alloclink    [50, 48, 0]
		alloclink    [51, 47, 1]
		alloclink    [52, 48, 1]
		alloclink    [53, 47, 0]
		alloclink    [54, 49, 0]
		alloclink    [55, 46, 1]
		alloclink    [56, 47, 2]
		alloclink    [57, 46, 0]
		alloclink    [58, 45, 2]
		alloclink    [59, 46, 2]
		alloclink    [60, 45, 1]
		alloclink    [61, 45, 0]
		getfromlist  [62, 43, 0]
		getlink      [63, 4, 0]
		unifylinks     [61, 63, 0]
		unifylinks     [60, 59, 0]
		getlink      [64, 1, 2]
		unifylinks     [58, 64, 0]
		unifylinks     [57, 56, 0]
		unifylinks     [55, 54, 0]
		unifylinks     [53, 52, 0]
		getlink      [65, 6, 1]
		unifylinks     [51, 65, 0]
		unifylinks     [50, 62, 0]
		deleteconnectors[31, 44]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeground     [38]
		freeground     [40]
		freeground     [36]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 29]
	--memmatch:
		spec           [1, 68]
		findatom     [1, 0, 'syntax_'.'linearise'_3]
		getlink      [10, 1, 2]
		getlink      [9, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		getlink      [14, 4, 0]
		deref        [5, 4, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 5, 0, 2]
		func           [6, 'apply'_3]
		getlink      [12, 6, 1]
		deref        [8, 6, 0, 1]
		func           [8, 'symbol'_2]
		getlink      [13, 8, 0]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		getlink      [11, 3, 0]
		newlist      [15]
		addtolist      [15, 9]
		newlist      [16]
		addtolist      [16, 10]
		addtolist      [16, 11]
		addtolist      [16, 12]
		addtolist      [16, 13]
		addtolist      [16, 14]
		isground     [17, 15, 16]
		newlist      [18]
		addtolist      [18, 11]
		eqground       [15, 18]
		newlist      [19]
		addtolist      [19, 9]
		addtolist      [19, 10]
		addtolist      [19, 12]
		addtolist      [19, 13]
		addtolist      [19, 14]
		isground     [20, 18, 19]
		newlist      [21]
		addtolist      [21, 13]
		eqground       [15, 21]
		newlist      [22]
		addtolist      [22, 9]
		addtolist      [22, 10]
		addtolist      [22, 11]
		addtolist      [22, 12]
		addtolist      [22, 14]
		isground     [23, 21, 22]
		commit         ["_Rsyn", 0]
		newlist      [24]
		getlink      [25, 3, 0]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 8, 0]
		addtolist      [26, 27]
		newlist      [28]
		getlink      [29, 1, 0]
		addtolist      [28, 29]
		removeatom     [1, 0, 'syntax_'.'linearise'_3]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [6, 0, 'apply'_3]
		removeatom     [8, 0, 'symbol'_2]
		removeatom     [4, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeground   [26, 0]
		removeground   [28, 0]
		removeground   [24, 0]
		getlink      [30, 8, 0]
		insertconnectorsinnull[31, [30]]
		getlink      [32, 1, 0]
		insertconnectorsinnull[33, [32]]
		getlink      [34, 3, 0]
		insertconnectorsinnull[35, [34]]
		newlist      [36]
		getlink      [37, 3, 0]
		addtolist      [36, 37]
		newlist      [38]
		getlink      [39, 8, 0]
		addtolist      [38, 39]
		newlist      [40]
		getlink      [41, 1, 0]
		addtolist      [40, 41]
		copyground   [42, 38, 0]
		getfromlist  [43, 42, 0]
		getfromlist  [44, 42, 1]
		copyground   [45, 40, 0]
		getfromlist  [46, 45, 0]
		getfromlist  [47, 45, 1]
		newatom      [48, 0, '.'_3]
		newatom      [49, 0, 'syntax_'.'linearise'_3]
		newatom      [50, 0, 'apply'_3]
		newatom      [51, 0, 'symbol'_2]
		alloclink    [52, 51, 0]
		alloclink    [53, 50, 1]
		alloclink    [54, 51, 1]
		alloclink    [55, 50, 0]
		alloclink    [56, 50, 2]
		alloclink    [57, 49, 1]
		alloclink    [58, 49, 0]
		alloclink    [59, 48, 2]
		alloclink    [60, 49, 2]
		alloclink    [61, 48, 1]
		alloclink    [62, 48, 0]
		getfromlist  [63, 43, 0]
		getfromlist  [64, 46, 0]
		getlink      [65, 4, 0]
		unifylinks     [62, 65, 0]
		unifylinks     [61, 60, 0]
		getlink      [66, 1, 2]
		unifylinks     [59, 66, 0]
		unifylinks     [58, 64, 0]
		unifylinks     [57, 56, 0]
		unifylinks     [55, 54, 0]
		getlink      [67, 6, 1]
		unifylinks     [53, 67, 0]
		unifylinks     [52, 63, 0]
		deleteconnectors[31, 44]
		deleteconnectors[33, 47]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeground     [38]
		freeground     [40]
		freeground     [36]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 26]
	--memmatch:
		spec           [1, 36]
		findatom     [1, 0, 'syntax_'.'linearise'_3]
		getlink      [9, 1, 2]
		getlink      [8, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		getlink      [13, 4, 0]
		deref        [5, 4, 1, 2]
		func           [5, '.'_3]
		deref        [7, 5, 1, 0]
		func           [7, '[]'_1]
		deref        [6, 5, 0, 2]
		func           [6, 'process_context'_3]
		getlink      [12, 6, 1]
		getlink      [11, 6, 0]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		getlink      [10, 3, 0]
		newlist      [14]
		addtolist      [14, 8]
		newlist      [15]
		addtolist      [15, 9]
		addtolist      [15, 10]
		addtolist      [15, 11]
		addtolist      [15, 12]
		addtolist      [15, 13]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 10]
		eqground       [14, 17]
		newlist      [18]
		addtolist      [18, 8]
		addtolist      [18, 9]
		addtolist      [18, 11]
		addtolist      [18, 12]
		addtolist      [18, 13]
		isground     [19, 17, 18]
		commit         ["_Rsyn", 0]
		newlist      [20]
		getlink      [21, 1, 0]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 3, 0]
		addtolist      [22, 23]
		removeatom     [1, 0, 'syntax_'.'linearise'_3]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [6, 0, 'process_context'_3]
		removeatom     [4, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeground   [20, 0]
		removeground   [22, 0]
		getlink      [24, 1, 0]
		insertconnectorsinnull[25, [24]]
		getlink      [26, 3, 0]
		insertconnectorsinnull[27, [26]]
		newlist      [28]
		getlink      [29, 1, 0]
		addtolist      [28, 29]
		newlist      [30]
		getlink      [31, 3, 0]
		addtolist      [30, 31]
		newatom      [32, 0, '.'_3]
		newatom      [33, 0, '.'_3]
		newatom      [34, 0, 'process_context'_3]
		newatom      [35, 0, '[]'_1]
		relink         [32, 0, 4, 0, 0]
		newlink        [32, 1, 33, 2, 0]
		relink         [32, 2, 1, 2, 0]
		newlink        [33, 0, 34, 2, 0]
		newlink        [33, 1, 35, 0, 0]
		relink         [34, 0, 6, 0, 0]
		relink         [34, 1, 6, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [6]
		freeatom       [4]
		freeatom       [5]
		freeatom       [7]
		freeground     [28]
		freeground     [30]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'syntax'.'normalize'_2]
		deref        [2, 1, 0, 3]
		func           [2, 'rule'_4]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'normalize'_2]
		removeatom     [2, 0, 'rule'_4]
		newatom      [3, 0, 'rule'_4]
		newatom      [4, 0, 'syntax_'.'conv_proccxt_link'_2]
		newatom      [5, 0, 'syntax_'.'conv_proccxt_link'_2]
		newatom      [6, 0, 'syntax_'.'conv_proccxt_link'_2]
		newatom      [7, 0, 'syntax_'.'insert_links'_3]
		newatom      [8, 0, 1386_1]
		newatom      [9, 0, 'syntax_'.'insert_links'_3]
		newatom      [10, 0, 9948_1]
		newatom      [11, 0, 'syntax_'.'delete_equal'_3]
		newatom      [12, 0, "="_1]
		newatom      [13, 0, 'syntax_'.'delete_equal'_3]
		newatom      [14, 0, "="_1]
		newatom      [15, 0, 'syntax_'.'delete_equal'_3]
		newatom      [16, 0, "="_1]
		newatom      [17, 0, 'syntax_'.'conv_guard_link'_6]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 5, 1, 0]
		newlink        [3, 2, 6, 1, 0]
		relink         [3, 3, 1, 1, 0]
		newlink        [4, 0, 7, 2, 0]
		newlink        [5, 0, 13, 2, 0]
		newlink        [6, 0, 9, 2, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [7, 1, 11, 2, 0]
		newlink        [9, 0, 10, 0, 0]
		newlink        [9, 1, 15, 2, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [11, 1, 17, 3, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [13, 1, 17, 4, 0]
		newlink        [15, 0, 16, 0, 0]
		newlink        [15, 1, 17, 5, 0]
		relink         [17, 0, 2, 0, 0]
		relink         [17, 1, 2, 1, 0]
		relink         [17, 2, 2, 2, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'insert_links'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links'_3]
		newatom      [2, 0, 'syntax_'.'merge'_3]
		newatom      [3, 0, 'syntax_'.'insert_links0'_6]
		newatom      [4, 0, '[]'_1]
		newatom      [5, 0, 'syntax_'.'make_var'_2]
		newatom      [6, 0, '[]'_1]
		newlink        [2, 0, 3, 5, 0]
		newlink        [2, 1, 3, 0, 0]
		relink         [2, 2, 1, 2, 0]
		newlink        [3, 1, 4, 0, 0]
		newlink        [3, 2, 5, 1, 0]
		newlink        [3, 3, 6, 0, 0]
		relink         [3, 4, 1, 1, 0]
		relink         [5, 0, 1, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'syntax_'.'merge'_3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'merge'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'syntax_'.'merge'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'merge'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'syntax_'.'merge'_3]
		newatom      [4, 0, '.'_3]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 1, 0, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'syntax_'.'insert_links0'_6]
		deref        [2, 1, 4, 0]
		func           [2, '[]'_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links0'_6]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		unify          [1, 0, 1, 1, 0]
		unify          [1, 2, 1, 3, 0]
		relink         [3, 0, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'syntax_'.'insert_links0'_6]
		deref        [2, 1, 4, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links0'_6]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'syntax_'.'insert_links1'_6]
		newatom      [7, 0, 'syntax_'.'insert_links0'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 5, 0]
		relink         [4, 2, 1, 5, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 5, 0]
		newlink        [6, 0, 7, 1, 0]
		relink         [6, 1, 1, 1, 0]
		newlink        [6, 2, 7, 3, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 3, 1, 0]
		relink         [7, 0, 1, 0, 0]
		relink         [7, 2, 1, 2, 0]
		relink         [7, 4, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'insert_links0'_6]
		deref        [2, 1, 4, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links0'_6]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'process_context'_3]
		newatom      [6, 0, 'syntax_'.'insert_links0'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 5, 0]
		relink         [4, 2, 1, 5, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 2, 1, 2, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'syntax_'.'insert_links1'_6]
		deref        [2, 1, 4, 0]
		func           [2, '[]'_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links1'_6]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		unify          [1, 0, 1, 1, 0]
		unify          [1, 2, 1, 3, 0]
		relink         [3, 0, 1, 5, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 12]
		findatom     [1, 0, 'syntax_'.'insert_links1'_6]
		deref        [2, 1, 4, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links1'_6]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'syntax_'.'insert_links1'_6]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '[]'_1]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'v'_3]
		newlink        [4, 0, 11, 0, 0]
		newlink        [4, 1, 5, 5, 0]
		relink         [4, 2, 1, 5, 0]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [5, 3, 10, 2, 0]
		relink         [5, 4, 2, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [7, 0, 3, 0, 0]
		newlink        [7, 1, 8, 2, 0]
		newlink        [8, 0, 11, 1, 0]
		newlink        [8, 1, 9, 0, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 1, 3, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 14]
		findatom     [1, 0, 'syntax_'.'insert_links1'_6]
		deref        [2, 1, 4, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links1'_6]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'syntax_'.'insert_links1'_6]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, 'list'.'append'_3]
		newatom      [9, 0, 'syntax_'.'insert_links1'_6]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, 'v'_3]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, '[]'_1]
		newlink        [4, 0, 11, 0, 0]
		newlink        [4, 1, 5, 5, 0]
		relink         [4, 2, 1, 5, 0]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [5, 3, 9, 2, 0]
		relink         [5, 4, 2, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 9, 0, 0]
		relink         [7, 0, 3, 0, 0]
		newlink        [7, 1, 8, 2, 0]
		newlink        [8, 0, 9, 5, 0]
		newlink        [8, 1, 12, 2, 0]
		relink         [9, 1, 1, 1, 0]
		newlink        [9, 3, 10, 2, 0]
		relink         [9, 4, 3, 1, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [10, 1, 1, 3, 0]
		newlink        [11, 1, 12, 0, 0]
		newlink        [12, 1, 13, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "list"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'insert_links1'_6]
		deref        [2, 1, 4, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links1'_6]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'variable'_3]
		newatom      [6, 0, 'syntax_'.'insert_links1'_6]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 5, 0]
		relink         [4, 2, 1, 5, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [6, 2, 1, 2, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 4, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'syntax_'.'insert_links1'_6]
		deref        [2, 1, 4, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'insert_links1'_6]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'syntax_'.'insert_links1'_6]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'process_context'_3]
		newatom      [8, 0, 'syntax_'.'add_proc_link'_3]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'v'_3]
		newlink        [4, 0, 10, 0, 0]
		newlink        [4, 1, 5, 5, 0]
		relink         [4, 2, 1, 5, 0]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [5, 3, 9, 2, 0]
		relink         [5, 4, 2, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 1, 1, 0]
		relink         [7, 0, 3, 0, 0]
		newlink        [7, 1, 8, 2, 0]
		relink         [8, 0, 3, 1, 0]
		newlink        [8, 1, 10, 1, 0]
		newlink        [9, 0, 10, 2, 0]
		relink         [9, 1, 1, 3, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'syntax_'.'make_var'_2]
		derefatom    [3, 1, 0]
		isint          [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'make_var'_2]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'syntax_'.'make_var'_2]
		derefatom    [5, 1, 0]
		isint          [5]
		allocatom    [4, 1_1]
		iadd         [6, 5, 4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'v'_3]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'make_var'_2]
		removeatom     [3, 0, 'v'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [7, 0, 6]
		copyatom     [8, 0, 5]
		copyatom     [9, 0, 5]
		copyatom     [10, 0, 5]
		copyatom     [11, 0, 5]
		newatom      [12, 0, 'syntax_'.'make_var'_2]
		newatom      [13, 0, 'variable'_3]
		newatom      [14, 0, 'string'.'concat'_3]
		newatom      [15, 0, "_L"_1]
		newatom      [16, 0, 'string'.'from'_2]
		newatom      [17, 0, 'variable'_3]
		newatom      [18, 0, 'string'.'concat'_3]
		newatom      [19, 0, "_L"_1]
		newatom      [20, 0, 'string'.'from'_2]
		newlink        [12, 0, 7, 0, 0]
		relink         [12, 1, 2, 1, 0]
		newlink        [13, 0, 8, 0, 0]
		newlink        [13, 1, 14, 2, 0]
		relink         [13, 2, 3, 0, 0]
		newlink        [14, 0, 15, 0, 0]
		newlink        [14, 1, 16, 1, 0]
		newlink        [16, 0, 9, 0, 0]
		newlink        [17, 0, 10, 0, 0]
		newlink        [17, 1, 18, 2, 0]
		relink         [17, 2, 3, 1, 0]
		newlink        [18, 0, 19, 0, 0]
		newlink        [18, 1, 20, 1, 0]
		newlink        [20, 0, 11, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 12]
		findatom     [1, 0, 'syntax_'.'add_proc_link'_3]
		deref        [2, 1, 0, 0]
		func           [2, 'none'_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'add_proc_link'_3]
		removeatom     [2, 0, 'none'_1]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, 'symbol'_2]
		newatom      [5, 0, "::"_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'atom'_2]
		newatom      [9, 0, 'symbol'_2]
		newatom      [10, 0, "[]"_1]
		newatom      [11, 0, '[]'_1]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 6, 2, 0]
		relink         [3, 2, 1, 2, 0]
		newlink        [4, 0, 5, 0, 0]
		relink         [6, 0, 1, 1, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [7, 0, 8, 1, 0]
		newlink        [7, 1, 11, 0, 0]
		newlink        [8, 0, 9, 1, 0]
		newlink        [9, 0, 10, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'syntax_'.'delete_equal'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'delete_equal'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 26]
	--memmatch:
		spec           [1, 52]
		findatom     [1, 0, 'syntax_'.'delete_equal'_3]
		getlink      [9, 1, 2]
		getlink      [8, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [11, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		deref        [5, 3, 1, 2]
		func           [5, '.'_3]
		getlink      [12, 5, 0]
		deref        [6, 5, 1, 2]
		func           [6, '.'_3]
		getlink      [13, 6, 0]
		deref        [7, 6, 1, 0]
		func           [7, '[]'_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		getlink      [10, 4, 0]
		newlist      [14]
		addtolist      [14, 8]
		newlist      [15]
		addtolist      [15, 9]
		addtolist      [15, 10]
		addtolist      [15, 11]
		addtolist      [15, 12]
		addtolist      [15, 13]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 10]
		eqground       [14, 17]
		newlist      [18]
		addtolist      [18, 8]
		addtolist      [18, 9]
		addtolist      [18, 11]
		addtolist      [18, 12]
		addtolist      [18, 13]
		isground     [19, 17, 18]
		commit         ["_Rsyn", 0]
		newlist      [20]
		getlink      [21, 1, 0]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 4, 0]
		addtolist      [22, 23]
		removeatom     [1, 0, 'syntax_'.'delete_equal'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		removeground   [20, 0]
		removeground   [22, 0]
		getlink      [24, 1, 0]
		insertconnectorsinnull[25, [24]]
		getlink      [26, 4, 0]
		insertconnectorsinnull[27, [26]]
		newlist      [28]
		getlink      [29, 1, 0]
		addtolist      [28, 29]
		newlist      [30]
		getlink      [31, 4, 0]
		addtolist      [30, 31]
		copyground   [32, 28, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		newatom      [35, 0, '.'_3]
		newatom      [36, 0, 'syntax'.'equal'_3]
		newatom      [37, 0, 'syntax_'.'delete_equal'_3]
		alloclink    [38, 37, 1]
		alloclink    [39, 37, 0]
		alloclink    [40, 36, 1]
		alloclink    [41, 36, 0]
		alloclink    [42, 35, 2]
		alloclink    [43, 37, 2]
		alloclink    [44, 35, 1]
		alloclink    [45, 36, 2]
		alloclink    [46, 35, 0]
		getfromlist  [47, 33, 0]
		unifylinks     [46, 45, 0]
		unifylinks     [44, 43, 0]
		getlink      [48, 1, 2]
		unifylinks     [42, 48, 0]
		getlink      [49, 5, 0]
		unifylinks     [41, 49, 0]
		getlink      [50, 6, 0]
		unifylinks     [40, 50, 0]
		unifylinks     [39, 47, 0]
		getlink      [51, 2, 1]
		unifylinks     [38, 51, 0]
		deleteconnectors[25, 34]
		loadmodule     [0, "syntax"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeatom       [5]
		freeatom       [6]
		freeatom       [7]
		freeground     [28]
		freeground     [30]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 54]
		findatom     [1, 0, 'syntax_'.'delete_equal'_3]
		getlink      [6, 1, 2]
		getlink      [5, 1, 0]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink      [9, 2, 1]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		getlink      [7, 3, 1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		getlink      [8, 4, 0]
		newlist      [10]
		addtolist      [10, 5]
		newlist      [11]
		addtolist      [11, 6]
		addtolist      [11, 7]
		addtolist      [11, 8]
		addtolist      [11, 9]
		isground     [12, 10, 11]
		newlist      [13]
		addtolist      [13, 8]
		neqground      [10, 13]
		newlist      [14]
		addtolist      [14, 5]
		addtolist      [14, 6]
		addtolist      [14, 7]
		addtolist      [14, 9]
		isground     [15, 13, 14]
		commit         ["_Rsyn", 0]
		newlist      [16]
		getlink      [17, 4, 0]
		addtolist      [16, 17]
		newlist      [18]
		getlink      [19, 1, 0]
		addtolist      [18, 19]
		removeatom     [1, 0, 'syntax_'.'delete_equal'_3]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [2, 0, '.'_3]
		removeground   [18, 0]
		removeground   [16, 0]
		getlink      [20, 1, 0]
		insertconnectorsinnull[21, [20]]
		getlink      [22, 4, 0]
		insertconnectorsinnull[23, [22]]
		newlist      [24]
		getlink      [25, 4, 0]
		addtolist      [24, 25]
		newlist      [26]
		getlink      [27, 1, 0]
		addtolist      [26, 27]
		copyground   [28, 26, 0]
		getfromlist  [29, 28, 0]
		getfromlist  [30, 28, 1]
		copyground   [31, 24, 0]
		getfromlist  [32, 31, 0]
		getfromlist  [33, 31, 1]
		newatom      [34, 0, '.'_3]
		newatom      [35, 0, 'apply'_3]
		newatom      [36, 0, 'symbol'_2]
		newatom      [37, 0, 'syntax_'.'delete_equal'_3]
		alloclink    [38, 37, 1]
		alloclink    [39, 37, 0]
		alloclink    [40, 36, 0]
		alloclink    [41, 35, 1]
		alloclink    [42, 36, 1]
		alloclink    [43, 35, 0]
		alloclink    [44, 34, 2]
		alloclink    [45, 37, 2]
		alloclink    [46, 34, 1]
		alloclink    [47, 35, 2]
		alloclink    [48, 34, 0]
		getfromlist  [49, 29, 0]
		getfromlist  [50, 32, 0]
		unifylinks     [48, 47, 0]
		unifylinks     [46, 45, 0]
		getlink      [51, 1, 2]
		unifylinks     [44, 51, 0]
		unifylinks     [43, 42, 0]
		getlink      [52, 3, 1]
		unifylinks     [41, 52, 0]
		unifylinks     [40, 50, 0]
		unifylinks     [39, 49, 0]
		getlink      [53, 2, 1]
		unifylinks     [38, 53, 0]
		deleteconnectors[21, 30]
		deleteconnectors[23, 33]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [2]
		freeground     [26]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'syntax_'.'delete_equal'_3]
		derefatom    [4, 1, 0]
		isstring       [4]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'delete_equal'_3]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [5, 0, 4]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'process_context'_3]
		newatom      [8, 0, 'syntax_'.'delete_equal'_3]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 8, 2, 0]
		relink         [6, 2, 1, 2, 0]
		relink         [7, 0, 3, 0, 0]
		relink         [7, 1, 3, 1, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'syntax'.'equal'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'variable'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'equal'_3]
		removeatom     [2, 0, 'variable'_3]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, 'symbol'_2]
		newatom      [5, 0, "="_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'variable'_3]
		newatom      [9, 0, '[]'_1]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 6, 2, 0]
		relink         [3, 2, 1, 2, 0]
		newlink        [4, 0, 5, 0, 0]
		relink         [6, 0, 1, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [7, 0, 8, 2, 0]
		newlink        [7, 1, 9, 0, 0]
		relink         [8, 0, 2, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax'.'equal'_3]
		deref        [2, 1, 1, 2]
		func           [2, 'apply'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'equal'_3]
		removeatom     [2, 0, 'apply'_3]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, 'list'.'append'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, '[]'_1]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 2, 1, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [5, 0, 1, 0, 0]
		newlink        [5, 1, 6, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'syntax'.'equal'_3]
		deref        [2, 1, 1, 1]
		func           [2, 'atom'_2]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'equal'_3]
		removeatom     [2, 0, 'atom'_2]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, '[]'_1]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 0, 0]
		newlink        [4, 1, 5, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 16]
		findatom     [1, 0, 'syntax'.'equal'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'process_context'_3]
		deref        [4, 3, 1, 0]
		func           [4, 'none'_1]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax'.'equal'_3]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [4, 0, 'none'_1]
		newatom      [5, 0, 'process_context'_3]
		newatom      [6, 0, 'apply'_3]
		newatom      [7, 0, 'symbol'_2]
		newatom      [8, 0, "::"_1]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'variable'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'atom'_2]
		newatom      [13, 0, 'symbol'_2]
		newatom      [14, 0, "[]"_1]
		newatom      [15, 0, '[]'_1]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 2, 0]
		relink         [5, 2, 1, 2, 0]
		newlink        [6, 0, 7, 1, 0]
		newlink        [6, 1, 9, 2, 0]
		newlink        [7, 0, 8, 0, 0]
		newlink        [9, 0, 10, 2, 0]
		newlink        [9, 1, 11, 2, 0]
		relink         [10, 0, 2, 0, 0]
		relink         [10, 1, 2, 1, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 15, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [13, 0, 14, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'syntax_'.'conv_guard_link'_6]
		newatom      [5, 0, 'syntax_'.'conv_guard_link'_6]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 3, 1, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [4, 3, 5, 0, 0]
		newlink        [4, 4, 7, 1, 0]
		newlink        [4, 5, 5, 2, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 3, 1, 3, 0]
		newlink        [5, 4, 6, 1, 0]
		relink         [5, 5, 1, 5, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 2, 1, 4, 0]
		relink         [7, 0, 3, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'atom'_2]
		newatom      [6, 0, 'syntax_'.'conv_guard_link'_6]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 4, 0]
		relink         [4, 2, 1, 4, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [6, 0, 1, 0, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [6, 2, 1, 2, 0]
		relink         [6, 3, 1, 3, 0]
		relink         [6, 5, 1, 5, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		deref        [5, 3, 1, 0]
		func           [5, 'none'_1]
		deref        [4, 3, 0, 1]
		func           [4, 'symbol'_2]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [4, 0, 'symbol'_2]
		removeatom     [5, 0, 'none'_1]
		removeatom     [2, 0, '.'_3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'process_context'_3]
		newatom      [8, 0, 'none'_1]
		newatom      [9, 0, 'syntax_'.'conv_guard_link'_6]
		newlink        [6, 0, 7, 2, 0]
		newlink        [6, 1, 9, 4, 0]
		relink         [6, 2, 1, 4, 0]
		relink         [7, 0, 4, 0, 0]
		newlink        [7, 1, 8, 0, 0]
		relink         [9, 0, 1, 0, 0]
		relink         [9, 1, 2, 1, 0]
		relink         [9, 2, 1, 2, 0]
		relink         [9, 3, 1, 3, 0]
		relink         [9, 5, 1, 5, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 3, 1, 0, 0]
		newatom      [3, 0, '[]'_1]
		unify          [1, 5, 1, 2, 0]
		relink         [3, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'variable'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		derefatom    [4, 3, 0]
		isint          [4]
		commit         ["_synt", 0]
		removeatom     [1, 0, 'syntax_'.'conv_guard_link'_6]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		removeatom     [5, 0]
		copyatom     [6, 0, 4]
		copyatom     [7, 0, 4]
		copyatom     [8, 0, 5]
		copyatom     [9, 0, 5]
		copyatom     [10, 0, 5]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'process_context'_3]
		newatom      [13, 0, 'none'_1]
		newatom      [14, 0, 'syntax_'.'conv_guard_link'_6]
		newatom      [15, 0, 'map'_3]
		newatom      [16, 0, 'lambda'_3]
		newatom      [17, 0, 'syntax_'.'conv_head'_3]
		newatom      [18, 0, 'variable'_3]
		newatom      [19, 0, 'map'_3]
		newatom      [20, 0, 'lambda'_3]
		newatom      [21, 0, 'syntax_'.'conv_head'_3]
		newatom      [22, 0, 'variable'_3]
		newlink        [11, 0, 12, 2, 0]
		newlink        [11, 1, 14, 4, 0]
		relink         [11, 2, 1, 4, 0]
		newlink        [12, 0, 8, 0, 0]
		newlink        [12, 1, 13, 0, 0]
		newlink        [14, 0, 15, 2, 0]
		relink         [14, 1, 2, 1, 0]
		newlink        [14, 2, 19, 2, 0]
		relink         [14, 3, 1, 3, 0]
		relink         [14, 5, 1, 5, 0]
		newlink        [15, 0, 16, 2, 0]
		relink         [15, 1, 1, 0, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 17, 2, 0]
		newlink        [17, 1, 18, 2, 0]
		newlink        [18, 0, 6, 0, 0]
		newlink        [18, 1, 9, 0, 0]
		newlink        [19, 0, 20, 2, 0]
		relink         [19, 1, 1, 2, 0]
		newlink        [20, 0, 21, 0, 0]
		newlink        [20, 1, 21, 2, 0]
		newlink        [21, 1, 22, 2, 0]
		newlink        [22, 0, 7, 0, 0]
		newlink        [22, 1, 10, 0, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'syntax_'.'conv_head'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_head'_3]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'variable'_3]
		newatom      [4, 0, 'apply'_3]
		newatom      [5, 0, 'map'_3]
		newatom      [6, 0, 'lambda'_3]
		newatom      [7, 0, 'syntax_'.'conv_head'_3]
		newatom      [8, 0, 'variable'_3]
		relink         [4, 0, 2, 0, 0]
		newlink        [4, 1, 5, 2, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 2, 1, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [7, 1, 8, 2, 0]
		relink         [8, 0, 3, 0, 0]
		relink         [8, 1, 3, 1, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 40]
		findatom     [1, 0, 'syntax_'.'conv_head'_3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [10, 3, 0]
		isint          [10]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [9, 2, 0]
		isint          [9]
		ieq            [9, 10]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		newlist      [11]
		addtolist      [11, 6]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 7]
		addtolist      [12, 8]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 8]
		eqground       [11, 14]
		newlist      [15]
		addtolist      [15, 4]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		isground     [16, 14, 15]
		commit         ["_Rsyn", 0]
		newlist      [17]
		getlink      [18, 3, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 2, 1]
		addtolist      [19, 20]
		removeatom     [1, 0, 'syntax_'.'conv_head'_3]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, 'variable'_3]
		removeground   [19, 0]
		removeground   [17, 0]
		removeatom     [9, 0]
		removeatom     [10, 0]
		getlink      [21, 2, 1]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 3, 1]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 3, 1]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 2, 1]
		addtolist      [27, 28]
		copyground   [29, 27, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		newatom      [32, 0, 'process_context'_3]
		newatom      [33, 0, 'none'_1]
		alloclink    [34, 32, 2]
		alloclink    [35, 33, 0]
		alloclink    [36, 32, 1]
		alloclink    [37, 32, 0]
		getfromlist  [38, 30, 0]
		unifylinks     [37, 38, 0]
		unifylinks     [36, 35, 0]
		getlink      [39, 1, 2]
		unifylinks     [34, 39, 0]
		deleteconnectors[22, 31]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [27]
		freeground     [25]
		freeatom       [9]
		freeatom       [10]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 40]
		findatom     [1, 0, 'syntax_'.'conv_head'_3]
		getlink      [4, 1, 2]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [10, 3, 0]
		isint          [10]
		getlink      [8, 3, 1]
		getlink      [7, 3, 0]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		derefatom    [9, 2, 0]
		isint          [9]
		ine            [9, 10]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		newlist      [11]
		addtolist      [11, 6]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 7]
		addtolist      [12, 8]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 8]
		neqground      [11, 14]
		newlist      [15]
		addtolist      [15, 4]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		isground     [16, 14, 15]
		commit         ["_Rsyn", 0]
		newlist      [17]
		getlink      [18, 3, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 2, 1]
		addtolist      [19, 20]
		removeatom     [1, 0, 'syntax_'.'conv_head'_3]
		removeatom     [2, 0, 'variable'_3]
		removeatom     [3, 0, 'variable'_3]
		removeground   [19, 0]
		removeground   [17, 0]
		removeatom     [9, 0]
		removeatom     [10, 0]
		getlink      [21, 2, 1]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 3, 1]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 3, 1]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 2, 1]
		addtolist      [27, 28]
		copyground   [29, 27, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyatom     [32, 0, 9]
		newatom      [33, 0, 'variable'_3]
		alloclink    [34, 33, 2]
		alloclink    [35, 33, 1]
		alloclink    [36, 32, 0]
		alloclink    [37, 33, 0]
		getfromlist  [38, 30, 0]
		unifylinks     [37, 36, 0]
		unifylinks     [35, 38, 0]
		getlink      [39, 1, 2]
		unifylinks     [34, 39, 0]
		deleteconnectors[22, 31]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [27]
		freeground     [25]
		freeatom       [9]
		freeatom       [10]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'conv_head'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		derefatom    [4, 3, 0]
		isint          [4]
		deref        [2, 1, 0, 1]
		func           [2, 'atom'_2]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_head'_3]
		removeatom     [2, 0, 'atom'_2]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [4, 0]
		removeatom     [5, 0]
		newatom      [6, 0, 'atom'_2]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'conv_head'_3]
		deref        [3, 1, 1, 2]
		func           [3, 'variable'_3]
		derefatom    [5, 3, 1]
		isstring       [5]
		derefatom    [4, 3, 0]
		isint          [4]
		deref        [2, 1, 0, 2]
		func           [2, 'process_context'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_head'_3]
		removeatom     [2, 0, 'process_context'_3]
		removeatom     [3, 0, 'variable'_3]
		removeatom     [4, 0]
		removeatom     [5, 0]
		newatom      [6, 0, 'process_context'_3]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 2, 1, 0]
		relink         [6, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'atom'_2]
		newatom      [6, 0, 'syntax_'.'conv_proccxt_link'_2]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [6, 0, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'syntax_'.'conv_proccxt_link'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_proccxt_link'_2]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'process_context'_3]
		newatom      [6, 0, 'syntax_'.'conv_proccxt_link1'_2]
		newatom      [7, 0, 'syntax_'.'conv_proccxt_link'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 7, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [6, 0, 3, 1, 0]
		relink         [7, 0, 2, 1, 0]
		loadmodule     [0, "syntax_"]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 23]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'syntax_'.'conv_proccxt_link1'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		deref        [4, 2, 1, 2]
		func           [4, '.'_3]
		deref        [6, 4, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 0]
		func           [7, '[]'_1]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [5, 3, 0, 0]
		func           [5, "::"_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_proccxt_link1'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [5, 0, "::"_1]
		removeatom     [4, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, 'syntax_'.'conv_proccxt_link1'_2]
		relink         [8, 0, 4, 0, 0]
		newlink        [8, 1, 9, 1, 0]
		relink         [8, 2, 1, 1, 0]
		relink         [9, 0, 6, 0, 0]
		loadmodule     [0, "syntax_"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		freeatom       [6]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'syntax_'.'conv_proccxt_link1'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'atom'_2]
		deref        [3, 2, 0, 1]
		func           [3, 'symbol'_2]
		deref        [4, 3, 0, 0]
		func           [4, "[]"_1]
		commit         ["_Rsyn", 0]
		removeatom     [1, 0, 'syntax_'.'conv_proccxt_link1'_2]
		removeatom     [2, 0, 'atom'_2]
		removeatom     [3, 0, 'symbol'_2]
		removeatom     [4, 0, "[]"_1]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []


Compiled Ruleset @604               
Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'list'.'zip'_3]
		deref        [3, 1, 1, 0]
		func           [3, '[]'_1]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'zip'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'list'.'zip'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'zip'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, '.'_3]
		newatom      [6, 0, 'list'.'zip'_3]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 2, 0]
		relink         [4, 2, 1, 2, 0]
		relink         [5, 0, 2, 0, 0]
		relink         [5, 1, 3, 0, 0]
		relink         [6, 0, 2, 1, 0]
		relink         [6, 1, 3, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'list'.'contains'_5]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'contains'_5]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'false'_1]
		newatom      [4, 0, '[]'_1]
		unify          [1, 3, 1, 1, 0]
		relink         [3, 0, 1, 4, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 45]
		findatom     [1, 0, 'list'.'contains'_5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [8, 2, 1]
		getlink      [7, 2, 0]
		newlist      [9]
		addtolist      [9, 7]
		newlist      [10]
		addtolist      [10, 3]
		addtolist      [10, 4]
		addtolist      [10, 5]
		addtolist      [10, 6]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		newlist      [12]
		addtolist      [12, 3]
		eqground       [9, 12]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 8]
		isground     [14, 12, 13]
		commit         ["_Rlis", 0]
		newlist      [15]
		getlink      [16, 2, 0]
		addtolist      [15, 16]
		newlist      [17]
		getlink      [18, 1, 1]
		addtolist      [17, 18]
		removeatom     [1, 0, 'list'.'contains'_5]
		removeatom     [2, 0, '.'_3]
		removeground   [17, 0]
		removeground   [15, 0]
		getlink      [19, 1, 1]
		insertconnectorsinnull[20, [19]]
		getlink      [21, 2, 0]
		insertconnectorsinnull[22, [21]]
		newlist      [23]
		getlink      [24, 2, 0]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 1, 1]
		addtolist      [25, 26]
		copyground   [27, 25, 0]
		getfromlist  [28, 27, 0]
		getfromlist  [29, 27, 1]
		copyground   [30, 23, 0]
		getfromlist  [31, 30, 0]
		getfromlist  [32, 30, 1]
		newatom      [33, 0, 'true'_1]
		newatom      [34, 0, '.'_3]
		alloclink    [35, 34, 2]
		alloclink    [36, 34, 1]
		alloclink    [37, 34, 0]
		alloclink    [38, 33, 0]
		getfromlist  [39, 31, 0]
		getfromlist  [40, 28, 0]
		getlink      [41, 1, 4]
		unifylinks     [38, 41, 0]
		unifylinks     [37, 39, 0]
		getlink      [42, 2, 1]
		unifylinks     [36, 42, 0]
		getlink      [43, 1, 2]
		unifylinks     [35, 43, 0]
		getlink      [44, 1, 3]
		unifylinks     [40, 44, 0]
		deleteconnectors[20, 29]
		deleteconnectors[22, 32]
		freeatom       [1]
		freeatom       [2]
		freeground     [25]
		freeground     [23]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 49]
		findatom     [1, 0, 'list'.'contains'_5]
		getlink      [6, 1, 4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [8, 2, 1]
		getlink      [7, 2, 0]
		newlist      [9]
		addtolist      [9, 7]
		newlist      [10]
		addtolist      [10, 3]
		addtolist      [10, 4]
		addtolist      [10, 5]
		addtolist      [10, 6]
		addtolist      [10, 8]
		isground     [11, 9, 10]
		newlist      [12]
		addtolist      [12, 3]
		neqground      [9, 12]
		newlist      [13]
		addtolist      [13, 4]
		addtolist      [13, 5]
		addtolist      [13, 6]
		addtolist      [13, 7]
		addtolist      [13, 8]
		isground     [14, 12, 13]
		commit         ["_Rlis", 0]
		newlist      [15]
		getlink      [16, 2, 0]
		addtolist      [15, 16]
		newlist      [17]
		getlink      [18, 1, 1]
		addtolist      [17, 18]
		removeatom     [1, 0, 'list'.'contains'_5]
		removeatom     [2, 0, '.'_3]
		removeground   [17, 0]
		removeground   [15, 0]
		getlink      [19, 1, 1]
		insertconnectorsinnull[20, [19]]
		getlink      [21, 2, 0]
		insertconnectorsinnull[22, [21]]
		newlist      [23]
		getlink      [24, 2, 0]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 1, 1]
		addtolist      [25, 26]
		copyground   [27, 25, 0]
		getfromlist  [28, 27, 0]
		getfromlist  [29, 27, 1]
		copyground   [30, 23, 0]
		getfromlist  [31, 30, 0]
		getfromlist  [32, 30, 1]
		newatom      [33, 0, 'list'.'contains'_5]
		newatom      [34, 0, '.'_3]
		alloclink    [35, 34, 2]
		alloclink    [36, 34, 0]
		alloclink    [37, 33, 4]
		alloclink    [38, 33, 3]
		alloclink    [39, 34, 1]
		alloclink    [40, 33, 2]
		alloclink    [41, 33, 1]
		alloclink    [42, 33, 0]
		getfromlist  [43, 31, 0]
		getfromlist  [44, 28, 0]
		getlink      [45, 2, 1]
		unifylinks     [42, 45, 0]
		unifylinks     [41, 44, 0]
		unifylinks     [40, 39, 0]
		getlink      [46, 1, 3]
		unifylinks     [38, 46, 0]
		getlink      [47, 1, 4]
		unifylinks     [37, 47, 0]
		unifylinks     [36, 43, 0]
		getlink      [48, 1, 2]
		unifylinks     [35, 48, 0]
		deleteconnectors[20, 29]
		deleteconnectors[22, 32]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeground     [25]
		freeground     [23]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'list'.'exchange'_4]
		derefatom    [4, 1, 2]
		isunary        [4]
		derefatom    [3, 1, 1]
		isunary        [3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'exchange'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		removeatom     [4, 0]
		newatom      [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 27]
		findatom     [1, 0, 'list'.'exchange'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [7, 2, 1]
		getlink      [6, 2, 0]
		newlist      [8]
		addtolist      [8, 6]
		newlist      [9]
		addtolist      [9, 3]
		addtolist      [9, 4]
		addtolist      [9, 5]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 3]
		eqground       [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		isground     [13, 11, 12]
		commit         ["_Rlis", 0]
		newlist      [14]
		getlink      [15, 2, 0]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 1, 1]
		addtolist      [16, 17]
		removeatom     [1, 0, 'list'.'exchange'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [16, 0]
		removeground   [14, 0]
		getlink      [18, 1, 1]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 2, 0]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 2, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 1, 1]
		addtolist      [24, 25]
		newatom      [26, 0, '.'_3]
		relink         [26, 0, 1, 2, 0]
		relink         [26, 1, 2, 1, 0]
		relink         [26, 2, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [24]
		freeground     [22]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 46]
		findatom     [1, 0, 'list'.'exchange'_4]
		getlink      [5, 1, 3]
		getlink      [4, 1, 2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink      [7, 2, 1]
		getlink      [6, 2, 0]
		newlist      [8]
		addtolist      [8, 6]
		newlist      [9]
		addtolist      [9, 3]
		addtolist      [9, 4]
		addtolist      [9, 5]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 3]
		neqground      [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 7]
		isground     [13, 11, 12]
		commit         ["_Rlis", 0]
		newlist      [14]
		getlink      [15, 1, 1]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 2, 0]
		addtolist      [16, 17]
		removeatom     [1, 0, 'list'.'exchange'_4]
		removeatom     [2, 0, '.'_3]
		removeground   [14, 0]
		removeground   [16, 0]
		getlink      [18, 1, 1]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 2, 0]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 1, 1]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 2, 0]
		addtolist      [24, 25]
		copyground   [26, 22, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		copyground   [29, 24, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		newatom      [32, 0, '.'_3]
		newatom      [33, 0, 'list'.'exchange'_4]
		alloclink    [34, 33, 2]
		alloclink    [35, 33, 1]
		alloclink    [36, 33, 0]
		alloclink    [37, 32, 2]
		alloclink    [38, 33, 3]
		alloclink    [39, 32, 1]
		alloclink    [40, 32, 0]
		getfromlist  [41, 27, 0]
		getfromlist  [42, 30, 0]
		unifylinks     [40, 42, 0]
		unifylinks     [39, 38, 0]
		getlink      [43, 1, 3]
		unifylinks     [37, 43, 0]
		getlink      [44, 2, 1]
		unifylinks     [36, 44, 0]
		unifylinks     [35, 41, 0]
		getlink      [45, 1, 2]
		unifylinks     [34, 45, 0]
		deleteconnectors[19, 28]
		deleteconnectors[21, 31]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeground     [22]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'list'.'differentiate'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_list", 0]
		removeatom     [1, 0, 'list'.'differentiate'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'list'.'differentiate'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_list", 0]
		removeatom     [1, 0, 'list'.'differentiate'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'list'.'differentiate'_3]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 2, 1, 2, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'list'.'duplicate'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_list", 0]
		removeatom     [1, 0, 'list'.'duplicate'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		newatom      [4, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'list'.'duplicate'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		derefatom    [3, 2, 0]
		isunary        [3]
		commit         ["_list", 0]
		removeatom     [1, 0, 'list'.'duplicate'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'list'.'duplicate'_3]
		newlink        [6, 0, 4, 0, 0]
		newlink        [6, 1, 8, 1, 0]
		relink         [6, 2, 1, 1, 0]
		newlink        [7, 0, 5, 0, 0]
		newlink        [7, 1, 8, 2, 0]
		relink         [7, 2, 1, 2, 0]
		relink         [8, 0, 2, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'list'.'count'_3]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'count'_3]
		newatom      [2, 0, 'list'.'count'_4]
		newatom      [3, 0, 0_1]
		newlink        [2, 0, 3, 0, 0]
		relink         [2, 1, 1, 0, 0]
		relink         [2, 2, 1, 1, 0]
		relink         [2, 3, 1, 2, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'list'.'count'_4]
		derefatom    [4, 1, 0]
		isint          [4]
		allocatom    [3, 1_1]
		iadd         [5, 4, 3]
		getfunc      [6, 5]
		allocatomindirect[7, 6]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'count'_4]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0]
		copyatom     [8, 0, 7]
		newatom      [9, 0, 'list'.'count'_4]
		newatom      [10, 0, '.'_3]
		newlink        [9, 0, 8, 0, 0]
		relink         [9, 1, 2, 1, 0]
		newlink        [9, 2, 10, 1, 0]
		relink         [9, 3, 1, 3, 0]
		relink         [10, 0, 2, 0, 0]
		relink         [10, 2, 1, 2, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'list'.'count'_4]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rlis", 0]
		removeatom     [1, 0, 'list'.'count'_4]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 3, 1, 0, 0]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @605 
Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'int'.'copy'_3]
		derefatom    [2, 1, 0]
		isint          [2]
		commit         ["_intc", 0]
		removeatom     [1, 0, 'int'.'copy'_3]
		removeatom     [2, 0]
		copyatom     [3, 0, 2]
		copyatom     [4, 0, 2]
		relink         [3, 0, 1, 1, 0]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @606      
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'string'.'concat'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Rstr", 0]
		removeatom     [1, 0, 'string'.'concat'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, ""_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'string'.'concat'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rstr", 0]
		removeatom     [1, 0, 'string'.'concat'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'string'.'concat'_3]
		newatom      [4, 0, 'string'.'concat'_2]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [4, 0, 2, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'string'.'join'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		commit         ["_Rstr", 0]
		removeatom     [1, 0, 'string'.'join'_3]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'string'.'join'_3]
		derefatom    [3, 1, 0]
		isstring       [3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		commit         ["_Rstr", 0]
		removeatom     [1, 0, 'string'.'join'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0]
		copyatom     [4, 0, 3]
		copyatom     [5, 0, 3]
		newatom      [6, 0, 'string'.'join'_4]
		newatom      [7, 0, 'string'.'join'_3]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 4, 0, 0]
		newlink        [6, 2, 7, 2, 0]
		relink         [6, 3, 1, 2, 0]
		newlink        [7, 0, 5, 0, 0]
		relink         [7, 1, 2, 1, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'string'.'join'_4]
		derefatom    [3, 1, 1]
		isstring       [3]
		deref        [2, 1, 2, 0]
		func           [2, '[]'_1]
		commit         ["_Rstr", 0]
		removeatom     [1, 0, 'string'.'join'_4]
		removeatom     [2, 0, '[]'_1]
		removeatom     [3, 0]
		unify          [1, 3, 1, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'string'.'join'_4]
		derefatom    [4, 1, 2]
		isstring       [4]
		derefatom    [3, 1, 1]
		isstring       [3]
		derefatom    [2, 1, 0]
		isstring       [2]
		commit         ["_Rstr", 0]
		removeatom     [1, 0, 'string'.'join'_4]
		removeatom     [3, 0]
		removeatom     [2, 0]
		removeatom     [4, 0]
		copyatom     [5, 0, 3]
		copyatom     [6, 0, 2]
		copyatom     [7, 0, 4]
		newatom      [8, 0, 'string'.'concat'_2]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, '[]'_1]
		newlink        [8, 0, 9, 2, 0]
		relink         [8, 1, 1, 3, 0]
		newlink        [9, 0, 6, 0, 0]
		newlink        [9, 1, 10, 2, 0]
		newlink        [10, 0, 5, 0, 0]
		newlink        [10, 1, 11, 2, 0]
		newlink        [11, 0, 7, 0, 0]
		newlink        [11, 1, 12, 0, 0]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []


Module
'types' {@602}
'string_ext' {@606}
'syntax_' {@603}
'generator' {@601}
'types_' {@602}
'syntax' {@603}
'list_ext' {@604}
'int' {@605}
Inline
