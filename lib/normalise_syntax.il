Compiled Ruleset @613 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L2202, [0], [], []]
	--guard:L2202:
		spec           [1, 1]
		jump           [L2195, [0], [], []]
	--body:L2195:
		spec           [1, 6]
		commit         ["_init", 0]
		newmem       [1, 0, 0]
		loadruleset    [1, @612]
		newatom      [2, 1, 'module'_1]
		newatom      [3, 1, 'normalise_syntax'_1]
		alloclink    [4, 2, 0]
		alloclink    [5, 3, 0]
		unifylinks     [4, 5, 1]
		proceed        []


Compiled Ruleset @612 
Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 51]
		findatom     [1, 0, 'normalise_syntax'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		getlink      [4, 2, 0]
		newlist      [5]
		addtolist      [5, 4]
		newlist      [6]
		addtolist      [6, 3]
		isground     [7, 5, 6]
		commit         ["_Resu", 0]
		newlist      [8]
		getlink      [9, 2, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'normalise_syntax'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeground   [8, 0]
		getlink      [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newmem       [14, 0, 0]
		setmemname     [14, "sub"]
		newmem       [15, 14, 0]
		newmem       [16, 14, 0]
		loadruleset    [15, @602]
		loadruleset    [16, @605]
		loadruleset    [14, @611]
		copyground   [17, 12, 14]
		getfromlist  [18, 17, 0]
		getfromlist  [19, 17, 1]
		newatom      [20, 15, 'module'_1]
		newatom      [21, 15, 'disconnect_links'_1]
		newatom      [22, 16, 'module'_1]
		newatom      [23, 16, 'del_commas'_1]
		newatom      [24, 14, 'subproc'.'open'_2]
		newatom      [25, 14, 'remove_syntax_sugar'_2]
		newatom      [26, 14, 'del_connectors'_2]
		newatom      [27, 14, 'l2c_conv_guard_link'_2]
		newatom      [28, 14, 'subproc'.'data'_2]
		newatom      [29, 14, $in_2]
		newatom      [30, 0, $out_2]
		alloclink    [31, 30, 1]
		alloclink    [32, 30, 0]
		alloclink    [33, 29, 0]
		alloclink    [34, 28, 0]
		alloclink    [35, 28, 1]
		alloclink    [36, 27, 0]
		alloclink    [37, 27, 1]
		alloclink    [38, 26, 0]
		alloclink    [39, 26, 1]
		alloclink    [40, 25, 0]
		alloclink    [41, 29, 1]
		alloclink    [42, 24, 1]
		alloclink    [43, 25, 1]
		alloclink    [44, 24, 0]
		alloclink    [45, 23, 0]
		alloclink    [46, 22, 0]
		alloclink    [47, 21, 0]
		alloclink    [48, 20, 0]
		getfromlist  [49, 18, 0]
		unifylinks     [48, 47, 15]
		unifylinks     [46, 45, 16]
		unifylinks     [44, 43, 14]
		unifylinks     [42, 41, 14]
		unifylinks     [40, 39, 14]
		unifylinks     [38, 37, 14]
		unifylinks     [36, 35, 14]
		unifylinks     [34, 49, 14]
		unifylinks     [32, 33, 0]
		getlink      [50, 1, 1]
		unifylinks     [31, 50, 0]
		deleteconnectors[11, 19]
		loadmodule     [14, "subproc"]
		loadmodule     [14, "subproc"]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []


Compiled Ruleset @611   
Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 27]
		findatom     [1, 0, 'l2c_conv_guard_link'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		getlink      [4, 2, 0]
		newlist      [5]
		addtolist      [5, 4]
		newlist      [6]
		addtolist      [6, 3]
		isground     [7, 5, 6]
		commit         ["_Rl2c", 0]
		newlist      [8]
		getlink      [9, 2, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'l2c_conv_guard_link'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeground   [8, 0]
		getlink      [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newmem       [14, 0, 0]
		setmemname     [14, "sub"]
		loadruleset    [14, @607]
		copyground   [15, 12, 14]
		getfromlist  [16, 15, 0]
		getfromlist  [17, 15, 1]
		newatom      [18, 14, 'subproc'.'use'_0]
		newatom      [19, 14, $in_2]
		newatom      [20, 0, $out_2]
		alloclink    [21, 20, 1]
		alloclink    [22, 20, 0]
		alloclink    [23, 19, 0]
		alloclink    [24, 19, 1]
		getfromlist  [25, 16, 0]
		unifylinks     [24, 25, 14]
		unifylinks     [22, 23, 0]
		getlink      [26, 1, 1]
		unifylinks     [21, 26, 0]
		deleteconnectors[11, 17]
		loadmodule     [14, "subproc"]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 27]
		findatom     [1, 0, 'del_connectors'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		getlink      [4, 2, 0]
		newlist      [5]
		addtolist      [5, 4]
		newlist      [6]
		addtolist      [6, 3]
		isground     [7, 5, 6]
		commit         ["_Rdel", 0]
		newlist      [8]
		getlink      [9, 2, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'del_connectors'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeground   [8, 0]
		getlink      [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newmem       [14, 0, 0]
		setmemname     [14, "sub"]
		loadruleset    [14, @608]
		copyground   [15, 12, 14]
		getfromlist  [16, 15, 0]
		getfromlist  [17, 15, 1]
		newatom      [18, 14, 'list'.'append'_0]
		newatom      [19, 14, $in_2]
		newatom      [20, 0, $out_2]
		alloclink    [21, 20, 1]
		alloclink    [22, 20, 0]
		alloclink    [23, 19, 0]
		alloclink    [24, 19, 1]
		getfromlist  [25, 16, 0]
		unifylinks     [24, 25, 14]
		unifylinks     [22, 23, 0]
		getlink      [26, 1, 1]
		unifylinks     [21, 26, 0]
		deleteconnectors[11, 17]
		loadmodule     [14, "list"]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 104]
		findatom     [1, 0, 'remove_syntax_sugar'_2]
		getlink      [7, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		deref        [3, 2, 0, 3]
		func           [3, 'l2c_rule'_4]
		deref        [6, 3, 2, 1]
		func           [6, 'l2c_body'_2]
		getlink      [10, 6, 0]
		deref        [5, 3, 1, 1]
		func           [5, 'l2c_guard'_2]
		getlink      [9, 5, 0]
		deref        [4, 3, 0, 1]
		func           [4, 'l2c_head'_2]
		getlink      [8, 4, 0]
		newlist      [11]
		addtolist      [11, 8]
		newlist      [12]
		addtolist      [12, 7]
		addtolist      [12, 9]
		addtolist      [12, 10]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 9]
		newlist      [15]
		addtolist      [15, 7]
		addtolist      [15, 8]
		addtolist      [15, 10]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 10]
		newlist      [18]
		addtolist      [18, 7]
		addtolist      [18, 8]
		addtolist      [18, 9]
		isground     [19, 17, 18]
		commit         ["_Rrem", 0]
		newlist      [20]
		getlink      [21, 6, 0]
		addtolist      [20, 21]
		newlist      [22]
		getlink      [23, 4, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 5, 0]
		addtolist      [24, 25]
		removeatom     [1, 0, 'remove_syntax_sugar'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeatom     [3, 0, 'l2c_rule'_4]
		removeatom     [4, 0, 'l2c_head'_2]
		removeatom     [5, 0, 'l2c_guard'_2]
		removeatom     [6, 0, 'l2c_body'_2]
		removeground   [24, 0]
		removeground   [22, 0]
		removeground   [20, 0]
		getlink      [26, 5, 0]
		insertconnectorsinnull[27, [26]]
		getlink      [28, 4, 0]
		insertconnectorsinnull[29, [28]]
		getlink      [30, 6, 0]
		insertconnectorsinnull[31, [30]]
		newlist      [32]
		getlink      [33, 6, 0]
		addtolist      [32, 33]
		newlist      [34]
		getlink      [35, 4, 0]
		addtolist      [34, 35]
		newlist      [36]
		getlink      [37, 5, 0]
		addtolist      [36, 37]
		newmem       [38, 0, 0]
		setmemname     [38, "sub"]
		loadruleset    [38, @610]
		copyground   [39, 36, 38]
		getfromlist  [40, 39, 0]
		getfromlist  [41, 39, 1]
		copyground   [42, 34, 38]
		getfromlist  [43, 42, 0]
		getfromlist  [44, 42, 1]
		copyground   [45, 32, 38]
		getfromlist  [46, 45, 0]
		getfromlist  [47, 45, 1]
		newatom      [48, 38, 'subproc'.'use'_0]
		newatom      [49, 38, 'cnt'_1]
		newatom      [50, 38, 1386_1]
		newatom      [51, 38, 'l2c_rule'_4]
		newatom      [52, 38, 'l2c_head'_2]
		newatom      [53, 38, 'subproc'.'open'_2]
		newatom      [54, 38, 'insert_links'_2]
		newatom      [55, 38, 'subproc'.'data'_2]
		newatom      [56, 38, 'l2c_guard'_2]
		newatom      [57, 38, 'subproc'.'open'_2]
		newatom      [58, 38, 'insert_links'_2]
		newatom      [59, 38, 'subproc'.'data'_2]
		newatom      [60, 38, 'l2c_body'_2]
		newatom      [61, 38, 'subproc'.'open'_2]
		newatom      [62, 38, 'insert_links'_2]
		newatom      [63, 38, 'subproc'.'data'_2]
		newatom      [64, 38, $in_2]
		newatom      [65, 0, $out_2]
		alloclink    [66, 65, 1]
		alloclink    [67, 65, 0]
		alloclink    [68, 64, 0]
		alloclink    [69, 63, 0]
		alloclink    [70, 63, 1]
		alloclink    [71, 62, 0]
		alloclink    [72, 62, 1]
		alloclink    [73, 61, 0]
		alloclink    [74, 61, 1]
		alloclink    [75, 60, 0]
		alloclink    [76, 59, 0]
		alloclink    [77, 59, 1]
		alloclink    [78, 58, 0]
		alloclink    [79, 58, 1]
		alloclink    [80, 57, 0]
		alloclink    [81, 57, 1]
		alloclink    [82, 56, 0]
		alloclink    [83, 55, 0]
		alloclink    [84, 55, 1]
		alloclink    [85, 54, 0]
		alloclink    [86, 54, 1]
		alloclink    [87, 53, 0]
		alloclink    [88, 53, 1]
		alloclink    [89, 52, 0]
		alloclink    [90, 64, 1]
		alloclink    [91, 51, 3]
		alloclink    [92, 60, 1]
		alloclink    [93, 51, 2]
		alloclink    [94, 56, 1]
		alloclink    [95, 51, 1]
		alloclink    [96, 52, 1]
		alloclink    [97, 51, 0]
		alloclink    [98, 50, 0]
		alloclink    [99, 49, 0]
		getfromlist  [100, 46, 0]
		getfromlist  [101, 40, 0]
		getfromlist  [102, 43, 0]
		unifylinks     [99, 98, 38]
		unifylinks     [97, 96, 38]
		unifylinks     [95, 94, 38]
		unifylinks     [93, 92, 38]
		unifylinks     [91, 90, 38]
		unifylinks     [89, 88, 38]
		unifylinks     [87, 86, 38]
		unifylinks     [85, 84, 38]
		unifylinks     [83, 102, 38]
		unifylinks     [82, 81, 38]
		unifylinks     [80, 79, 38]
		unifylinks     [78, 77, 38]
		unifylinks     [76, 101, 38]
		unifylinks     [75, 74, 38]
		unifylinks     [73, 72, 38]
		unifylinks     [71, 70, 38]
		unifylinks     [69, 100, 38]
		unifylinks     [67, 68, 0]
		getlink      [103, 1, 1]
		unifylinks     [66, 103, 0]
		deleteconnectors[27, 41]
		deleteconnectors[29, 44]
		deleteconnectors[31, 47]
		loadmodule     [38, "subproc"]
		loadmodule     [38, "subproc"]
		loadmodule     [38, "subproc"]
		loadmodule     [38, "subproc"]
		loadmodule     [38, "subproc"]
		loadmodule     [38, "subproc"]
		loadmodule     [38, "subproc"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		freeground     [36]
		freeground     [34]
		freeground     [32]
		proceed        []


Compiled Ruleset @607 
Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 111]
		findatom     [1, 0, 'l2c_rule'_4]
		getlink      [6, 1, 3]
		deref        [4, 1, 2, 1]
		func           [4, 'l2c_body'_2]
		getlink      [9, 4, 0]
		deref        [3, 1, 1, 1]
		func           [3, 'l2c_guard'_2]
		getlink      [8, 3, 0]
		deref        [2, 1, 0, 1]
		func           [2, 'l2c_head'_2]
		getlink      [7, 2, 0]
		findatom     [5, 0, 'variable'_3]
		derefatom    [13, 5, 0]
		isint          [13]
		getlink      [12, 5, 2]
		getlink      [11, 5, 1]
		getlink      [10, 5, 0]
		newlist      [14]
		addtolist      [14, 7]
		newlist      [15]
		addtolist      [15, 6]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		addtolist      [15, 11]
		addtolist      [15, 12]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 9]
		newlist      [18]
		addtolist      [18, 6]
		addtolist      [18, 7]
		addtolist      [18, 8]
		addtolist      [18, 10]
		addtolist      [18, 11]
		addtolist      [18, 12]
		isground     [19, 17, 18]
		newlist      [20]
		addtolist      [20, 12]
		addtolist      [20, 8]
		newlist      [21]
		addtolist      [21, 6]
		addtolist      [21, 7]
		addtolist      [21, 9]
		addtolist      [21, 10]
		addtolist      [21, 11]
		isground     [22, 20, 21]
		newlist      [23]
		addtolist      [23, 11]
		newlist      [24]
		addtolist      [24, 6]
		addtolist      [24, 7]
		addtolist      [24, 8]
		addtolist      [24, 9]
		addtolist      [24, 10]
		addtolist      [24, 12]
		isground     [25, 23, 24]
		commit         ["_R1l2", 0]
		newlist      [26]
		getlink      [27, 5, 2]
		addtolist      [26, 27]
		getlink      [28, 3, 0]
		addtolist      [26, 28]
		newlist      [29]
		getlink      [30, 4, 0]
		addtolist      [29, 30]
		newlist      [31]
		getlink      [32, 5, 1]
		addtolist      [31, 32]
		newlist      [33]
		getlink      [34, 2, 0]
		addtolist      [33, 34]
		removeatom     [1, 0, 'l2c_rule'_4]
		removeatom     [2, 0, 'l2c_head'_2]
		removeatom     [3, 0, 'l2c_guard'_2]
		removeatom     [4, 0, 'l2c_body'_2]
		removeatom     [5, 0, 'variable'_3]
		removeground   [33, 0]
		removeatom     [13, 0]
		removeground   [26, 0]
		removeground   [29, 0]
		removeground   [31, 0]
		getlink      [35, 2, 0]
		insertconnectorsinnull[36, [35]]
		getlink      [37, 5, 2]
		getlink      [38, 3, 0]
		insertconnectorsinnull[39, [37, 38]]
		getlink      [40, 4, 0]
		insertconnectorsinnull[41, [40]]
		getlink      [42, 5, 1]
		insertconnectorsinnull[43, [42]]
		newlist      [44]
		getlink      [45, 5, 2]
		addtolist      [44, 45]
		getlink      [46, 3, 0]
		addtolist      [44, 46]
		newlist      [47]
		getlink      [48, 4, 0]
		addtolist      [47, 48]
		newlist      [49]
		getlink      [50, 5, 1]
		addtolist      [49, 50]
		newlist      [51]
		getlink      [52, 2, 0]
		addtolist      [51, 52]
		newmem       [53, 0, 0]
		setmemname     [53, "sub"]
		loadruleset    [53, @606]
		copyground   [54, 51, 53]
		getfromlist  [55, 54, 0]
		getfromlist  [56, 54, 1]
		copyatom     [57, 53, 13]
		copyatom     [58, 53, 13]
		copyground   [59, 44, 53]
		getfromlist  [60, 59, 0]
		getfromlist  [61, 59, 1]
		copyground   [62, 47, 53]
		getfromlist  [63, 62, 0]
		getfromlist  [64, 62, 1]
		copyground   [65, 49, 53]
		getfromlist  [66, 65, 0]
		getfromlist  [67, 65, 1]
		copyground   [68, 49, 53]
		getfromlist  [69, 68, 0]
		getfromlist  [70, 68, 1]
		newatom      [71, 53, 'l2c_rule'_4]
		newatom      [72, 53, 'l2c_head'_2]
		newatom      [73, 53, 'l2c_guard'_2]
		newatom      [74, 53, 'l2c_body'_2]
		newatom      [75, 53, 'variable'_3]
		newatom      [76, 53, 'n'_1]
		newatom      [77, 53, 's'_1]
		newatom      [78, 53, $in_2]
		newatom      [79, 0, 'subproc'.'open'_2]
		newatom      [80, 0, $out_2]
		alloclink    [81, 80, 0]
		alloclink    [82, 78, 0]
		alloclink    [83, 79, 1]
		alloclink    [84, 80, 1]
		alloclink    [85, 79, 0]
		alloclink    [86, 77, 0]
		alloclink    [87, 58, 0]
		alloclink    [88, 76, 0]
		alloclink    [89, 75, 2]
		alloclink    [90, 75, 1]
		alloclink    [91, 57, 0]
		alloclink    [92, 75, 0]
		alloclink    [93, 74, 0]
		alloclink    [94, 73, 0]
		alloclink    [95, 72, 0]
		alloclink    [96, 78, 1]
		alloclink    [97, 71, 3]
		alloclink    [98, 74, 1]
		alloclink    [99, 71, 2]
		alloclink    [100, 73, 1]
		alloclink    [101, 71, 1]
		alloclink    [102, 72, 1]
		alloclink    [103, 71, 0]
		getfromlist  [104, 55, 0]
		getfromlist  [105, 60, 0]
		getfromlist  [106, 60, 1]
		getfromlist  [107, 63, 0]
		getfromlist  [108, 66, 0]
		getfromlist  [109, 69, 0]
		unifylinks     [103, 102, 53]
		unifylinks     [101, 100, 53]
		unifylinks     [99, 98, 53]
		unifylinks     [97, 96, 53]
		unifylinks     [95, 104, 53]
		unifylinks     [94, 106, 53]
		unifylinks     [93, 107, 53]
		unifylinks     [92, 91, 53]
		unifylinks     [90, 108, 53]
		unifylinks     [89, 105, 53]
		unifylinks     [88, 87, 53]
		unifylinks     [86, 109, 53]
		unifylinks     [85, 84, 0]
		getlink      [110, 1, 3]
		unifylinks     [83, 110, 0]
		unifylinks     [81, 82, 0]
		deleteconnectors[36, 56]
		deleteconnectors[39, 61]
		deleteconnectors[41, 64]
		deleteconnectors[43, 67]
		deleteconnectors[43, 70]
		loadmodule     [0, "subproc"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeground     [51]
		freeatom       [13]
		freeground     [44]
		freeground     [47]
		freeground     [49]
		proceed        []


Compiled Ruleset @606 
Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'variable'_3]
		derefatom    [9, 1, 0]
		isint          [9]
		getlink      [6, 1, 2]
		getlink      [5, 1, 1]
		getlink      [4, 1, 0]
		findatom     [2, 0, 'n'_1]
		derefatom    [10, 2, 0]
		isint          [10]
		ieq            [9, 10]
		getlink      [7, 2, 0]
		findatom     [3, 0, 's'_1]
		getlink      [8, 3, 0]
		newlist      [11]
		addtolist      [11, 5]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 6]
		addtolist      [12, 7]
		addtolist      [12, 8]
		isground     [13, 11, 12]
		newlist      [14]
		addtolist      [14, 8]
		eqground       [11, 14]
		newlist      [15]
		addtolist      [15, 4]
		addtolist      [15, 5]
		addtolist      [15, 6]
		addtolist      [15, 7]
		isground     [16, 14, 15]
		commit         ["_Vvar", 0]
		newlist      [17]
		getlink      [18, 1, 1]
		addtolist      [17, 18]
		newlist      [19]
		getlink      [20, 3, 0]
		addtolist      [19, 20]
		removeatom     [1, 0, 'variable'_3]
		removeatom     [2, 0, 'n'_1]
		removeatom     [3, 0, 's'_1]
		removeground   [17, 0]
		removeground   [19, 0]
		removeatom     [9, 0]
		removeatom     [10, 0]
		getlink      [21, 1, 1]
		insertconnectorsinnull[22, [21]]
		getlink      [23, 3, 0]
		insertconnectorsinnull[24, [23]]
		newlist      [25]
		getlink      [26, 1, 1]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 3, 0]
		addtolist      [27, 28]
		copyground   [29, 25, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		copyground   [32, 27, 0]
		getfromlist  [33, 32, 0]
		getfromlist  [34, 32, 1]
		copyatom     [35, 0, 10]
		newatom      [36, 0, 'process_context'_3]
		newatom      [37, 0, 'symbol'_2]
		newatom      [38, 0, 'none'_1]
		newatom      [39, 0, 'n'_1]
		newatom      [40, 0, 's'_1]
		alloclink    [41, 40, 0]
		alloclink    [42, 35, 0]
		alloclink    [43, 39, 0]
		alloclink    [44, 37, 0]
		alloclink    [45, 36, 2]
		alloclink    [46, 38, 0]
		alloclink    [47, 36, 1]
		alloclink    [48, 37, 1]
		alloclink    [49, 36, 0]
		getfromlist  [50, 33, 0]
		getfromlist  [51, 30, 0]
		unifylinks     [49, 48, 0]
		unifylinks     [47, 46, 0]
		getlink      [52, 1, 2]
		unifylinks     [45, 52, 0]
		unifylinks     [44, 51, 0]
		unifylinks     [43, 42, 0]
		unifylinks     [41, 50, 0]
		deleteconnectors[22, 31]
		deleteconnectors[24, 34]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [25]
		freeground     [27]
		freeatom       [9]
		freeatom       [10]
		proceed        []


Compiled Ruleset @608         
Compiled Rule 
	--atommatch:
		spec           [2, 27]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 6, 0, 1]
		func           [7, 'atom'_2]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [7, 0, 'atom'_2]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		newatom      [9, 0, 'apply'_3]
		newatom      [10, 0, 'symbol'_2]
		newatom      [11, 0, "="_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'atom'_2]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'variable'_3]
		newatom      [16, 0, '[]'_1]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 2, 0]
		relink         [9, 2, 1, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 14, 2, 0]
		relink         [13, 0, 7, 0, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [14, 1, 16, 0, 0]
		relink         [15, 0, 5, 0, 0]
		relink         [15, 1, 5, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 28]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 6, 0, 2]
		neqatom        [7, 1]
		func           [7, 'apply'_3]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [7, 0, 'apply'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		newatom      [9, 0, 'apply'_3]
		newatom      [10, 0, 'symbol'_2]
		newatom      [11, 0, "="_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'apply'_3]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'variable'_3]
		newatom      [16, 0, '[]'_1]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 2, 0]
		relink         [9, 2, 1, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [12, 0, 13, 2, 0]
		newlink        [12, 1, 14, 2, 0]
		relink         [13, 0, 7, 0, 0]
		relink         [13, 1, 7, 1, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [14, 1, 16, 0, 0]
		relink         [15, 0, 5, 0, 0]
		relink         [15, 1, 5, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 28]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 6, 0, 2]
		func           [7, 'process_context'_3]
		deref        [5, 3, 0, 2]
		func           [5, 'variable'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'variable'_3]
		removeatom     [7, 0, 'process_context'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		newatom      [9, 0, 'apply'_3]
		newatom      [10, 0, 'symbol'_2]
		newatom      [11, 0, "="_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'process_context'_3]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'variable'_3]
		newatom      [16, 0, '[]'_1]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 2, 0]
		relink         [9, 2, 1, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [12, 0, 13, 2, 0]
		newlink        [12, 1, 14, 2, 0]
		relink         [13, 0, 7, 0, 0]
		relink         [13, 1, 7, 1, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [14, 1, 16, 0, 0]
		relink         [15, 0, 5, 0, 0]
		relink         [15, 1, 5, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 23]
	--memmatch:
		spec           [1, 11]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 0]
		func           [7, '[]'_1]
		deref        [5, 3, 0, 1]
		func           [5, 'atom'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'atom'_2]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		newatom      [8, 0, 'apply'_3]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, '[]'_1]
		relink         [8, 0, 5, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		relink         [8, 2, 1, 2, 0]
		relink         [9, 0, 6, 0, 0]
		newlink        [9, 1, 10, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 24]
	--memmatch:
		spec           [1, 12]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [7, 6, 1, 0]
		func           [7, '[]'_1]
		deref        [5, 3, 0, 2]
		neqatom        [5, 1]
		func           [5, 'apply'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'apply'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [7, 0, '[]'_1]
		newatom      [8, 0, 'apply'_3]
		newatom      [9, 0, 'list'.'append'_3]
		newatom      [10, 0, '.'_3]
		newatom      [11, 0, '[]'_1]
		relink         [8, 0, 5, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		relink         [8, 2, 1, 2, 0]
		relink         [9, 0, 5, 1, 0]
		newlink        [9, 1, 10, 2, 0]
		relink         [10, 0, 6, 0, 0]
		newlink        [10, 1, 11, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [7]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 30]
	--memmatch:
		spec           [1, 31]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [9, 6, 1, 0]
		func           [9, '[]'_1]
		deref        [8, 6, 0, 2]
		neqatom        [8, 1]
		func           [8, 'apply'_3]
		deref        [5, 3, 0, 2]
		func           [5, 'process_context'_3]
		deref        [7, 5, 1, 0]
		func           [7, 'none'_1]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'process_context'_3]
		removeatom     [7, 0, 'none'_1]
		removeatom     [8, 0, 'apply'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [9, 0, '[]'_1]
		newatom      [10, 0, 'apply'_3]
		newatom      [11, 0, 'symbol'_2]
		newatom      [12, 0, ","_1]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'process_context'_3]
		newatom      [15, 0, 'apply'_3]
		newatom      [16, 0, 'symbol'_2]
		newatom      [17, 0, "::"_1]
		newatom      [18, 0, '.'_3]
		newatom      [19, 0, 'genlink'_2]
		newatom      [20, 0, '.'_3]
		newatom      [21, 0, 'atom'_2]
		newatom      [22, 0, 'symbol'_2]
		newatom      [23, 0, "[]"_1]
		newatom      [24, 0, '[]'_1]
		newatom      [25, 0, '.'_3]
		newatom      [26, 0, 'apply'_3]
		newatom      [27, 0, 'list'.'append'_3]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, '[]'_1]
		newatom      [30, 0, '[]'_1]
		newlink        [10, 0, 11, 1, 0]
		newlink        [10, 1, 13, 2, 0]
		relink         [10, 2, 1, 2, 0]
		newlink        [11, 0, 12, 0, 0]
		newlink        [13, 0, 14, 2, 0]
		newlink        [13, 1, 25, 2, 0]
		relink         [14, 0, 5, 0, 0]
		newlink        [14, 1, 15, 2, 0]
		newlink        [15, 0, 16, 1, 0]
		newlink        [15, 1, 18, 2, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [18, 1, 20, 2, 0]
		newlink        [19, 0, 28, 0, 0]
		newlink        [20, 0, 21, 1, 0]
		newlink        [20, 1, 24, 0, 0]
		newlink        [21, 0, 22, 1, 0]
		newlink        [22, 0, 23, 0, 0]
		newlink        [25, 0, 26, 2, 0]
		newlink        [25, 1, 30, 0, 0]
		relink         [26, 0, 8, 0, 0]
		newlink        [26, 1, 27, 2, 0]
		relink         [27, 0, 8, 1, 0]
		newlink        [27, 1, 28, 2, 0]
		newlink        [28, 1, 29, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [8]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 30]
	--memmatch:
		spec           [1, 21]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [9, 6, 1, 0]
		func           [9, '[]'_1]
		deref        [8, 6, 0, 2]
		func           [8, 'variable'_3]
		deref        [5, 3, 0, 2]
		func           [5, 'process_context'_3]
		deref        [7, 5, 1, 0]
		func           [7, 'none'_1]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'process_context'_3]
		removeatom     [7, 0, 'none'_1]
		removeatom     [8, 0, 'variable'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [9, 0, '[]'_1]
		newatom      [10, 0, 'process_context'_3]
		newatom      [11, 0, 'apply'_3]
		newatom      [12, 0, 'symbol'_2]
		newatom      [13, 0, "::"_1]
		newatom      [14, 0, '.'_3]
		newatom      [15, 0, 'variable'_3]
		newatom      [16, 0, '.'_3]
		newatom      [17, 0, 'atom'_2]
		newatom      [18, 0, 'symbol'_2]
		newatom      [19, 0, "[]"_1]
		newatom      [20, 0, '[]'_1]
		relink         [10, 0, 5, 0, 0]
		newlink        [10, 1, 11, 2, 0]
		relink         [10, 2, 1, 2, 0]
		newlink        [11, 0, 12, 1, 0]
		newlink        [11, 1, 14, 2, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [14, 1, 16, 2, 0]
		relink         [15, 0, 8, 0, 0]
		relink         [15, 1, 8, 1, 0]
		newlink        [16, 0, 17, 1, 0]
		newlink        [16, 1, 20, 0, 0]
		newlink        [17, 0, 18, 1, 0]
		newlink        [18, 0, 19, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [8]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [9]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 28]
	--memmatch:
		spec           [1, 23]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 6, 0, 2]
		func           [7, 'variable'_3]
		deref        [5, 3, 0, 2]
		func           [5, 'process_context'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'process_context'_3]
		removeatom     [7, 0, 'variable'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		newatom      [9, 0, 'process_context'_3]
		newatom      [10, 0, 'list'.'append'_3]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, 'apply'_3]
		newatom      [13, 0, 'symbol'_2]
		newatom      [14, 0, "::"_1]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'variable'_3]
		newatom      [17, 0, '.'_3]
		newatom      [18, 0, 'atom'_2]
		newatom      [19, 0, 'symbol'_2]
		newatom      [20, 0, "[]"_1]
		newatom      [21, 0, '[]'_1]
		newatom      [22, 0, '[]'_1]
		relink         [9, 0, 5, 0, 0]
		newlink        [9, 1, 10, 2, 0]
		relink         [9, 2, 1, 2, 0]
		relink         [10, 0, 5, 1, 0]
		newlink        [10, 1, 11, 2, 0]
		newlink        [11, 0, 12, 2, 0]
		newlink        [11, 1, 22, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [12, 1, 15, 2, 0]
		newlink        [13, 0, 14, 0, 0]
		newlink        [15, 0, 16, 2, 0]
		newlink        [15, 1, 17, 2, 0]
		relink         [16, 0, 7, 0, 0]
		relink         [16, 1, 7, 1, 0]
		newlink        [17, 0, 18, 1, 0]
		newlink        [17, 1, 21, 0, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [19, 0, 20, 0, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 28]
	--memmatch:
		spec           [1, 33]
		findatom     [1, 0, 'apply'_3]
		deref        [3, 1, 1, 2]
		func           [3, '.'_3]
		deref        [6, 3, 1, 2]
		func           [6, '.'_3]
		deref        [8, 6, 1, 0]
		func           [8, '[]'_1]
		deref        [7, 6, 0, 2]
		neqatom        [7, 1]
		func           [7, 'apply'_3]
		deref        [5, 3, 0, 2]
		func           [5, 'process_context'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [4, 2, 0, 0]
		func           [4, "="_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [5, 0, 'process_context'_3]
		removeatom     [7, 0, 'apply'_3]
		removeatom     [4, 0, "="_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [6, 0, '.'_3]
		removeatom     [8, 0, '[]'_1]
		newatom      [9, 0, 'apply'_3]
		newatom      [10, 0, 'symbol'_2]
		newatom      [11, 0, ","_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, 'process_context'_3]
		newatom      [14, 0, 'list'.'append'_3]
		newatom      [15, 0, '.'_3]
		newatom      [16, 0, 'apply'_3]
		newatom      [17, 0, 'symbol'_2]
		newatom      [18, 0, "::"_1]
		newatom      [19, 0, '.'_3]
		newatom      [20, 0, 'genlink'_2]
		newatom      [21, 0, '.'_3]
		newatom      [22, 0, 'atom'_2]
		newatom      [23, 0, 'symbol'_2]
		newatom      [24, 0, "[]"_1]
		newatom      [25, 0, '[]'_1]
		newatom      [26, 0, '[]'_1]
		newatom      [27, 0, '.'_3]
		newatom      [28, 0, 'apply'_3]
		newatom      [29, 0, 'list'.'append'_3]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, '[]'_1]
		newatom      [32, 0, '[]'_1]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 2, 0]
		relink         [9, 2, 1, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [12, 0, 13, 2, 0]
		newlink        [12, 1, 27, 2, 0]
		relink         [13, 0, 5, 0, 0]
		newlink        [13, 1, 14, 2, 0]
		relink         [14, 0, 5, 1, 0]
		newlink        [14, 1, 15, 2, 0]
		newlink        [15, 0, 16, 2, 0]
		newlink        [15, 1, 26, 0, 0]
		newlink        [16, 0, 17, 1, 0]
		newlink        [16, 1, 19, 2, 0]
		newlink        [17, 0, 18, 0, 0]
		newlink        [19, 0, 20, 1, 0]
		newlink        [19, 1, 21, 2, 0]
		newlink        [20, 0, 30, 0, 0]
		newlink        [21, 0, 22, 1, 0]
		newlink        [21, 1, 25, 0, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [23, 0, 24, 0, 0]
		newlink        [27, 0, 28, 2, 0]
		newlink        [27, 1, 32, 0, 0]
		relink         [28, 0, 7, 0, 0]
		newlink        [28, 1, 29, 2, 0]
		relink         [29, 0, 7, 1, 0]
		newlink        [29, 1, 30, 2, 0]
		newlink        [30, 1, 31, 0, 0]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [5]
		freeatom       [7]
		freeatom       [4]
		freeatom       [3]
		freeatom       [6]
		freeatom       [8]
		proceed        []


Compiled Ruleset @610  
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 20]
		findatom     [1, 0, 'genlink'_2]
		findatom     [2, 0, 'cnt'_1]
		derefatom    [4, 2, 0]
		isint          [4]
		allocatom    [3, 1_1]
		iadd         [5, 4, 3]
		commit         ["_genl", 0]
		removeatom     [1, 0, 'genlink'_2]
		removeatom     [2, 0, 'cnt'_1]
		removeatom     [4, 0]
		copyatom     [6, 0, 5]
		copyatom     [7, 0, 4]
		copyatom     [8, 0, 4]
		copyatom     [9, 0, 4]
		copyatom     [10, 0, 4]
		newatom      [11, 0, 'variable'_3]
		newatom      [12, 0, 'string'.'concat'_3]
		newatom      [13, 0, "_L"_1]
		newatom      [14, 0, 'string'.'from'_2]
		newatom      [15, 0, 'variable'_3]
		newatom      [16, 0, 'string'.'concat'_3]
		newatom      [17, 0, "_L"_1]
		newatom      [18, 0, 'string'.'from'_2]
		newatom      [19, 0, 'cnt'_1]
		newlink        [11, 0, 7, 0, 0]
		newlink        [11, 1, 12, 2, 0]
		relink         [11, 2, 1, 0, 0]
		newlink        [12, 0, 13, 0, 0]
		newlink        [12, 1, 14, 1, 0]
		newlink        [14, 0, 8, 0, 0]
		newlink        [15, 0, 9, 0, 0]
		newlink        [15, 1, 16, 2, 0]
		relink         [15, 2, 1, 1, 0]
		newlink        [16, 0, 17, 0, 0]
		newlink        [16, 1, 18, 1, 0]
		newlink        [18, 0, 10, 0, 0]
		newlink        [19, 0, 6, 0, 0]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		loadmodule     [0, "string"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 56]
		findatom     [1, 0, 'insert_links'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		getlink      [4, 2, 0]
		newlist      [5]
		addtolist      [5, 4]
		newlist      [6]
		addtolist      [6, 3]
		isground     [7, 5, 6]
		commit         ["_Rins", 0]
		newlist      [8]
		getlink      [9, 2, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'insert_links'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeground   [8, 0]
		getlink      [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newmem       [14, 0, 0]
		setmemname     [14, "sub"]
		newmem       [15, 14, 0]
		setmemname     [15, "sub"]
		loadruleset    [15, @609]
		copyground   [16, 12, 15]
		getfromlist  [17, 16, 0]
		getfromlist  [18, 16, 1]
		newatom      [19, 15, 'subproc'.'use'_0]
		newatom      [20, 15, 'disconnect_links'.'use'_0]
		newatom      [21, 15, 'functional'.'use'_0]
		newatom      [22, 15, 'combine'_2]
		newatom      [23, 15, 'subproc'.'open'_2]
		newatom      [24, 15, 'disconnect_links'_2]
		newatom      [25, 15, 'subproc'.'data'_2]
		newatom      [26, 15, $in_2]
		newatom      [27, 14, 'subproc'.'use'_0]
		newatom      [28, 14, 'del_commas'.'use'_0]
		newatom      [29, 14, 'subproc'.'open'_2]
		newatom      [30, 14, 'del_commas'_2]
		newatom      [31, 14, $out_2]
		newatom      [32, 14, $in_2]
		newatom      [33, 0, $out_2]
		alloclink    [34, 33, 1]
		alloclink    [35, 33, 0]
		alloclink    [36, 32, 0]
		alloclink    [37, 31, 0]
		alloclink    [38, 26, 0]
		alloclink    [39, 31, 1]
		alloclink    [40, 30, 0]
		alloclink    [41, 32, 1]
		alloclink    [42, 29, 1]
		alloclink    [43, 30, 1]
		alloclink    [44, 29, 0]
		alloclink    [45, 25, 0]
		alloclink    [46, 25, 1]
		alloclink    [47, 24, 0]
		alloclink    [48, 24, 1]
		alloclink    [49, 23, 0]
		alloclink    [50, 26, 1]
		alloclink    [51, 22, 1]
		alloclink    [52, 23, 1]
		alloclink    [53, 22, 0]
		getfromlist  [54, 17, 0]
		unifylinks     [53, 52, 15]
		unifylinks     [51, 50, 15]
		unifylinks     [49, 48, 15]
		unifylinks     [47, 46, 15]
		unifylinks     [45, 54, 15]
		unifylinks     [44, 43, 14]
		unifylinks     [42, 41, 14]
		unifylinks     [40, 39, 14]
		unifylinks     [37, 38, 14]
		unifylinks     [35, 36, 0]
		getlink      [55, 1, 1]
		unifylinks     [34, 55, 0]
		deleteconnectors[11, 18]
		loadmodule     [15, "subproc"]
		loadmodule     [15, "disconnect_links"]
		loadmodule     [15, "functional"]
		loadmodule     [15, "subproc"]
		loadmodule     [15, "subproc"]
		loadmodule     [14, "subproc"]
		loadmodule     [14, "del_commas"]
		loadmodule     [14, "subproc"]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []


Compiled Ruleset @609    
Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'combine'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'pair'_3]
		deref        [3, 2, 1, 1]
		func           [3, 'acc'_2]
		deref        [4, 3, 0, 0]
		func           [4, '[]'_1]
		commit         ["_Rcom", 0]
		removeatom     [1, 0, 'combine'_2]
		removeatom     [2, 0, 'pair'_3]
		removeatom     [3, 0, 'acc'_2]
		removeatom     [4, 0, '[]'_1]
		unify          [1, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 15]
	--memmatch:
		spec           [1, 13]
		findatom     [1, 0, 'combine'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'pair'_3]
		deref        [3, 2, 1, 1]
		func           [3, 'acc'_2]
		deref        [4, 3, 0, 2]
		func           [4, '.'_3]
		commit         ["_Rcom", 0]
		removeatom     [1, 0, 'combine'_2]
		removeatom     [2, 0, 'pair'_3]
		removeatom     [3, 0, 'acc'_2]
		removeatom     [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'symbol'_2]
		newatom      [7, 0, ","_1]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '.'_3]
		newatom      [10, 0, 'commas'_2]
		newatom      [11, 0, '.'_3]
		newatom      [12, 0, '[]'_1]
		newlink        [5, 0, 6, 1, 0]
		newlink        [5, 1, 8, 2, 0]
		relink         [5, 2, 1, 1, 0]
		newlink        [6, 0, 7, 0, 0]
		relink         [8, 0, 2, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 0, 0]
		newlink        [10, 0, 11, 2, 0]
		relink         [11, 0, 4, 0, 0]
		relink         [11, 1, 4, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'commas'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 1, 0]
		func           [3, '[]'_1]
		commit         ["_Rcom", 0]
		removeatom     [1, 0, 'commas'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [3, 0, '[]'_1]
		unify          [1, 1, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'commas'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Rcom", 0]
		removeatom     [1, 0, 'commas'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, 'symbol'_2]
		newatom      [5, 0, ","_1]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'commas'_2]
		newatom      [9, 0, '[]'_1]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 6, 2, 0]
		relink         [3, 2, 1, 1, 0]
		newlink        [4, 0, 5, 0, 0]
		relink         [6, 0, 2, 0, 0]
		newlink        [6, 1, 7, 2, 0]
		newlink        [7, 0, 8, 1, 0]
		newlink        [7, 1, 9, 0, 0]
		relink         [8, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 46]
		findatom     [1, 0, 'disconnect_links'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		getlink      [4, 2, 0]
		newlist      [5]
		addtolist      [5, 4]
		newlist      [6]
		addtolist      [6, 3]
		isground     [7, 5, 6]
		commit         ["_Resd", 0]
		newlist      [8]
		getlink      [9, 2, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'disconnect_links'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeground   [8, 0]
		getlink      [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newmem       [14, 0, 0]
		setmemname     [14, "sub"]
		loadruleset    [14, @601]
		copyground   [15, 12, 14]
		getfromlist  [16, 15, 0]
		getfromlist  [17, 15, 1]
		newatom      [18, 14, 'functional'.'use'_0]
		newatom      [19, 14, 'comma_atom'_1]
		newatom      [20, 14, 'symbol'_2]
		newatom      [21, 14, ","_1]
		newatom      [22, 14, 'pair'_3]
		newatom      [23, 14, 'l0'_2]
		newatom      [24, 14, 'acc'_2]
		newatom      [25, 14, '[]'_1]
		newatom      [26, 14, $in_2]
		newatom      [27, 0, $out_2]
		alloclink    [28, 27, 1]
		alloclink    [29, 27, 0]
		alloclink    [30, 26, 0]
		alloclink    [31, 25, 0]
		alloclink    [32, 24, 0]
		alloclink    [33, 23, 0]
		alloclink    [34, 26, 1]
		alloclink    [35, 22, 2]
		alloclink    [36, 24, 1]
		alloclink    [37, 22, 1]
		alloclink    [38, 23, 1]
		alloclink    [39, 22, 0]
		alloclink    [40, 21, 0]
		alloclink    [41, 20, 0]
		alloclink    [42, 20, 1]
		alloclink    [43, 19, 0]
		getfromlist  [44, 16, 0]
		unifylinks     [43, 42, 14]
		unifylinks     [41, 40, 14]
		unifylinks     [39, 38, 14]
		unifylinks     [37, 36, 14]
		unifylinks     [35, 34, 14]
		unifylinks     [33, 44, 14]
		unifylinks     [32, 31, 14]
		unifylinks     [29, 30, 0]
		getlink      [45, 1, 1]
		unifylinks     [28, 45, 0]
		deleteconnectors[11, 17]
		loadmodule     [14, "functional"]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []


Compiled Ruleset @601            
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'l0'_2]
		deref        [2, 1, 0, 0]
		func           [2, 'null'_1]
		commit         ["_Rl0n", 0]
		removeatom     [1, 0, 'l0'_2]
		removeatom     [2, 0, 'null'_1]
		newatom      [3, 0, 'null'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'l0'_2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		findatom     [3, 0, 'comma_atom'_1]
		getlink      [7, 3, 0]
		newlist      [8]
		addtolist      [8, 5]
		newlist      [9]
		addtolist      [9, 4]
		addtolist      [9, 6]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 7]
		eqground       [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		isground     [13, 11, 12]
		commit         ["_Rl0a", 0]
		newlist      [14]
		getlink      [15, 2, 0]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 3, 0]
		addtolist      [16, 17]
		removeatom     [1, 0, 'l0'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'comma_atom'_1]
		removeground   [14, 0]
		removeground   [16, 0]
		getlink      [18, 2, 0]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 3, 0]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 2, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 3, 0]
		addtolist      [24, 25]
		copyground   [26, 22, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		copyground   [29, 24, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		newatom      [32, 0, 'apply'_3]
		newatom      [33, 0, 'map'_3]
		newatom      [34, 0, 'lambda'_3]
		newatom      [35, 0, 'l0'_2]
		newatom      [36, 0, 'comma_atom'_1]
		alloclink    [37, 36, 0]
		alloclink    [38, 35, 1]
		alloclink    [39, 34, 1]
		alloclink    [40, 35, 0]
		alloclink    [41, 34, 0]
		alloclink    [42, 33, 1]
		alloclink    [43, 34, 2]
		alloclink    [44, 33, 0]
		alloclink    [45, 32, 2]
		alloclink    [46, 33, 2]
		alloclink    [47, 32, 1]
		alloclink    [48, 32, 0]
		getfromlist  [49, 27, 0]
		getfromlist  [50, 30, 0]
		unifylinks     [48, 49, 0]
		unifylinks     [47, 46, 0]
		getlink      [51, 1, 1]
		unifylinks     [45, 51, 0]
		unifylinks     [44, 43, 0]
		getlink      [52, 2, 1]
		unifylinks     [42, 52, 0]
		unifylinks     [41, 40, 0]
		unifylinks     [39, 38, 0]
		unifylinks     [37, 50, 0]
		deleteconnectors[19, 28]
		deleteconnectors[21, 31]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [22]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 53]
		findatom     [1, 0, 'l0'_2]
		getlink      [4, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		getlink      [6, 2, 1]
		getlink      [5, 2, 0]
		findatom     [3, 0, 'comma_atom'_1]
		getlink      [7, 3, 0]
		newlist      [8]
		addtolist      [8, 5]
		newlist      [9]
		addtolist      [9, 4]
		addtolist      [9, 6]
		addtolist      [9, 7]
		isground     [10, 8, 9]
		newlist      [11]
		addtolist      [11, 7]
		neqground      [8, 11]
		newlist      [12]
		addtolist      [12, 4]
		addtolist      [12, 5]
		addtolist      [12, 6]
		isground     [13, 11, 12]
		commit         ["_Rl0a", 0]
		newlist      [14]
		getlink      [15, 2, 0]
		addtolist      [14, 15]
		newlist      [16]
		getlink      [17, 3, 0]
		addtolist      [16, 17]
		removeatom     [1, 0, 'l0'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'comma_atom'_1]
		removeground   [14, 0]
		removeground   [16, 0]
		getlink      [18, 2, 0]
		insertconnectorsinnull[19, [18]]
		getlink      [20, 3, 0]
		insertconnectorsinnull[21, [20]]
		newlist      [22]
		getlink      [23, 2, 0]
		addtolist      [22, 23]
		newlist      [24]
		getlink      [25, 3, 0]
		addtolist      [24, 25]
		copyground   [26, 22, 0]
		getfromlist  [27, 26, 0]
		getfromlist  [28, 26, 1]
		copyground   [29, 24, 0]
		getfromlist  [30, 29, 0]
		getfromlist  [31, 29, 1]
		newatom      [32, 0, 'apply'_3]
		newatom      [33, 0, 'map'_3]
		newatom      [34, 0, 'lambda'_3]
		newatom      [35, 0, 'l1'_2]
		newatom      [36, 0, 'comma_atom'_1]
		alloclink    [37, 36, 0]
		alloclink    [38, 35, 1]
		alloclink    [39, 34, 1]
		alloclink    [40, 35, 0]
		alloclink    [41, 34, 0]
		alloclink    [42, 33, 1]
		alloclink    [43, 34, 2]
		alloclink    [44, 33, 0]
		alloclink    [45, 32, 2]
		alloclink    [46, 33, 2]
		alloclink    [47, 32, 1]
		alloclink    [48, 32, 0]
		getfromlist  [49, 27, 0]
		getfromlist  [50, 30, 0]
		unifylinks     [48, 49, 0]
		unifylinks     [47, 46, 0]
		getlink      [51, 1, 1]
		unifylinks     [45, 51, 0]
		unifylinks     [44, 43, 0]
		getlink      [52, 2, 1]
		unifylinks     [42, 52, 0]
		unifylinks     [41, 40, 0]
		unifylinks     [39, 38, 0]
		unifylinks     [37, 50, 0]
		deleteconnectors[19, 28]
		deleteconnectors[21, 31]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeground     [22]
		freeground     [24]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'l0'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'atom'_2]
		commit         ["_Rl0a", 0]
		removeatom     [1, 0, 'l0'_2]
		removeatom     [2, 0, 'atom'_2]
		newatom      [3, 0, 'atom'_2]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'l0'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'process_context'_3]
		commit         ["_Rl0p", 0]
		removeatom     [1, 0, 'l0'_2]
		removeatom     [2, 0, 'process_context'_3]
		newatom      [3, 0, 'process_context'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'l1'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		commit         ["_Rl1a", 0]
		removeatom     [1, 0, 'l1'_2]
		removeatom     [2, 0, 'apply'_3]
		newatom      [3, 0, 'l2'_2]
		newatom      [4, 0, 'apply'_3]
		newatom      [5, 0, 'map'_3]
		newatom      [6, 0, 'lambda'_3]
		newatom      [7, 0, 'l1'_2]
		newlink        [3, 0, 4, 2, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [4, 0, 2, 0, 0]
		newlink        [4, 1, 5, 2, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 2, 1, 0]
		newlink        [6, 0, 7, 0, 0]
		newlink        [6, 1, 7, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'l1'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'atom'_2]
		commit         ["_Rl1a", 0]
		removeatom     [1, 0, 'l1'_2]
		removeatom     [2, 0, 'atom'_2]
		newatom      [3, 0, 'l2'_2]
		newatom      [4, 0, 'atom'_2]
		newlink        [3, 0, 4, 1, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [4, 0, 2, 0, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'l1'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'process_context'_3]
		deref        [3, 2, 1, 0]
		func           [3, 'none'_1]
		commit         ["_Rl1p", 0]
		removeatom     [1, 0, 'l1'_2]
		removeatom     [2, 0, 'process_context'_3]
		removeatom     [3, 0, 'none'_1]
		newatom      [4, 0, 'l2'_2]
		newatom      [5, 0, 'process_context'_3]
		newatom      [6, 0, 'none'_1]
		newlink        [4, 0, 5, 2, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [5, 0, 2, 0, 0]
		newlink        [5, 1, 6, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'l1'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'variable'_3]
		commit         ["_Rl1v", 0]
		removeatom     [1, 0, 'l1'_2]
		removeatom     [2, 0, 'variable'_3]
		newatom      [3, 0, 'variable'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 52]
		findatom     [1, 0, 'l2'_2]
		getlink      [5, 1, 1]
		deref        [2, 1, 0, 2]
		func           [2, 'apply'_3]
		getlink      [7, 2, 1]
		getlink      [6, 2, 0]
		findatom     [3, 0, 'acc'_2]
		getlink      [9, 3, 1]
		getlink      [8, 3, 0]
		findatom     [4, 0, '[]'_1]
		getlink      [10, 4, 0]
		newlist      [11]
		addtolist      [11, 10]
		addtolist      [11, 7]
		newlist      [12]
		addtolist      [12, 5]
		addtolist      [12, 6]
		addtolist      [12, 8]
		addtolist      [12, 9]
		isground     [13, 11, 12]
		commit         ["_Rl2a", 0]
		newlist      [14]
		getlink      [15, 4, 0]
		addtolist      [14, 15]
		getlink      [16, 2, 1]
		addtolist      [14, 16]
		removeatom     [1, 0, 'l2'_2]
		removeatom     [2, 0, 'apply'_3]
		removeatom     [3, 0, 'acc'_2]
		removeatom     [4, 0, '[]'_1]
		removeground   [14, 0]
		getlink      [17, 4, 0]
		getlink      [18, 2, 1]
		insertconnectorsinnull[19, [17, 18]]
		newlist      [20]
		getlink      [21, 4, 0]
		addtolist      [20, 21]
		getlink      [22, 2, 1]
		addtolist      [20, 22]
		copyground   [23, 20, 0]
		getfromlist  [24, 23, 0]
		getfromlist  [25, 23, 1]
		newatom      [26, 0, 'genlink'_2]
		newatom      [27, 0, 'acc'_2]
		newatom      [28, 0, '.'_3]
		newatom      [29, 0, 'apply'_3]
		newatom      [30, 0, '.'_3]
		newatom      [31, 0, '[]'_1]
		alloclink    [32, 30, 2]
		alloclink    [33, 31, 0]
		alloclink    [34, 30, 1]
		alloclink    [35, 29, 1]
		alloclink    [36, 29, 0]
		alloclink    [37, 28, 1]
		alloclink    [38, 29, 2]
		alloclink    [39, 28, 0]
		alloclink    [40, 27, 1]
		alloclink    [41, 28, 2]
		alloclink    [42, 27, 0]
		alloclink    [43, 26, 1]
		alloclink    [44, 30, 0]
		alloclink    [45, 26, 0]
		getfromlist  [46, 24, 0]
		getfromlist  [47, 24, 1]
		unifylinks     [45, 44, 0]
		getlink      [48, 1, 1]
		unifylinks     [43, 48, 0]
		unifylinks     [42, 41, 0]
		getlink      [49, 3, 1]
		unifylinks     [40, 49, 0]
		unifylinks     [39, 38, 0]
		getlink      [50, 3, 0]
		unifylinks     [37, 50, 0]
		getlink      [51, 2, 0]
		unifylinks     [36, 51, 0]
		unifylinks     [35, 47, 0]
		unifylinks     [34, 33, 0]
		unifylinks     [32, 46, 0]
		deleteconnectors[19, 25]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeground     [20]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 10]
		findatom     [1, 0, 'l2'_2]
		deref        [2, 1, 0, 1]
		func           [2, 'atom'_2]
		findatom     [3, 0, 'acc'_2]
		commit         ["_Rl2a", 0]
		removeatom     [1, 0, 'l2'_2]
		removeatom     [2, 0, 'atom'_2]
		removeatom     [3, 0, 'acc'_2]
		newatom      [4, 0, 'genlink'_2]
		newatom      [5, 0, 'acc'_2]
		newatom      [6, 0, '.'_3]
		newatom      [7, 0, 'apply'_3]
		newatom      [8, 0, '.'_3]
		newatom      [9, 0, '[]'_1]
		newlink        [4, 0, 8, 0, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		relink         [5, 1, 3, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 3, 0, 0]
		relink         [7, 0, 2, 0, 0]
		newlink        [7, 1, 8, 2, 0]
		newlink        [8, 1, 9, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 18]
		findatom     [1, 0, 'l2'_2]
		deref        [2, 1, 0, 2]
		func           [2, 'process_context'_3]
		deref        [3, 2, 1, 0]
		func           [3, 'none'_1]
		findatom     [4, 0, 'acc'_2]
		commit         ["_Rl2p", 0]
		removeatom     [1, 0, 'l2'_2]
		removeatom     [2, 0, 'process_context'_3]
		removeatom     [3, 0, 'none'_1]
		removeatom     [4, 0, 'acc'_2]
		newatom      [5, 0, 'genlink'_2]
		newatom      [6, 0, 'acc'_2]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'process_context'_3]
		newatom      [9, 0, 'apply'_3]
		newatom      [10, 0, 'symbol'_2]
		newatom      [11, 0, "::"_1]
		newatom      [12, 0, '.'_3]
		newatom      [13, 0, '.'_3]
		newatom      [14, 0, 'atom'_2]
		newatom      [15, 0, 'symbol'_2]
		newatom      [16, 0, "[]"_1]
		newatom      [17, 0, '[]'_1]
		newlink        [5, 0, 12, 0, 0]
		relink         [5, 1, 1, 1, 0]
		newlink        [6, 0, 7, 2, 0]
		relink         [6, 1, 4, 1, 0]
		newlink        [7, 0, 8, 2, 0]
		relink         [7, 1, 4, 0, 0]
		relink         [8, 0, 2, 0, 0]
		newlink        [8, 1, 9, 2, 0]
		newlink        [9, 0, 10, 1, 0]
		newlink        [9, 1, 12, 2, 0]
		newlink        [10, 0, 11, 0, 0]
		newlink        [12, 1, 13, 2, 0]
		newlink        [13, 0, 14, 1, 0]
		newlink        [13, 1, 17, 0, 0]
		newlink        [14, 0, 15, 1, 0]
		newlink        [15, 0, 16, 0, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []


Compiled Ruleset @605 
Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 50]
		findatom     [1, 0, 'del_commas'_2]
		getlink      [3, 1, 1]
		deref        [2, 1, 0, 1]
		func           [2, 'subproc'.'data'_2]
		getlink      [4, 2, 0]
		newlist      [5]
		addtolist      [5, 4]
		newlist      [6]
		addtolist      [6, 3]
		isground     [7, 5, 6]
		commit         ["_Rdel", 0]
		newlist      [8]
		getlink      [9, 2, 0]
		addtolist      [8, 9]
		removeatom     [1, 0, 'del_commas'_2]
		removeatom     [2, 0, 'subproc'.'data'_2]
		removeground   [8, 0]
		getlink      [10, 2, 0]
		insertconnectorsinnull[11, [10]]
		newlist      [12]
		getlink      [13, 2, 0]
		addtolist      [12, 13]
		newmem       [14, 0, 0]
		setmemname     [14, "sub"]
		newmem       [15, 14, 0]
		setmemname     [15, "sub"]
		loadruleset    [15, @603]
		loadruleset    [14, @604]
		copyground   [16, 12, 15]
		getfromlist  [17, 16, 0]
		getfromlist  [18, 16, 1]
		newatom      [19, 15, 'list'.'use'_0]
		newatom      [20, 15, '.'_3]
		newatom      [21, 15, '[]'_1]
		newatom      [22, 15, $in_2]
		newatom      [23, 14, 'subproc'.'open'_0]
		newatom      [24, 14, 'g'_2]
		newatom      [25, 14, 'f'_2]
		newatom      [26, 14, 'subproc'.'open'_2]
		newatom      [27, 14, $out_2]
		newatom      [28, 14, $in_2]
		newatom      [29, 0, $out_2]
		alloclink    [30, 29, 1]
		alloclink    [31, 29, 0]
		alloclink    [32, 28, 0]
		alloclink    [33, 27, 0]
		alloclink    [34, 22, 0]
		alloclink    [35, 27, 1]
		alloclink    [36, 26, 0]
		alloclink    [37, 26, 1]
		alloclink    [38, 25, 0]
		alloclink    [39, 28, 1]
		alloclink    [40, 24, 1]
		alloclink    [41, 25, 1]
		alloclink    [42, 24, 0]
		alloclink    [43, 22, 1]
		alloclink    [44, 20, 2]
		alloclink    [45, 21, 0]
		alloclink    [46, 20, 1]
		alloclink    [47, 20, 0]
		getfromlist  [48, 17, 0]
		unifylinks     [47, 48, 15]
		unifylinks     [46, 45, 15]
		unifylinks     [44, 43, 15]
		unifylinks     [42, 41, 14]
		unifylinks     [40, 39, 14]
		unifylinks     [38, 37, 14]
		unifylinks     [36, 35, 14]
		unifylinks     [33, 34, 14]
		unifylinks     [31, 32, 0]
		getlink      [49, 1, 1]
		unifylinks     [30, 49, 0]
		deleteconnectors[11, 18]
		loadmodule     [15, "list"]
		loadmodule     [14, "subproc"]
		loadmodule     [14, "subproc"]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []


Compiled Ruleset @604       
Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'g'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_RgRn", 0]
		removeatom     [1, 0, 'g'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'null'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'g'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_RgHT", 0]
		removeatom     [1, 0, 'g'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, 'apply'_3]
		newatom      [4, 0, 'symbol'_2]
		newatom      [5, 0, ","_1]
		newatom      [6, 0, '.'_3]
		newlink        [3, 0, 4, 1, 0]
		newlink        [3, 1, 6, 2, 0]
		relink         [3, 2, 1, 1, 0]
		newlink        [4, 0, 5, 0, 0]
		relink         [6, 0, 2, 0, 0]
		relink         [6, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'f'_2]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_RfR", 0]
		removeatom     [1, 0, 'f'_2]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'f'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 0]
		func           [3, 'null'_1]
		commit         ["_Rfnu", 0]
		removeatom     [1, 0, 'f'_2]
		removeatom     [3, 0, 'null'_1]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'f'_2]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'f'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'atom'_2]
		commit         ["_Rfat", 0]
		removeatom     [1, 0, 'f'_2]
		removeatom     [3, 0, 'atom'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'atom'_2]
		newatom      [6, 0, 'f'_2]
		newlink        [4, 0, 5, 1, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'f'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'apply'_3]
		commit         ["_Rfap", 0]
		removeatom     [1, 0, 'f'_2]
		removeatom     [3, 0, 'apply'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'apply'_3]
		newatom      [6, 0, 'f'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'f'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 2]
		func           [3, 'process_context'_3]
		commit         ["_Rfpr", 0]
		removeatom     [1, 0, 'f'_2]
		removeatom     [3, 0, 'process_context'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, '.'_3]
		newatom      [5, 0, 'process_context'_3]
		newatom      [6, 0, 'f'_2]
		newlink        [4, 0, 5, 2, 0]
		newlink        [4, 1, 6, 1, 0]
		relink         [4, 2, 1, 1, 0]
		relink         [5, 0, 3, 0, 0]
		relink         [5, 1, 3, 1, 0]
		relink         [6, 0, 2, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []


Compiled Ruleset @603  
Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'apply'_3]
		deref        [2, 1, 0, 1]
		func           [2, 'symbol'_2]
		deref        [3, 2, 0, 0]
		func           [3, ","_1]
		commit         ["_Rapp", 0]
		removeatom     [1, 0, 'apply'_3]
		removeatom     [2, 0, 'symbol'_2]
		removeatom     [3, 0, ","_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, '.'_3]
		deref        [2, 1, 0, 2]
		neqatom        [2, 1]
		func           [2, '.'_3]
		commit         ["join", 0]
		removeatom     [1, 0, '.'_3]
		removeatom     [2, 0, '.'_3]
		newatom      [3, 0, '.'_3]
		newatom      [4, 0, 'list'.'append'_3]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 4, 2, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Module
'disconnect_links' {@602}
'normalise_syntax' {@612}
'del_commas' {@605}
Inline
