Compiled Ruleset @603 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L917, [0], [], []]
	--guard:L917:
		spec           [1, 1]
		jump           [L910, [0], [], []]
	--body:L910:
		spec           [1, 7]
		commit         ["_init", 0]
		newmem       [1, 0, 0]
		loadruleset    [1, @602]
		newatom      [2, 1, 'module'_1]
		newatom      [3, 1, 'ast'_1]
		newatom      [4, 1, 'subproc'.'use'_0]
		alloclink    [5, 2, 0]
		alloclink    [6, 3, 0]
		unifylinks     [5, 6, 1]
		loadmodule     [1, "subproc"]
		proceed        []


Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 17]
		findatom     [1, 0, 'ast'.'read'_2]
		derefatom    [3, 1, 0]
		getclass     [4, 3]
		allocatom    [2, "port"_1]
		subclass       [4, 2]
		commit         ["_Resa", 0]
		removeatom     [1, 0, 'ast'.'read'_2]
		removeatom     [3, 0]
		newmem       [5, 0, 0]
		setmemname     [5, "sub"]
		loadruleset    [5, @601]
		copyatom     [6, 5, 3]
		newatom      [7, 5, 'scanner'.'use'_0]
		newatom      [8, 5, 'parser'.'use'_0]
		newatom      [9, 5, 'io'.'use'_0]
		newatom      [10, 5, 'parse'_2]
		newatom      [11, 5, 'scan'_3]
		newatom      [12, 5, '[]'_1]
		newatom      [13, 5, 'str'_3]
		newatom      [14, 5, 123_1]
		newatom      [15, 5, $in_2]
		newatom      [16, 0, $out_2]
		newlink        [10, 0, 11, 0, 5]
		newlink        [10, 1, 15, 1, 5]
		newlink        [11, 1, 13, 0, 5]
		newlink        [11, 2, 12, 0, 5]
		newlink        [13, 1, 14, 0, 5]
		newlink        [13, 2, 6, 0, 5]
		newlink        [16, 0, 15, 0, 0]
		relink         [16, 1, 1, 1, 0]
		loadmodule     [5, "scanner"]
		loadmodule     [5, "parser"]
		loadmodule     [5, "io"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []


Compiled Ruleset @601              
Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'terminated'_0]
		findatom     [2, 0, 'chartypetable'_1]
		commit         ["_term", 0]
		removeatom     [1, 0, 'terminated'_0]
		removeatom     [2, 0, 'chartypetable'_1]
		newatom      [3, 0, 'array'.'free'_1]
		relink         [3, 0, 2, 0, 0]
		loadmodule     [0, "array"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 19]
	--memmatch:
		spec           [1, 63]
		findatom     [1, 0, 'normal'_2]
		getlink      [11, 1, 1]
		getlink      [10, 1, 0]
		findatom     [2, 0, 'preops'_1]
		getlink      [12, 2, 0]
		findatom     [3, 0, 'inops'_1]
		getlink      [13, 3, 0]
		findatom     [4, 0, 'postops'_1]
		getlink      [14, 4, 0]
		findatom     [5, 0, 'preop_modifiers'_1]
		getlink      [15, 5, 0]
		findatom     [6, 0, 'postop_modifiers'_1]
		getlink      [16, 6, 0]
		anymem       [7, 0, 0, null]
		natoms         [7, 2]
		nmems          [7, 0]
		findatom     [8, 7, 'module'_1]
		deref        [9, 8, 0, 0]
		func           [9, 'parser'_1]
		newlist      [17]
		addtolist      [17, 12]
		newlist      [18]
		addtolist      [18, 10]
		addtolist      [18, 11]
		addtolist      [18, 13]
		addtolist      [18, 14]
		addtolist      [18, 15]
		addtolist      [18, 16]
		isground     [19, 17, 18]
		newlist      [20]
		addtolist      [20, 13]
		newlist      [21]
		addtolist      [21, 10]
		addtolist      [21, 11]
		addtolist      [21, 12]
		addtolist      [21, 14]
		addtolist      [21, 15]
		addtolist      [21, 16]
		isground     [22, 20, 21]
		newlist      [23]
		addtolist      [23, 14]
		newlist      [24]
		addtolist      [24, 10]
		addtolist      [24, 11]
		addtolist      [24, 12]
		addtolist      [24, 13]
		addtolist      [24, 15]
		addtolist      [24, 16]
		isground     [25, 23, 24]
		newlist      [26]
		addtolist      [26, 15]
		newlist      [27]
		addtolist      [27, 10]
		addtolist      [27, 11]
		addtolist      [27, 12]
		addtolist      [27, 13]
		addtolist      [27, 14]
		addtolist      [27, 16]
		isground     [28, 26, 27]
		newlist      [29]
		addtolist      [29, 16]
		newlist      [30]
		addtolist      [30, 10]
		addtolist      [30, 11]
		addtolist      [30, 12]
		addtolist      [30, 13]
		addtolist      [30, 14]
		addtolist      [30, 15]
		isground     [31, 29, 30]
		commit         ["_Rnor", 0]
		newlist      [32]
		getlink      [33, 2, 0]
		addtolist      [32, 33]
		newlist      [34]
		getlink      [35, 4, 0]
		addtolist      [34, 35]
		newlist      [36]
		getlink      [37, 5, 0]
		addtolist      [36, 37]
		newlist      [38]
		getlink      [39, 3, 0]
		addtolist      [38, 39]
		newlist      [40]
		getlink      [41, 6, 0]
		addtolist      [40, 41]
		removeatom     [1, 0, 'normal'_2]
		removeatom     [2, 0, 'preops'_1]
		removeatom     [3, 0, 'inops'_1]
		removeatom     [4, 0, 'postops'_1]
		removeatom     [5, 0, 'preop_modifiers'_1]
		removeatom     [6, 0, 'postop_modifiers'_1]
		removeatom     [8, 7, 'module'_1]
		removeatom     [9, 7, 'parser'_1]
		removeground   [32, 0]
		removeground   [38, 0]
		removeground   [34, 0]
		removeground   [36, 0]
		removeground   [40, 0]
		removemem      [7, 0]
		getlink      [42, 2, 0]
		insertconnectorsinnull[43, [42]]
		getlink      [44, 3, 0]
		insertconnectorsinnull[45, [44]]
		getlink      [46, 4, 0]
		insertconnectorsinnull[47, [46]]
		getlink      [48, 5, 0]
		insertconnectorsinnull[49, [48]]
		getlink      [50, 6, 0]
		insertconnectorsinnull[51, [50]]
		newlist      [52]
		getlink      [53, 2, 0]
		addtolist      [52, 53]
		newlist      [54]
		getlink      [55, 4, 0]
		addtolist      [54, 55]
		newlist      [56]
		getlink      [57, 5, 0]
		addtolist      [56, 57]
		newlist      [58]
		getlink      [59, 3, 0]
		addtolist      [58, 59]
		newlist      [60]
		getlink      [61, 6, 0]
		addtolist      [60, 61]
		newatom      [62, 0, 'normal'_2]
		relink         [62, 0, 1, 0, 0]
		relink         [62, 1, 1, 1, 0]
		freemem        [7]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [5]
		freeatom       [6]
		freeatom       [8]
		freeatom       [9]
		freeground     [52]
		freeground     [58]
		freeground     [54]
		freeground     [56]
		freeground     [60]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'normal'_2]
		anymem       [2, 0, 0, null]
		natoms         [2, 2]
		nmems          [2, 0]
		findatom     [3, 2, 'module'_1]
		deref        [4, 3, 0, 0]
		func           [4, 'scanner'_1]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normal'_2]
		removeatom     [3, 2, 'module'_1]
		removeatom     [4, 2, 'scanner'_1]
		removemem      [2, 0]
		newatom      [5, 0, 'normal'_2]
		relink         [5, 0, 1, 0, 0]
		relink         [5, 1, 1, 1, 0]
		freemem        [2]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 28]
	--memmatch:
		spec           [1, 15]
		findatom     [1, 0, 'normal'_2]
		findatom     [2, 0, 'minus'_1]
		deref        [3, 2, 0, 0]
		func           [3, "-"_1]
		findatom     [4, 0, 'dollar'_1]
		deref        [5, 4, 0, 0]
		func           [5, "$"_1]
		findatom     [6, 0, 'lbracket'_1]
		deref        [7, 6, 0, 0]
		func           [7, '['_1]
		findatom     [8, 0, 'rbracket'_1]
		deref        [9, 8, 0, 0]
		func           [9, ']'_1]
		findatom     [10, 0, 'lparen'_1]
		deref        [11, 10, 0, 0]
		func           [11, '('_1]
		findatom     [12, 0, 'lbrace'_1]
		deref        [13, 12, 0, 0]
		func           [13, '{'_1]
		commit         ["_Rnor", 0]
		removeatom     [1, 0, 'normal'_2]
		removeatom     [2, 0, 'minus'_1]
		removeatom     [4, 0, 'dollar'_1]
		removeatom     [6, 0, 'lbracket'_1]
		removeatom     [7, 0, '['_1]
		removeatom     [8, 0, 'rbracket'_1]
		removeatom     [9, 0, ']'_1]
		removeatom     [10, 0, 'lparen'_1]
		removeatom     [11, 0, '('_1]
		removeatom     [12, 0, 'lbrace'_1]
		removeatom     [13, 0, '{'_1]
		removeatom     [3, 0, "-"_1]
		removeatom     [5, 0, "$"_1]
		newatom      [14, 0, 'normal'_2]
		relink         [14, 0, 1, 0, 0]
		relink         [14, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [6]
		freeatom       [7]
		freeatom       [8]
		freeatom       [9]
		freeatom       [10]
		freeatom       [11]
		freeatom       [12]
		freeatom       [13]
		freeatom       [3]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 16]
	--memmatch:
		spec           [1, 42]
		findatom     [1, 0, 'error'_3]
		getlink      [10, 1, 2]
		getlink      [9, 1, 1]
		getlink      [8, 1, 0]
		findatom     [2, 0, 'preops'_1]
		getlink      [11, 2, 0]
		findatom     [3, 0, 'inops'_1]
		getlink      [12, 3, 0]
		findatom     [4, 0, 'postops'_1]
		getlink      [13, 4, 0]
		anymem       [5, 0, 0, null]
		natoms         [5, 2]
		nmems          [5, 0]
		findatom     [6, 5, 'module'_1]
		deref        [7, 6, 0, 0]
		func           [7, 'parser'_1]
		newlist      [14]
		addtolist      [14, 11]
		newlist      [15]
		addtolist      [15, 8]
		addtolist      [15, 9]
		addtolist      [15, 10]
		addtolist      [15, 12]
		addtolist      [15, 13]
		isground     [16, 14, 15]
		newlist      [17]
		addtolist      [17, 12]
		newlist      [18]
		addtolist      [18, 8]
		addtolist      [18, 9]
		addtolist      [18, 10]
		addtolist      [18, 11]
		addtolist      [18, 13]
		isground     [19, 17, 18]
		newlist      [20]
		addtolist      [20, 13]
		newlist      [21]
		addtolist      [21, 8]
		addtolist      [21, 9]
		addtolist      [21, 10]
		addtolist      [21, 11]
		addtolist      [21, 12]
		isground     [22, 20, 21]
		commit         ["_Rerr", 0]
		newlist      [23]
		getlink      [24, 4, 0]
		addtolist      [23, 24]
		newlist      [25]
		getlink      [26, 2, 0]
		addtolist      [25, 26]
		newlist      [27]
		getlink      [28, 3, 0]
		addtolist      [27, 28]
		removeatom     [1, 0, 'error'_3]
		removeatom     [2, 0, 'preops'_1]
		removeatom     [3, 0, 'inops'_1]
		removeatom     [4, 0, 'postops'_1]
		removeatom     [6, 5, 'module'_1]
		removeatom     [7, 5, 'parser'_1]
		removeground   [25, 0]
		removeground   [27, 0]
		removeground   [23, 0]
		removemem      [5, 0]
		getlink      [29, 2, 0]
		insertconnectorsinnull[30, [29]]
		getlink      [31, 3, 0]
		insertconnectorsinnull[32, [31]]
		getlink      [33, 4, 0]
		insertconnectorsinnull[34, [33]]
		newlist      [35]
		getlink      [36, 4, 0]
		addtolist      [35, 36]
		newlist      [37]
		getlink      [38, 2, 0]
		addtolist      [37, 38]
		newlist      [39]
		getlink      [40, 3, 0]
		addtolist      [39, 40]
		newatom      [41, 0, 'error'_3]
		relink         [41, 0, 1, 0, 0]
		relink         [41, 1, 1, 1, 0]
		relink         [41, 2, 1, 2, 0]
		freemem        [5]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeatom       [6]
		freeatom       [7]
		freeground     [37]
		freeground     [39]
		freeground     [35]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'error'_3]
		anymem       [2, 0, 0, null]
		natoms         [2, 2]
		nmems          [2, 0]
		findatom     [3, 2, 'module'_1]
		deref        [4, 3, 0, 0]
		func           [4, 'scanner'_1]
		commit         ["_Rerr", 0]
		removeatom     [1, 0, 'error'_3]
		removeatom     [3, 2, 'module'_1]
		removeatom     [4, 2, 'scanner'_1]
		removemem      [2, 0]
		newatom      [5, 0, 'error'_3]
		relink         [5, 0, 1, 0, 0]
		relink         [5, 1, 1, 1, 0]
		relink         [5, 2, 1, 2, 0]
		freemem        [2]
		freeatom       [1]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 29]
	--memmatch:
		spec           [1, 15]
		findatom     [1, 0, 'error'_3]
		findatom     [2, 0, 'minus'_1]
		deref        [3, 2, 0, 0]
		func           [3, "-"_1]
		findatom     [4, 0, 'dollar'_1]
		deref        [5, 4, 0, 0]
		func           [5, "$"_1]
		findatom     [6, 0, 'lbracket'_1]
		deref        [7, 6, 0, 0]
		func           [7, '['_1]
		findatom     [8, 0, 'rbracket'_1]
		deref        [9, 8, 0, 0]
		func           [9, ']'_1]
		findatom     [10, 0, 'lparen'_1]
		deref        [11, 10, 0, 0]
		func           [11, '('_1]
		findatom     [12, 0, 'lbrace'_1]
		deref        [13, 12, 0, 0]
		func           [13, '{'_1]
		commit         ["_Rerr", 0]
		removeatom     [1, 0, 'error'_3]
		removeatom     [2, 0, 'minus'_1]
		removeatom     [4, 0, 'dollar'_1]
		removeatom     [6, 0, 'lbracket'_1]
		removeatom     [7, 0, '['_1]
		removeatom     [8, 0, 'rbracket'_1]
		removeatom     [9, 0, ']'_1]
		removeatom     [10, 0, 'lparen'_1]
		removeatom     [11, 0, '('_1]
		removeatom     [12, 0, 'lbrace'_1]
		removeatom     [13, 0, '{'_1]
		removeatom     [3, 0, "-"_1]
		removeatom     [5, 0, "$"_1]
		newatom      [14, 0, 'error'_3]
		relink         [14, 0, 1, 0, 0]
		relink         [14, 1, 1, 1, 0]
		relink         [14, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [6]
		freeatom       [7]
		freeatom       [8]
		freeatom       [9]
		freeatom       [10]
		freeatom       [11]
		freeatom       [12]
		freeatom       [13]
		freeatom       [3]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 4]
		findatom     [1, 0, 'str'_3]
		deref        [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_strS", 0]
		removeatom     [1, 0, 'str'_3]
		removeatom     [2, 0, '[]'_1]
		newatom      [3, 0, 'str_rest'_2]
		relink         [3, 0, 1, 1, 0]
		relink         [3, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'str'_3]
		derefatom    [5, 1, 1]
		isint          [5]
		allocatom    [4, -1_1]
		ieq            [5, 4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'getc'_2]
		commit         ["_strg", 0]
		removeatom     [1, 0, 'str'_3]
		removeatom     [3, 0, 'getc'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		newatom      [6, 0, 125_1]
		newatom      [7, 0, 'str2'_3]
		newatom      [8, 0, -1_1]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 2, 1, 0]
		newlink        [7, 1, 8, 0, 0]
		relink         [7, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 9]
		findatom     [1, 0, 'str'_3]
		derefatom    [5, 1, 1]
		isint          [5]
		allocatom    [4, -1_1]
		ine            [5, 4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'getc'_2]
		commit         ["_strg", 0]
		removeatom     [1, 0, 'str'_3]
		removeatom     [3, 0, 'getc'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		copyatom     [6, 0, 5]
		newatom      [7, 0, 'io'.'read_byte'_3]
		newatom      [8, 0, 'str'_3]
		relink         [7, 0, 1, 2, 0]
		newlink        [7, 1, 8, 2, 0]
		newlink        [7, 2, 8, 1, 0]
		relink         [8, 0, 2, 1, 0]
		relink         [6, 0, 3, 0, 0]
		loadmodule     [0, "io"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [5]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'str'_3]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'ungetc'_2]
		commit         ["_stru", 0]
		removeatom     [1, 0, 'str'_3]
		removeatom     [3, 0, 'ungetc'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 'io'.'unread_byte'_3]
		newatom      [5, 0, 'str'_3]
		relink         [4, 0, 1, 2, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 2, 0]
		relink         [5, 0, 2, 1, 0]
		relink         [5, 1, 3, 0, 0]
		loadmodule     [0, "io"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 8]
		findatom     [1, 0, 'str2'_3]
		derefatom    [5, 1, 1]
		isint          [5]
		allocatom    [4, -1_1]
		ieq            [5, 4]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'getc'_2]
		commit         ["_str2", 0]
		removeatom     [1, 0, 'str2'_3]
		removeatom     [3, 0, 'getc'_2]
		removeatom     [2, 0, '.'_3]
		removeatom     [5, 0]
		newatom      [6, 0, 46_1]
		newatom      [7, 0, 'str2a'_2]
		relink         [6, 0, 3, 0, 0]
		relink         [7, 0, 2, 1, 0]
		relink         [7, 1, 1, 2, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 6]
		findatom     [1, 0, 'str2a'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'getc'_2]
		commit         ["_str2", 0]
		removeatom     [1, 0, 'str2a'_2]
		removeatom     [3, 0, 'getc'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, 32_1]
		newatom      [5, 0, 'str2b'_2]
		relink         [4, 0, 3, 0, 0]
		relink         [5, 0, 2, 1, 0]
		relink         [5, 1, 1, 1, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 7]
		findatom     [1, 0, 'str2b'_2]
		deref        [2, 1, 0, 2]
		func           [2, '.'_3]
		deref        [3, 2, 0, 1]
		func           [3, 'getc'_2]
		commit         ["_str2", 0]
		removeatom     [1, 0, 'str2b'_2]
		removeatom     [3, 0, 'getc'_2]
		removeatom     [2, 0, '.'_3]
		newatom      [4, 0, -1_1]
		newatom      [5, 0, 'str3'_1]
		newatom      [6, 0, 'io'.'free_port'_1]
		relink         [4, 0, 3, 0, 0]
		relink         [5, 0, 2, 1, 0]
		relink         [6, 0, 1, 1, 0]
		loadmodule     [0, "io"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []


Module
'ast' {@602}
Inline
